/* Capstone Disassembly Engine, https://www.capstone-engine.org */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013-2022, */
/*    Rot127 <unisono@quyllur.org> 2022-2024 */
/* Automatically generated file by Capstone's LLVM TableGen Disassembler Backend. */

/* LLVM-commit: <commit> */
/* LLVM-tag: <tag> */

/* Do not edit. */

/* Capstone's LLVM TableGen Backends: */
/* https://github.com/capstone-engine/llvm-capstone */

#include <capstone/platform.h>
#include "../../cs_priv.h"

/// getMnemonic - This method is automatically generated by tablegen
/// from the instruction set description.
static MnemonicBitsInfo getMnemonic(MCInst *MI, SStream *O) {
#ifndef CAPSTONE_DIET
  static const char AsmStrs[] = {
  /* 0 */ "wur.fcr \t\0"
  /* 10 */ "call0\t\0"
  /* 17 */ "callx0\t\0"
  /* 25 */ "call12\t\0"
  /* 33 */ "callx12\t\0"
  /* 42 */ "subx2\t\0"
  /* 49 */ "addx2\t\0"
  /* 56 */ "call4\t\0"
  /* 63 */ "subx4\t\0"
  /* 70 */ "addx4\t\0"
  /* 77 */ "callx4\t\0"
  /* 85 */ "any4\t\0"
  /* 91 */ "call8\t\0"
  /* 98 */ "subx8\t\0"
  /* 105 */ "addx8\t\0"
  /* 112 */ "callx8\t\0"
  /* 120 */ "any8\t\0"
  /* 126 */ "sra\t\0"
  /* 131 */ "nsa\t\0"
  /* 136 */ "andb\t\0"
  /* 142 */ "wdtlb\t\0"
  /* 149 */ "witlb\t\0"
  /* 156 */ "xorb\t\0"
  /* 162 */ "sub\t\0"
  /* 167 */ "bbc\t\0"
  /* 172 */ "andbc\t\0"
  /* 179 */ "orbc\t\0"
  /* 185 */ "ee.zero.qacc\t\0"
  /* 199 */ "src\t\0"
  /* 204 */ "add\t\0"
  /* 209 */ "and\t\0"
  /* 214 */ "l32e\t\0"
  /* 220 */ "s32e\t\0"
  /* 226 */ "bge\t\0"
  /* 231 */ "bne\t\0"
  /* 236 */ "bnone\t\0"
  /* 243 */ "bf\t\0"
  /* 247 */ "movf\t\0"
  /* 253 */ "neg\t\0"
  /* 258 */ "mula.aa.hh\t\0"
  /* 270 */ "umul.aa.hh\t\0"
  /* 282 */ "muls.aa.hh\t\0"
  /* 294 */ "mula.da.hh\t\0"
  /* 306 */ "mul.da.hh\t\0"
  /* 317 */ "muls.da.hh\t\0"
  /* 329 */ "mula.ad.hh\t\0"
  /* 341 */ "mul.ad.hh\t\0"
  /* 352 */ "muls.ad.hh\t\0"
  /* 364 */ "mula.dd.hh\t\0"
  /* 376 */ "mul.dd.hh\t\0"
  /* 387 */ "muls.dd.hh\t\0"
  /* 399 */ "mula.aa.lh\t\0"
  /* 411 */ "umul.aa.lh\t\0"
  /* 423 */ "muls.aa.lh\t\0"
  /* 435 */ "mula.da.lh\t\0"
  /* 447 */ "mul.da.lh\t\0"
  /* 458 */ "muls.da.lh\t\0"
  /* 470 */ "mula.ad.lh\t\0"
  /* 482 */ "mul.ad.lh\t\0"
  /* 493 */ "muls.ad.lh\t\0"
  /* 505 */ "mula.dd.lh\t\0"
  /* 517 */ "mul.dd.lh\t\0"
  /* 528 */ "muls.dd.lh\t\0"
  /* 540 */ "mulsh\t\0"
  /* 547 */ "muluh\t\0"
  /* 554 */ "s32c1i\t\0"
  /* 562 */ "_l32i\t\0"
  /* 569 */ "_s32i\t\0"
  /* 576 */ "s16i\t\0"
  /* 582 */ "s8i\t\0"
  /* 587 */ "srai\t\0"
  /* 593 */ "ssai\t\0"
  /* 599 */ "bbci\t\0"
  /* 605 */ "addi\t\0"
  /* 611 */ "bgei\t\0"
  /* 617 */ "bnei\t\0"
  /* 623 */ "rfi\t\0"
  /* 628 */ "_slli\t\0"
  /* 635 */ "_srli\t\0"
  /* 642 */ "addmi\t\0"
  /* 649 */ "beqi\t\0"
  /* 655 */ "l16si\t\0"
  /* 662 */ "bbsi\t\0"
  /* 668 */ "lsi\t\0"
  /* 673 */ "ssi\t\0"
  /* 678 */ "waiti\t\0"
  /* 685 */ "blti\t\0"
  /* 691 */ "l16ui\t\0"
  /* 698 */ "l8ui\t\0"
  /* 704 */ "bgeui\t\0"
  /* 711 */ "bltui\t\0"
  /* 718 */ "extui\t\0"
  /* 725 */ "_movi\t\0"
  /* 732 */ "j\t\0"
  /* 735 */ "break\t\0"
  /* 742 */ "ssa8l\t\0"
  /* 749 */ "mula.aa.hl\t\0"
  /* 761 */ "umul.aa.hl\t\0"
  /* 773 */ "muls.aa.hl\t\0"
  /* 785 */ "mula.da.hl\t\0"
  /* 797 */ "mul.da.hl\t\0"
  /* 808 */ "muls.da.hl\t\0"
  /* 820 */ "mula.ad.hl\t\0"
  /* 832 */ "mul.ad.hl\t\0"
  /* 843 */ "muls.ad.hl\t\0"
  /* 855 */ "mula.dd.hl\t\0"
  /* 867 */ "mul.dd.hl\t\0"
  /* 878 */ "muls.dd.hl\t\0"
  /* 890 */ "rsil\t\0"
  /* 896 */ "mula.aa.ll\t\0"
  /* 908 */ "umul.aa.ll\t\0"
  /* 920 */ "muls.aa.ll\t\0"
  /* 932 */ "mula.da.ll\t\0"
  /* 944 */ "mul.da.ll\t\0"
  /* 955 */ "muls.da.ll\t\0"
  /* 967 */ "mula.ad.ll\t\0"
  /* 979 */ "mul.ad.ll\t\0"
  /* 990 */ "muls.ad.ll\t\0"
  /* 1002 */ "mula.dd.ll\t\0"
  /* 1014 */ "mul.dd.ll\t\0"
  /* 1025 */ "muls.dd.ll\t\0"
  /* 1037 */ "ball\t\0"
  /* 1043 */ "bnall\t\0"
  /* 1050 */ "sll\t\0"
  /* 1055 */ "mull\t\0"
  /* 1061 */ "srl\t\0"
  /* 1066 */ "ssl\t\0"
  /* 1071 */ "add.n\t\0"
  /* 1078 */ "_l32i.n\t\0"
  /* 1087 */ "_s32i.n\t\0"
  /* 1096 */ "addi.n\t\0"
  /* 1104 */ "movi.n\t\0"
  /* 1112 */ "break.n\t\0"
  /* 1121 */ "mov.n\t\0"
  /* 1128 */ "ee.get_gpio_in\t\0"
  /* 1144 */ "min\t\0"
  /* 1149 */ "lsip\t\0"
  /* 1155 */ "ssip\t\0"
  /* 1161 */ "loop\t\0"
  /* 1167 */ "movsp\t\0"
  /* 1174 */ "lsxp\t\0"
  /* 1180 */ "ssxp\t\0"
  /* 1186 */ "beq\t\0"
  /* 1191 */ "l32r\t\0"
  /* 1197 */ "rer\t\0"
  /* 1202 */ "wer\t\0"
  /* 1207 */ "rfr\t\0"
  /* 1212 */ "wfr\t\0"
  /* 1217 */ "xor\t\0"
  /* 1222 */ "rsr\t\0"
  /* 1227 */ "ssr\t\0"
  /* 1232 */ "wsr\t\0"
  /* 1237 */ "xsr\t\0"
  /* 1242 */ "rur\t\0"
  /* 1247 */ "wur\t\0"
  /* 1252 */ "recip0.s\t\0"
  /* 1262 */ "rsqrt0.s\t\0"
  /* 1272 */ "div0.s\t\0"
  /* 1280 */ "nexp01.s\t\0"
  /* 1290 */ "msub.s\t\0"
  /* 1298 */ "utrunc.s\t\0"
  /* 1308 */ "madd.s\t\0"
  /* 1316 */ "round.s\t\0"
  /* 1325 */ "ole.s\t\0"
  /* 1332 */ "ule.s\t\0"
  /* 1339 */ "movf.s\t\0"
  /* 1347 */ "neg.s\t\0"
  /* 1354 */ "mkdadj.s\t\0"
  /* 1364 */ "mksadj.s\t\0"
  /* 1374 */ "ceil.s\t\0"
  /* 1382 */ "mul.s\t\0"
  /* 1389 */ "addexpm.s\t\0"
  /* 1400 */ "maddn.s\t\0"
  /* 1409 */ "un.s\t\0"
  /* 1415 */ "divn.s\t\0"
  /* 1423 */ "addexp.s\t\0"
  /* 1433 */ "oeq.s\t\0"
  /* 1440 */ "ueq.s\t\0"
  /* 1447 */ "floor.s\t\0"
  /* 1456 */ "abs.s\t\0"
  /* 1463 */ "ufloat.s\t\0"
  /* 1473 */ "olt.s\t\0"
  /* 1480 */ "ult.s\t\0"
  /* 1487 */ "const.s\t\0"
  /* 1496 */ "movt.s\t\0"
  /* 1504 */ "mov.s\t\0"
  /* 1511 */ "movgez.s\t\0"
  /* 1521 */ "movnez.s\t\0"
  /* 1531 */ "moveqz.s\t\0"
  /* 1541 */ "movltz.s\t\0"
  /* 1551 */ "mul16s\t\0"
  /* 1559 */ "abs\t\0"
  /* 1564 */ "bbs\t\0"
  /* 1569 */ "rems\t\0"
  /* 1575 */ "quos\t\0"
  /* 1581 */ "clamps\t\0"
  /* 1589 */ "bt\t\0"
  /* 1593 */ "blt\t\0"
  /* 1598 */ "ee.wr_mask_gpio_out\t\0"
  /* 1619 */ "ee.clr_bit_gpio_out\t\0"
  /* 1640 */ "ee.set_bit_gpio_out\t\0"
  /* 1661 */ "movt\t\0"
  /* 1667 */ "sext\t\0"
  /* 1673 */ "mul16u\t\0"
  /* 1681 */ "nsau\t\0"
  /* 1687 */ "bgeu\t\0"
  /* 1693 */ "remu\t\0"
  /* 1699 */ "minu\t\0"
  /* 1705 */ "quou\t\0"
  /* 1711 */ "bltu\t\0"
  /* 1717 */ "maxu\t\0"
  /* 1723 */ "rotw\t\0"
  /* 1729 */ "max\t\0"
  /* 1734 */ "ee.zero.accx\t\0"
  /* 1748 */ "jx\t\0"
  /* 1752 */ "lsx\t\0"
  /* 1757 */ "ssx\t\0"
  /* 1762 */ "bany\t\0"
  /* 1768 */ "entry\t\0"
  /* 1775 */ "bgez\t\0"
  /* 1781 */ "movgez\t\0"
  /* 1789 */ "bnez\t\0"
  /* 1795 */ "loopnez\t\0"
  /* 1804 */ "movnez\t\0"
  /* 1812 */ "beqz\t\0"
  /* 1818 */ "moveqz\t\0"
  /* 1826 */ "loopgtz\t\0"
  /* 1835 */ "bltz\t\0"
  /* 1841 */ "movltz\t\0"
  /* 1849 */ "rur.ua_state_0\t \0"
  /* 1866 */ "wur.ua_state_0\t \0"
  /* 1883 */ "rur.qacc_h_0\t \0"
  /* 1898 */ "wur.qacc_h_0\t \0"
  /* 1913 */ "rur.qacc_l_0\t \0"
  /* 1928 */ "wur.qacc_l_0\t \0"
  /* 1943 */ "rur.accx_0\t \0"
  /* 1956 */ "wur.accx_0\t \0"
  /* 1969 */ "rur.ua_state_1\t \0"
  /* 1986 */ "wur.ua_state_1\t \0"
  /* 2003 */ "rur.qacc_h_1\t \0"
  /* 2018 */ "wur.qacc_h_1\t \0"
  /* 2033 */ "rur.qacc_l_1\t \0"
  /* 2048 */ "wur.qacc_l_1\t \0"
  /* 2063 */ "rur.accx_1\t \0"
  /* 2076 */ "wur.accx_1\t \0"
  /* 2089 */ "ee.vldbc.32\t \0"
  /* 2103 */ "ee.vsl.32\t \0"
  /* 2115 */ "ee.vunzip.32\t \0"
  /* 2130 */ "ee.vzip.32\t \0"
  /* 2143 */ "ee.ldxq.32\t \0"
  /* 2156 */ "ee.stxq.32\t \0"
  /* 2169 */ "ee.vsr.32\t \0"
  /* 2181 */ "ee.vmin.s32\t \0"
  /* 2195 */ "ee.vcmp.eq.s32\t \0"
  /* 2212 */ "ee.vsubs.s32\t \0"
  /* 2227 */ "ee.vadds.s32\t \0"
  /* 2242 */ "ee.vcmp.gt.s32\t \0"
  /* 2259 */ "ee.vcmp.lt.s32\t \0"
  /* 2276 */ "ee.vmax.s32\t \0"
  /* 2290 */ "rur.ua_state_2\t \0"
  /* 2307 */ "wur.ua_state_2\t \0"
  /* 2324 */ "rur.qacc_h_2\t \0"
  /* 2339 */ "wur.qacc_h_2\t \0"
  /* 2354 */ "rur.qacc_l_2\t \0"
  /* 2369 */ "wur.qacc_l_2\t \0"
  /* 2384 */ "rur.ua_state_3\t \0"
  /* 2401 */ "wur.ua_state_3\t \0"
  /* 2418 */ "rur.qacc_h_3\t \0"
  /* 2433 */ "wur.qacc_h_3\t \0"
  /* 2448 */ "rur.qacc_l_3\t \0"
  /* 2463 */ "wur.qacc_l_3\t \0"
  /* 2478 */ "rur.qacc_h_4\t \0"
  /* 2493 */ "wur.qacc_h_4\t \0"
  /* 2508 */ "rur.qacc_l_4\t \0"
  /* 2523 */ "wur.qacc_l_4\t \0"
  /* 2538 */ "ee.vldbc.16\t \0"
  /* 2552 */ "ee.vunzip.16\t \0"
  /* 2567 */ "ee.vzip.16\t \0"
  /* 2580 */ "ee.fft.r2bf.s16\t \0"
  /* 2598 */ "ee.cmul.s16\t \0"
  /* 2612 */ "ee.vmul.s16\t \0"
  /* 2626 */ "ee.vmin.s16\t \0"
  /* 2640 */ "ee.vcmp.eq.s16\t \0"
  /* 2657 */ "ee.vsubs.s16\t \0"
  /* 2672 */ "ee.vadds.s16\t \0"
  /* 2687 */ "ee.vcmp.gt.s16\t \0"
  /* 2704 */ "ee.vcmp.lt.s16\t \0"
  /* 2721 */ "ee.vprelu.s16\t \0"
  /* 2737 */ "ee.vrelu.s16\t \0"
  /* 2752 */ "ee.vmax.s16\t \0"
  /* 2766 */ "ee.vmul.u16\t \0"
  /* 2780 */ "ee.vldbc.8\t \0"
  /* 2793 */ "ee.vunzip.8\t \0"
  /* 2807 */ "ee.vzip.8\t \0"
  /* 2819 */ "ee.vmul.s8\t \0"
  /* 2832 */ "ee.vmin.s8\t \0"
  /* 2845 */ "ee.vcmp.eq.s8\t \0"
  /* 2861 */ "ee.vsubs.s8\t \0"
  /* 2875 */ "ee.vadds.s8\t \0"
  /* 2889 */ "ee.vcmp.gt.s8\t \0"
  /* 2905 */ "ee.vcmp.lt.s8\t \0"
  /* 2921 */ "ee.vprelu.s8\t \0"
  /* 2936 */ "ee.vrelu.s8\t \0"
  /* 2950 */ "ee.vmax.s8\t \0"
  /* 2963 */ "ee.vmul.u8\t \0"
  /* 2976 */ "ee.movi.32.a\t \0"
  /* 2991 */ "ee.srcmb.s16.qacc\t \0"
  /* 3011 */ "ee.vsmulas.s16.qacc\t \0"
  /* 3033 */ "ee.vmulas.s16.qacc\t \0"
  /* 3054 */ "ee.mov.s16.qacc\t \0"
  /* 3072 */ "ee.vmulas.u16.qacc\t \0"
  /* 3093 */ "ee.mov.u16.qacc\t \0"
  /* 3111 */ "ee.srcmb.s8.qacc\t \0"
  /* 3130 */ "ee.vsmulas.s8.qacc\t \0"
  /* 3151 */ "ee.vmulas.s8.qacc\t \0"
  /* 3171 */ "ee.mov.s8.qacc\t \0"
  /* 3188 */ "ee.vmulas.u8.qacc\t \0"
  /* 3208 */ "ee.mov.u8.qacc\t \0"
  /* 3225 */ "mula.da.hh.lddec\t \0"
  /* 3244 */ "mula.dd.hh.lddec\t \0"
  /* 3263 */ "mula.da.lh.lddec\t \0"
  /* 3282 */ "mula.dd.lh.lddec\t \0"
  /* 3301 */ "mula.da.hl.lddec\t \0"
  /* 3320 */ "mula.dd.hl.lddec\t \0"
  /* 3339 */ "mula.da.ll.lddec\t \0"
  /* 3358 */ "mula.dd.ll.lddec\t \0"
  /* 3377 */ "mula.da.hh.ldinc\t \0"
  /* 3396 */ "mula.dd.hh.ldinc\t \0"
  /* 3415 */ "mula.da.lh.ldinc\t \0"
  /* 3434 */ "mula.dd.lh.ldinc\t \0"
  /* 3453 */ "mula.da.hl.ldinc\t \0"
  /* 3472 */ "mula.dd.hl.ldinc\t \0"
  /* 3491 */ "mula.da.ll.ldinc\t \0"
  /* 3510 */ "mula.dd.ll.ldinc\t \0"
  /* 3529 */ "rur.sar_byte\t \0"
  /* 3544 */ "wur.sar_byte\t \0"
  /* 3559 */ "rur.fft_bit_width\t \0"
  /* 3579 */ "wur.fft_bit_width\t \0"
  /* 3599 */ "ee.fft.ams.s16.ld.r32.decp\t \0"
  /* 3628 */ "ee.fft.vst.r32.decp\t \0"
  /* 3650 */ "ee.vldhbc.16.incp\t \0"
  /* 3670 */ "ee.vmulas.s16.qacc.ldbc.incp\t \0"
  /* 3701 */ "ee.vmulas.u16.qacc.ldbc.incp\t \0"
  /* 3732 */ "ee.vmulas.s8.qacc.ldbc.incp\t \0"
  /* 3762 */ "ee.vmulas.u8.qacc.ldbc.incp\t \0"
  /* 3792 */ "ee.vmin.s32.ld.incp\t \0"
  /* 3814 */ "ee.vsubs.s32.ld.incp\t \0"
  /* 3837 */ "ee.vadds.s32.ld.incp\t \0"
  /* 3860 */ "ee.vmax.s32.ld.incp\t \0"
  /* 3882 */ "ee.cmul.s16.ld.incp\t \0"
  /* 3904 */ "ee.vmul.s16.ld.incp\t \0"
  /* 3926 */ "ee.vmin.s16.ld.incp\t \0"
  /* 3948 */ "ee.vsubs.s16.ld.incp\t \0"
  /* 3971 */ "ee.vadds.s16.ld.incp\t \0"
  /* 3994 */ "ee.fft.ams.s16.ld.incp\t \0"
  /* 4019 */ "ee.vmax.s16.ld.incp\t \0"
  /* 4041 */ "ee.vmul.u16.ld.incp\t \0"
  /* 4063 */ "ee.vmul.s8.ld.incp\t \0"
  /* 4084 */ "ee.vmin.s8.ld.incp\t \0"
  /* 4105 */ "ee.vsubs.s8.ld.incp\t \0"
  /* 4127 */ "ee.vadds.s8.ld.incp\t \0"
  /* 4149 */ "ee.vmax.s8.ld.incp\t \0"
  /* 4170 */ "ee.vmul.u8.ld.incp\t \0"
  /* 4191 */ "ee.vsmulas.s16.qacc.ld.incp\t \0"
  /* 4221 */ "ee.vsmulas.s8.qacc.ld.incp\t \0"
  /* 4250 */ "ee.vmin.s32.st.incp\t \0"
  /* 4272 */ "ee.vsubs.s32.st.incp\t \0"
  /* 4295 */ "ee.vadds.s32.st.incp\t \0"
  /* 4318 */ "ee.vmax.s32.st.incp\t \0"
  /* 4340 */ "ee.fft.r2bf.s16.st.incp\t \0"
  /* 4366 */ "ee.cmul.s16.st.incp\t \0"
  /* 4388 */ "ee.vmul.s16.st.incp\t \0"
  /* 4410 */ "ee.vmin.s16.st.incp\t \0"
  /* 4432 */ "ee.vsubs.s16.st.incp\t \0"
  /* 4455 */ "ee.vadds.s16.st.incp\t \0"
  /* 4478 */ "ee.fft.ams.s16.st.incp\t \0"
  /* 4503 */ "ee.vmax.s16.st.incp\t \0"
  /* 4525 */ "ee.vmul.u16.st.incp\t \0"
  /* 4547 */ "ee.srcq.128.st.incp\t \0"
  /* 4569 */ "ee.vmul.s8.st.incp\t \0"
  /* 4590 */ "ee.vmin.s8.st.incp\t \0"
  /* 4611 */ "ee.vsubs.s8.st.incp\t \0"
  /* 4633 */ "ee.vadds.s8.st.incp\t \0"
  /* 4655 */ "ee.vmax.s8.st.incp\t \0"
  /* 4676 */ "ee.vmul.u8.st.incp\t \0"
  /* 4697 */ "ee.vldbc.32.ip\t \0"
  /* 4714 */ "ee.ld.qacc_h.h.32.ip\t \0"
  /* 4737 */ "ee.st.qacc_h.h.32.ip\t \0"
  /* 4760 */ "ee.ld.qacc_l.h.32.ip\t \0"
  /* 4783 */ "ee.st.qacc_l.h.32.ip\t \0"
  /* 4806 */ "ee.ldf.64.ip\t \0"
  /* 4821 */ "ee.stf.64.ip\t \0"
  /* 4836 */ "ee.vld.h.64.ip\t \0"
  /* 4853 */ "ee.vst.h.64.ip\t \0"
  /* 4870 */ "ee.vld.l.64.ip\t \0"
  /* 4887 */ "ee.vst.l.64.ip\t \0"
  /* 4904 */ "ee.vldbc.16.ip\t \0"
  /* 4921 */ "ee.vldbc.8.ip\t \0"
  /* 4937 */ "ee.ldqa.s16.128.ip\t \0"
  /* 4958 */ "ee.ldqa.u16.128.ip\t \0"
  /* 4979 */ "ee.ldqa.s8.128.ip\t \0"
  /* 4999 */ "ee.ldqa.u8.128.ip\t \0"
  /* 5019 */ "ee.vld.128.ip\t \0"
  /* 5035 */ "ee.ldf.128.ip\t \0"
  /* 5051 */ "ee.stf.128.ip\t \0"
  /* 5067 */ "ee.ld.qacc_h.l.128.ip\t \0"
  /* 5091 */ "ee.st.qacc_h.l.128.ip\t \0"
  /* 5115 */ "ee.ld.qacc_l.l.128.ip\t \0"
  /* 5139 */ "ee.st.qacc_l.l.128.ip\t \0"
  /* 5163 */ "ee.vst.128.ip\t \0"
  /* 5179 */ "ee.vmulas.s16.qacc.ld.ip\t \0"
  /* 5206 */ "ee.vmulas.u16.qacc.ld.ip\t \0"
  /* 5233 */ "ee.vmulas.s8.qacc.ld.ip\t \0"
  /* 5259 */ "ee.vmulas.u8.qacc.ld.ip\t \0"
  /* 5285 */ "ee.src.q.ld.ip\t \0"
  /* 5302 */ "ee.vmulas.s16.accx.ld.ip\t \0"
  /* 5329 */ "ee.vmulas.u16.accx.ld.ip\t \0"
  /* 5356 */ "ee.vmulas.s8.accx.ld.ip\t \0"
  /* 5382 */ "ee.vmulas.u8.accx.ld.ip\t \0"
  /* 5408 */ "ee.ld.ua_state.ip\t \0"
  /* 5428 */ "ee.st.ua_state.ip\t \0"
  /* 5448 */ "ee.ld.128.usar.ip\t \0"
  /* 5468 */ "ee.ld.accx.ip\t \0"
  /* 5484 */ "ee.st.accx.ip\t \0"
  /* 5500 */ "ee.fft.ams.s16.ld.incp.uaup\t \0"
  /* 5530 */ "ee.vmulas.s16.qacc.ldbc.incp.qup\t \0"
  /* 5565 */ "ee.vmulas.u16.qacc.ldbc.incp.qup\t \0"
  /* 5600 */ "ee.vmulas.s8.qacc.ldbc.incp.qup\t \0"
  /* 5634 */ "ee.vmulas.u8.qacc.ldbc.incp.qup\t \0"
  /* 5668 */ "ee.vmulas.s16.qacc.ld.ip.qup\t \0"
  /* 5699 */ "ee.vmulas.u16.qacc.ld.ip.qup\t \0"
  /* 5730 */ "ee.vmulas.s8.qacc.ld.ip.qup\t \0"
  /* 5760 */ "ee.vmulas.u8.qacc.ld.ip.qup\t \0"
  /* 5790 */ "ee.vmulas.s16.accx.ld.ip.qup\t \0"
  /* 5821 */ "ee.vmulas.u16.accx.ld.ip.qup\t \0"
  /* 5852 */ "ee.vmulas.s8.accx.ld.ip.qup\t \0"
  /* 5882 */ "ee.vmulas.u8.accx.ld.ip.qup\t \0"
  /* 5912 */ "ee.vmulas.s16.qacc.ld.xp.qup\t \0"
  /* 5943 */ "ee.vmulas.u16.qacc.ld.xp.qup\t \0"
  /* 5974 */ "ee.vmulas.s8.qacc.ld.xp.qup\t \0"
  /* 6004 */ "ee.vmulas.u8.qacc.ld.xp.qup\t \0"
  /* 6034 */ "ee.vmulas.s16.accx.ld.xp.qup\t \0"
  /* 6065 */ "ee.vmulas.u16.accx.ld.xp.qup\t \0"
  /* 6096 */ "ee.vmulas.s8.accx.ld.xp.qup\t \0"
  /* 6126 */ "ee.vmulas.u8.accx.ld.xp.qup\t \0"
  /* 6156 */ "ee.src.q.qup\t \0"
  /* 6171 */ "ee.vldbc.32.xp\t \0"
  /* 6188 */ "ee.ldf.64.xp\t \0"
  /* 6203 */ "ee.stf.64.xp\t \0"
  /* 6218 */ "ee.vld.h.64.xp\t \0"
  /* 6235 */ "ee.vst.h.64.xp\t \0"
  /* 6252 */ "ee.vld.l.64.xp\t \0"
  /* 6269 */ "ee.vst.l.64.xp\t \0"
  /* 6286 */ "ee.vldbc.16.xp\t \0"
  /* 6303 */ "ee.vldbc.8.xp\t \0"
  /* 6319 */ "ee.ldqa.s16.128.xp\t \0"
  /* 6340 */ "ee.ldqa.u16.128.xp\t \0"
  /* 6361 */ "ee.ldqa.s8.128.xp\t \0"
  /* 6381 */ "ee.ldqa.u8.128.xp\t \0"
  /* 6401 */ "ee.vld.128.xp\t \0"
  /* 6417 */ "ee.ldf.128.xp\t \0"
  /* 6433 */ "ee.stf.128.xp\t \0"
  /* 6449 */ "ee.vst.128.xp\t \0"
  /* 6465 */ "ee.fft.cmul.s16.ld.xp\t \0"
  /* 6489 */ "ee.vmulas.s16.qacc.ld.xp\t \0"
  /* 6516 */ "ee.vmulas.u16.qacc.ld.xp\t \0"
  /* 6543 */ "ee.vmulas.s8.qacc.ld.xp\t \0"
  /* 6569 */ "ee.vmulas.u8.qacc.ld.xp\t \0"
  /* 6595 */ "ee.src.q.ld.xp\t \0"
  /* 6612 */ "ee.vmulas.s16.accx.ld.xp\t \0"
  /* 6639 */ "ee.vmulas.u16.accx.ld.xp\t \0"
  /* 6666 */ "ee.vmulas.s8.accx.ld.xp\t \0"
  /* 6692 */ "ee.vmulas.u8.accx.ld.xp\t \0"
  /* 6718 */ "ee.ld.128.usar.xp\t \0"
  /* 6738 */ "ee.fft.cmul.s16.st.xp\t \0"
  /* 6762 */ "ee.movi.32.q\t \0"
  /* 6777 */ "ee.src.q\t \0"
  /* 6788 */ "ee.zero.q\t \0"
  /* 6800 */ "ee.slci.2q\t \0"
  /* 6813 */ "ee.srci.2q\t \0"
  /* 6826 */ "ee.slcxxp.2q\t \0"
  /* 6841 */ "ee.srcxxp.2q\t \0"
  /* 6856 */ "ee.andq\t \0"
  /* 6866 */ "ee.orq\t \0"
  /* 6875 */ "ee.xorq\t \0"
  /* 6885 */ "ee.notq\t \0"
  /* 6895 */ "mv.qr\t \0"
  /* 6903 */ "wur.fsr\t \0"
  /* 6913 */ "rur.gpio_out\t \0"
  /* 6928 */ "wur.gpio_out\t \0"
  /* 6943 */ "ee.bitrev\t \0"
  /* 6955 */ "ee.vmulas.s16.accx\t \0"
  /* 6976 */ "ee.vmulas.u16.accx\t \0"
  /* 6997 */ "ee.vmulas.s8.accx\t \0"
  /* 7017 */ "ee.vmulas.u8.accx\t \0"
  /* 7037 */ "ee.srs.accx\t \0"
  /* 7051 */ "!xtensa_wsr_m0_p, \0"
  /* 7070 */ "!xtensa_xsr_m0_p, \0"
  /* 7089 */ "!xtensa_wsr_m1_p, \0"
  /* 7108 */ "!xtensa_xsr_m1_p, \0"
  /* 7127 */ "!atomic_load_sub_32_p, \0"
  /* 7151 */ "!xtensa_ee_vldbc_32_p, \0"
  /* 7175 */ "!atomic_load_add_32_p, \0"
  /* 7199 */ "!atomic_load_and_32_p, \0"
  /* 7223 */ "!atomic_load_nand_32_p, \0"
  /* 7248 */ "!xtensa_ee_vsl_32_p, \0"
  /* 7270 */ "!atomic_load_min_32_p, \0"
  /* 7294 */ "!atomic_load_umin_32_p, \0"
  /* 7319 */ "!atomic_swap_32_p, \0"
  /* 7339 */ "!atomic_cmp_swap_32_p, \0"
  /* 7363 */ "!xtensa_ee_vunzip_32_p, \0"
  /* 7388 */ "!xtensa_ee_vzip_32_p, \0"
  /* 7411 */ "!xtensa_ee_ldxq_32_p, \0"
  /* 7434 */ "!xtensa_ee_stxq_32_p, \0"
  /* 7457 */ "!atomic_load_or_32_p, \0"
  /* 7480 */ "!atomic_load_xor_32_p, \0"
  /* 7504 */ "!xtensa_ee_vsr_32_p, \0"
  /* 7526 */ "!atomic_load_max_32_p, \0"
  /* 7550 */ "!atomic_load_umax_32_p, \0"
  /* 7575 */ "!xtensa_ee_vmin_s32_p, \0"
  /* 7599 */ "!xtensa_ee_vcmp_eq_s32_p, \0"
  /* 7626 */ "!xtensa_ee_vsubs_s32_p, \0"
  /* 7651 */ "!xtensa_ee_vadds_s32_p, \0"
  /* 7676 */ "!xtensa_ee_vcmp_gt_s32_p, \0"
  /* 7703 */ "!xtensa_ee_vcmp_lt_s32_p, \0"
  /* 7730 */ "!xtensa_ee_vmax_s32_p, \0"
  /* 7754 */ "!xtensa_wsr_m2_p, \0"
  /* 7773 */ "!xtensa_xsr_m2_p, \0"
  /* 7792 */ "!xtensa_wsr_m3_p, \0"
  /* 7811 */ "!xtensa_xsr_m3_p, \0"
  /* 7830 */ "!atomic_load_sub_16_p, \0"
  /* 7854 */ "!xtensa_ee_vldbc_16_p, \0"
  /* 7878 */ "!atomic_load_add_16_p, \0"
  /* 7902 */ "!atomic_load_and_16_p, \0"
  /* 7926 */ "!atomic_load_nand_16_p, \0"
  /* 7951 */ "!atomic_load_min_16_p, \0"
  /* 7975 */ "!atomic_load_umin_16_p, \0"
  /* 8000 */ "!atomic_swap_16_p, \0"
  /* 8020 */ "!atomic_cmp_swap_16_p, \0"
  /* 8044 */ "!xtensa_ee_vunzip_16_p, \0"
  /* 8069 */ "!xtensa_ee_vzip_16_p, \0"
  /* 8092 */ "!atomic_load_or_16_p, \0"
  /* 8115 */ "!atomic_load_xor_16_p, \0"
  /* 8139 */ "!atomic_load_max_16_p, \0"
  /* 8163 */ "!atomic_load_umax_16_p, \0"
  /* 8188 */ "!xtensa_ee_fft_r2bf_s16_p, \0"
  /* 8216 */ "!xtensa_ee_cmul_s16_p, \0"
  /* 8240 */ "!xtensa_ee_vmul_s16_p, \0"
  /* 8264 */ "!xtensa_ee_vmin_s16_p, \0"
  /* 8288 */ "!xtensa_ee_vcmp_eq_s16_p, \0"
  /* 8315 */ "!xtensa_ee_vsubs_s16_p, \0"
  /* 8340 */ "!xtensa_ee_vadds_s16_p, \0"
  /* 8365 */ "!xtensa_ee_vcmp_gt_s16_p, \0"
  /* 8392 */ "!xtensa_ee_vcmp_lt_s16_p, \0"
  /* 8419 */ "!xtensa_ee_vprelu_s16_p, \0"
  /* 8445 */ "!xtensa_ee_vrelu_s16_p, \0"
  /* 8470 */ "!xtensa_ee_vmax_s16_p, \0"
  /* 8494 */ "!xtensa_ee_vmul_u16_p, \0"
  /* 8518 */ "!atomic_load_sub_8_p, \0"
  /* 8541 */ "!xtensa_ee_vldbc_8_p, \0"
  /* 8564 */ "!atomic_load_add_8_p, \0"
  /* 8587 */ "!atomic_load_and_8_p, \0"
  /* 8610 */ "!atomic_load_nand_8_p, \0"
  /* 8634 */ "!atomic_load_min_8_p, \0"
  /* 8657 */ "!atomic_load_umin_8_p, \0"
  /* 8681 */ "!atomic_swap_8_p, \0"
  /* 8700 */ "!atomic_cmp_swap_8_p, \0"
  /* 8723 */ "!xtensa_ee_vunzip_8_p, \0"
  /* 8747 */ "!xtensa_ee_vzip_8_p, \0"
  /* 8769 */ "!atomic_load_or_8_p, \0"
  /* 8791 */ "!atomic_load_xor_8_p, \0"
  /* 8814 */ "!atomic_load_max_8_p, \0"
  /* 8837 */ "!atomic_load_umax_8_p, \0"
  /* 8861 */ "!xtensa_ee_vmul_s8_p, \0"
  /* 8884 */ "!xtensa_ee_vmin_s8_p, \0"
  /* 8907 */ "!xtensa_ee_vcmp_eq_s8_p, \0"
  /* 8933 */ "!xtensa_ee_vsubs_s8_p, \0"
  /* 8957 */ "!xtensa_ee_vadds_s8_p, \0"
  /* 8981 */ "!xtensa_ee_vcmp_gt_s8_p, \0"
  /* 9007 */ "!xtensa_ee_vcmp_lt_s8_p, \0"
  /* 9033 */ "!xtensa_ee_vprelu_s8_p, \0"
  /* 9058 */ "!xtensa_ee_vrelu_s8_p, \0"
  /* 9082 */ "!xtensa_ee_vmax_s8_p, \0"
  /* 9105 */ "!xtensa_ee_vmul_u8_p, \0"
  /* 9128 */ "!xtensa_ee_movi_32_a_p, \0"
  /* 9153 */ "!xtensa_ee_srcmb_s16_qacc_p, \0"
  /* 9183 */ "!xtensa_ee_vsmulas_s16_qacc_p, \0"
  /* 9215 */ "!xtensa_ee_vmulas_s16_qacc_p, \0"
  /* 9246 */ "!xtensa_ee_mov_s16_qacc_p, \0"
  /* 9274 */ "!xtensa_ee_vmulas_u16_qacc_p, \0"
  /* 9305 */ "!xtensa_ee_mov_u16_qacc_p, \0"
  /* 9333 */ "!xtensa_ee_srcmb_s8_qacc_p, \0"
  /* 9362 */ "!xtensa_ee_vsmulas_s8_qacc_p, \0"
  /* 9393 */ "!xtensa_ee_vmulas_s8_qacc_p, \0"
  /* 9423 */ "!xtensa_ee_mov_s8_qacc_p, \0"
  /* 9450 */ "!xtensa_ee_vmulas_u8_qacc_p, \0"
  /* 9480 */ "!xtensa_ee_mov_u8_qacc_p, \0"
  /* 9507 */ "!xtensa_lddec_p, \0"
  /* 9525 */ "!xtensa_mula_da_hh_lddec_p, \0"
  /* 9554 */ "!xtensa_mula_dd_hh_lddec_p, \0"
  /* 9583 */ "!xtensa_mula_da_lh_lddec_p, \0"
  /* 9612 */ "!xtensa_mula_dd_lh_lddec_p, \0"
  /* 9641 */ "!xtensa_mula_da_hl_lddec_p, \0"
  /* 9670 */ "!xtensa_mula_dd_hl_lddec_p, \0"
  /* 9699 */ "!xtensa_mula_da_ll_lddec_p, \0"
  /* 9728 */ "!xtensa_mula_dd_ll_lddec_p, \0"
  /* 9757 */ "!xtensa_ldinc_p, \0"
  /* 9775 */ "!xtensa_mula_da_hh_ldinc_p, \0"
  /* 9804 */ "!xtensa_mula_dd_hh_ldinc_p, \0"
  /* 9833 */ "!xtensa_mula_da_lh_ldinc_p, \0"
  /* 9862 */ "!xtensa_mula_dd_lh_ldinc_p, \0"
  /* 9891 */ "!xtensa_mula_da_hl_ldinc_p, \0"
  /* 9920 */ "!xtensa_mula_dd_hl_ldinc_p, \0"
  /* 9949 */ "!xtensa_mula_da_ll_ldinc_p, \0"
  /* 9978 */ "!xtensa_mula_dd_ll_ldinc_p, \0"
  /* 10007 */ "!xtensa_wsr_acchi_p, \0"
  /* 10029 */ "!xtensa_xsr_acchi_p, \0"
  /* 10051 */ "!xtensa_wsr_acclo_p, \0"
  /* 10073 */ "!xtensa_xsr_acclo_p, \0"
  /* 10095 */ "!xtensa_ee_fft_ams_s16_ld_r32_decp_p, \0"
  /* 10134 */ "!xtensa_ee_fft_vst_r32_decp_p, \0"
  /* 10166 */ "!xtensa_ee_vldhbc_16_incp_p, \0"
  /* 10196 */ "!xtensa_ee_vmulas_s16_qacc_ldbc_incp_p, \0"
  /* 10237 */ "!xtensa_ee_vmulas_u16_qacc_ldbc_incp_p, \0"
  /* 10278 */ "!xtensa_ee_vmulas_s8_qacc_ldbc_incp_p, \0"
  /* 10318 */ "!xtensa_ee_vmulas_u8_qacc_ldbc_incp_p, \0"
  /* 10358 */ "!xtensa_ee_vmin_s32_ld_incp_p, \0"
  /* 10390 */ "!xtensa_ee_vsubs_s32_ld_incp_p, \0"
  /* 10423 */ "!xtensa_ee_vadds_s32_ld_incp_p, \0"
  /* 10456 */ "!xtensa_ee_vmax_s32_ld_incp_p, \0"
  /* 10488 */ "!xtensa_ee_cmul_s16_ld_incp_p, \0"
  /* 10520 */ "!xtensa_ee_vmul_s16_ld_incp_p, \0"
  /* 10552 */ "!xtensa_ee_vmin_s16_ld_incp_p, \0"
  /* 10584 */ "!xtensa_ee_vsubs_s16_ld_incp_p, \0"
  /* 10617 */ "!xtensa_ee_vadds_s16_ld_incp_p, \0"
  /* 10650 */ "!xtensa_ee_fft_ams_s16_ld_incp_p, \0"
  /* 10685 */ "!xtensa_ee_vmax_s16_ld_incp_p, \0"
  /* 10717 */ "!xtensa_ee_vmul_u16_ld_incp_p, \0"
  /* 10749 */ "!xtensa_ee_vmul_s8_ld_incp_p, \0"
  /* 10780 */ "!xtensa_ee_vmin_s8_ld_incp_p, \0"
  /* 10811 */ "!xtensa_ee_vsubs_s8_ld_incp_p, \0"
  /* 10843 */ "!xtensa_ee_vadds_s8_ld_incp_p, \0"
  /* 10875 */ "!xtensa_ee_vmax_s8_ld_incp_p, \0"
  /* 10906 */ "!xtensa_ee_vmul_u8_ld_incp_p, \0"
  /* 10937 */ "!xtensa_ee_vsmulas_s16_qacc_ld_incp_p, \0"
  /* 10977 */ "!xtensa_ee_vsmulas_s8_qacc_ld_incp_p, \0"
  /* 11016 */ "!xtensa_ee_vmin_s32_st_incp_p, \0"
  /* 11048 */ "!xtensa_ee_vsubs_s32_st_incp_p, \0"
  /* 11081 */ "!xtensa_ee_vadds_s32_st_incp_p, \0"
  /* 11114 */ "!xtensa_ee_vmax_s32_st_incp_p, \0"
  /* 11146 */ "!xtensa_ee_fft_r2bf_s16_st_incp_p, \0"
  /* 11182 */ "!xtensa_ee_cmul_s16_st_incp_p, \0"
  /* 11214 */ "!xtensa_ee_vmul_s16_st_incp_p, \0"
  /* 11246 */ "!xtensa_ee_vmin_s16_st_incp_p, \0"
  /* 11278 */ "!xtensa_ee_vsubs_s16_st_incp_p, \0"
  /* 11311 */ "!xtensa_ee_vadds_s16_st_incp_p, \0"
  /* 11344 */ "!xtensa_ee_fft_ams_s16_st_incp_p, \0"
  /* 11379 */ "!xtensa_ee_vmax_s16_st_incp_p, \0"
  /* 11411 */ "!xtensa_ee_vmul_u16_st_incp_p, \0"
  /* 11443 */ "!xtensa_ee_srcq_128_st_incp_p, \0"
  /* 11475 */ "!xtensa_ee_vmul_s8_st_incp_p, \0"
  /* 11506 */ "!xtensa_ee_vmin_s8_st_incp_p, \0"
  /* 11537 */ "!xtensa_ee_vsubs_s8_st_incp_p, \0"
  /* 11569 */ "!xtensa_ee_vadds_s8_st_incp_p, \0"
  /* 11601 */ "!xtensa_ee_vmax_s8_st_incp_p, \0"
  /* 11632 */ "!xtensa_ee_vmul_u8_st_incp_p, \0"
  /* 11663 */ "!xtensa_ee_vldbc_32_ip_p, \0"
  /* 11690 */ "!xtensa_ee_ld_qacc_h_h_32_ip_p, \0"
  /* 11723 */ "!xtensa_ee_st_qacc_h_h_32_ip_p, \0"
  /* 11756 */ "!xtensa_ee_ld_qacc_l_h_32_ip_p, \0"
  /* 11789 */ "!xtensa_ee_st_qacc_l_h_32_ip_p, \0"
  /* 11822 */ "!xtensa_ee_ldf_64_ip_p, \0"
  /* 11847 */ "!xtensa_ee_stf_64_ip_p, \0"
  /* 11872 */ "!xtensa_ee_vld_h_64_ip_p, \0"
  /* 11899 */ "!xtensa_ee_vst_h_64_ip_p, \0"
  /* 11926 */ "!xtensa_ee_vld_l_64_ip_p, \0"
  /* 11953 */ "!xtensa_ee_vst_l_64_ip_p, \0"
  /* 11980 */ "!xtensa_ee_vldbc_16_ip_p, \0"
  /* 12007 */ "!xtensa_ee_ldqa_s16_128_ip_p, \0"
  /* 12038 */ "!xtensa_ee_ldqa_u16_128_ip_p, \0"
  /* 12069 */ "!xtensa_ee_ldqa_s8_128_ip_p, \0"
  /* 12099 */ "!xtensa_ee_ldqa_u8_128_ip_p, \0"
  /* 12129 */ "!xtensa_ee_vld_128_ip_p, \0"
  /* 12155 */ "!xtensa_ee_ldf_128_ip_p, \0"
  /* 12181 */ "!xtensa_ee_stf_128_ip_p, \0"
  /* 12207 */ "!xtensa_ee_ld_qacc_h_l_128_ip_p, \0"
  /* 12241 */ "!xtensa_ee_st_qacc_h_l_128_ip_p, \0"
  /* 12275 */ "!xtensa_ee_ld_qacc_l_l_128_ip_p, \0"
  /* 12309 */ "!xtensa_ee_st_qacc_l_l_128_ip_p, \0"
  /* 12343 */ "!xtensa_ee_vst_128_ip_p, \0"
  /* 12369 */ "!xtensa_ee_vldbc_8_ip_p, \0"
  /* 12395 */ "!xtensa_ee_vmulas_s16_qacc_ld_ip_p, \0"
  /* 12432 */ "!xtensa_ee_vmulas_u16_qacc_ld_ip_p, \0"
  /* 12469 */ "!xtensa_ee_vmulas_s8_qacc_ld_ip_p, \0"
  /* 12505 */ "!xtensa_ee_vmulas_u8_qacc_ld_ip_p, \0"
  /* 12541 */ "!xtensa_ee_src_q_ld_ip_p, \0"
  /* 12568 */ "!xtensa_ee_vmulas_s16_accx_ld_ip_p, \0"
  /* 12605 */ "!xtensa_ee_vmulas_u16_accx_ld_ip_p, \0"
  /* 12642 */ "!xtensa_ee_vmulas_s8_accx_ld_ip_p, \0"
  /* 12678 */ "!xtensa_ee_vmulas_u8_accx_ld_ip_p, \0"
  /* 12714 */ "!xtensa_ee_ld_ua_state_ip_p, \0"
  /* 12744 */ "!xtensa_ee_st_ua_state_ip_p, \0"
  /* 12774 */ "!xtensa_ee_ld_128_usar_ip_p, \0"
  /* 12804 */ "!xtensa_ee_ld_accx_ip_p, \0"
  /* 12830 */ "!xtensa_ee_st_accx_ip_p, \0"
  /* 12856 */ "!xtensa_ee_fft_ams_s16_ld_incp_uaup_p, \0"
  /* 12896 */ "!xtensa_ee_vmulas_s16_qacc_ldbc_incp_qup_p, \0"
  /* 12941 */ "!xtensa_ee_vmulas_u16_qacc_ldbc_incp_qup_p, \0"
  /* 12986 */ "!xtensa_ee_vmulas_s8_qacc_ldbc_incp_qup_p, \0"
  /* 13030 */ "!xtensa_ee_vmulas_u8_qacc_ldbc_incp_qup_p, \0"
  /* 13074 */ "!xtensa_ee_vmulas_s16_qacc_ld_ip_qup_p, \0"
  /* 13115 */ "!xtensa_ee_vmulas_u16_qacc_ld_ip_qup_p, \0"
  /* 13156 */ "!xtensa_ee_vmulas_s8_qacc_ld_ip_qup_p, \0"
  /* 13196 */ "!xtensa_ee_vmulas_u8_qacc_ld_ip_qup_p, \0"
  /* 13236 */ "!xtensa_ee_vmulas_s16_accx_ld_ip_qup_p, \0"
  /* 13277 */ "!xtensa_ee_vmulas_u16_accx_ld_ip_qup_p, \0"
  /* 13318 */ "!xtensa_ee_vmulas_s8_accx_ld_ip_qup_p, \0"
  /* 13358 */ "!xtensa_ee_vmulas_u8_accx_ld_ip_qup_p, \0"
  /* 13398 */ "!xtensa_ee_vmulas_s16_qacc_ld_xp_qup_p, \0"
  /* 13439 */ "!xtensa_ee_vmulas_u16_qacc_ld_xp_qup_p, \0"
  /* 13480 */ "!xtensa_ee_vmulas_s8_qacc_ld_xp_qup_p, \0"
  /* 13520 */ "!xtensa_ee_vmulas_u8_qacc_ld_xp_qup_p, \0"
  /* 13560 */ "!xtensa_ee_vmulas_s16_accx_ld_xp_qup_p, \0"
  /* 13601 */ "!xtensa_ee_vmulas_u16_accx_ld_xp_qup_p, \0"
  /* 13642 */ "!xtensa_ee_vmulas_s8_accx_ld_xp_qup_p, \0"
  /* 13682 */ "!xtensa_ee_vmulas_u8_accx_ld_xp_qup_p, \0"
  /* 13722 */ "!xtensa_ee_src_q_qup_p, \0"
  /* 13747 */ "!xtensa_ee_vldbc_32_xp_p, \0"
  /* 13774 */ "!xtensa_ee_ldf_64_xp_p, \0"
  /* 13799 */ "!xtensa_ee_stf_64_xp_p, \0"
  /* 13824 */ "!xtensa_ee_vld_h_64_xp_p, \0"
  /* 13851 */ "!xtensa_ee_vst_h_64_xp_p, \0"
  /* 13878 */ "!xtensa_ee_vld_l_64_xp_p, \0"
  /* 13905 */ "!xtensa_ee_vst_l_64_xp_p, \0"
  /* 13932 */ "!xtensa_ee_vldbc_16_xp_p, \0"
  /* 13959 */ "!xtensa_ee_ldqa_s16_128_xp_p, \0"
  /* 13990 */ "!xtensa_ee_ldqa_u16_128_xp_p, \0"
  /* 14021 */ "!xtensa_ee_ldqa_s8_128_xp_p, \0"
  /* 14051 */ "!xtensa_ee_ldqa_u8_128_xp_p, \0"
  /* 14081 */ "!xtensa_ee_vld_128_xp_p, \0"
  /* 14107 */ "!xtensa_ee_ldf_128_xp_p, \0"
  /* 14133 */ "!xtensa_ee_stf_128_xp_p, \0"
  /* 14159 */ "!xtensa_ee_vst_128_xp_p, \0"
  /* 14185 */ "!xtensa_ee_vldbc_8_xp_p, \0"
  /* 14211 */ "!xtensa_ee_fft_cmul_s16_ld_xp_p, \0"
  /* 14245 */ "!xtensa_ee_vmulas_s16_qacc_ld_xp_p, \0"
  /* 14282 */ "!xtensa_ee_vmulas_u16_qacc_ld_xp_p, \0"
  /* 14319 */ "!xtensa_ee_vmulas_s8_qacc_ld_xp_p, \0"
  /* 14355 */ "!xtensa_ee_vmulas_u8_qacc_ld_xp_p, \0"
  /* 14391 */ "!xtensa_ee_src_q_ld_xp_p, \0"
  /* 14418 */ "!xtensa_ee_vmulas_s16_accx_ld_xp_p, \0"
  /* 14455 */ "!xtensa_ee_vmulas_u16_accx_ld_xp_p, \0"
  /* 14492 */ "!xtensa_ee_vmulas_s8_accx_ld_xp_p, \0"
  /* 14528 */ "!xtensa_ee_vmulas_u8_accx_ld_xp_p, \0"
  /* 14564 */ "!xtensa_ee_ld_128_usar_xp_p, \0"
  /* 14594 */ "!xtensa_ee_fft_cmul_s16_st_xp_p, \0"
  /* 14628 */ "!xtensa_ee_slci_2q_p, \0"
  /* 14651 */ "!xtensa_ee_srci_2q_p, \0"
  /* 14674 */ "!xtensa_ee_slcxxp_2q_p, \0"
  /* 14699 */ "!xtensa_ee_srcxxp_2q_p, \0"
  /* 14724 */ "!xtensa_ee_movi_32_q_p, \0"
  /* 14749 */ "!xtensa_ee_src_q_p, \0"
  /* 14770 */ "!xtensa_ee_zero_q_p, \0"
  /* 14792 */ "!xtensa_ee_andq_p, \0"
  /* 14812 */ "!xtensa_ee_orq_p, \0"
  /* 14831 */ "!xtensa_ee_xorq_p, \0"
  /* 14851 */ "!xtensa_ee_notq_p, \0"
  /* 14871 */ "!xtensa_mv_qr_p, \0"
  /* 14889 */ "!br_jt_p, \0"
  /* 14900 */ "!xtensa_ee_bitrev_p, \0"
  /* 14922 */ "!xtensa_ee_vmulas_s16_accx_p, \0"
  /* 14953 */ "!xtensa_ee_vmulas_u16_accx_p, \0"
  /* 14984 */ "!xtensa_ee_vmulas_s8_accx_p, \0"
  /* 15014 */ "!xtensa_ee_vmulas_u8_accx_p, \0"
  /* 15044 */ "!xtensa_ee_srs_accx_p, \0"
  /* 15068 */ "ae_movad16.0 \0"
  /* 15082 */ "ae_nsaz16.0 \0"
  /* 15095 */ "ae_mulaf16ss.00 \0"
  /* 15112 */ "ae_mulf16ss.00 \0"
  /* 15128 */ "ae_mulsf16ss.00 \0"
  /* 15145 */ "ae_mulaafd16ss.11_00 \0"
  /* 15167 */ "ae_mulzaafd16ss.11_00 \0"
  /* 15190 */ "ae_mulssfd16ss.11_00 \0"
  /* 15212 */ "ae_mulzssfd16ss.11_00 \0"
  /* 15235 */ "ae_sext32x2d16.10 \0"
  /* 15254 */ "ae_cvt32x2f16.10 \0"
  /* 15272 */ "ae_mulaf16ss.10 \0"
  /* 15289 */ "ae_mulf16ss.10 \0"
  /* 15305 */ "ae_mulsf16ss.10 \0"
  /* 15322 */ "ae_mulaf16ss.20 \0"
  /* 15339 */ "ae_mulf16ss.20 \0"
  /* 15355 */ "ae_mulsf16ss.20 \0"
  /* 15372 */ "ae_mulaf16ss.30 \0"
  /* 15389 */ "ae_mulf16ss.30 \0"
  /* 15405 */ "ae_mulsf16ss.30 \0"
  /* 15422 */ "rur.ae_cend0 \0"
  /* 15436 */ "wur.ae_cend0 \0"
  /* 15450 */ "ae_mula32x16.h0 \0"
  /* 15467 */ "ae_mulaf32x16.h0 \0"
  /* 15485 */ "ae_mulf32x16.h0 \0"
  /* 15502 */ "ae_mulsf32x16.h0 \0"
  /* 15520 */ "ae_mul32x16.h0 \0"
  /* 15536 */ "ae_muls32x16.h0 \0"
  /* 15553 */ "ae_mulaad32x16.h1.l0 \0"
  /* 15575 */ "ae_mulzaad32x16.h1.l0 \0"
  /* 15598 */ "ae_mulsad32x16.h1.l0 \0"
  /* 15620 */ "ae_mulzsad32x16.h1.l0 \0"
  /* 15643 */ "ae_mulaafd32x16.h1.l0 \0"
  /* 15666 */ "ae_mulzaafd32x16.h1.l0 \0"
  /* 15690 */ "ae_mulsafd32x16.h1.l0 \0"
  /* 15713 */ "ae_mulzsafd32x16.h1.l0 \0"
  /* 15737 */ "ae_mulasfd32x16.h1.l0 \0"
  /* 15760 */ "ae_mulzasfd32x16.h1.l0 \0"
  /* 15784 */ "ae_mulssfd32x16.h1.l0 \0"
  /* 15807 */ "ae_mulzssfd32x16.h1.l0 \0"
  /* 15831 */ "ae_mulasd32x16.h1.l0 \0"
  /* 15853 */ "ae_mulzasd32x16.h1.l0 \0"
  /* 15876 */ "ae_mulssd32x16.h1.l0 \0"
  /* 15898 */ "ae_mulzssd32x16.h1.l0 \0"
  /* 15921 */ "ae_mula32x16.l0 \0"
  /* 15938 */ "ae_mulaf32x16.l0 \0"
  /* 15956 */ "ae_mulf32x16.l0 \0"
  /* 15973 */ "ae_mulsf32x16.l0 \0"
  /* 15991 */ "ae_mul32x16.l0 \0"
  /* 16007 */ "ae_muls32x16.l0 \0"
  /* 16024 */ "rur.ae_cbegin0 \0"
  /* 16040 */ "wur.ae_cbegin0 \0"
  /* 16056 */ "ae_movad16.1 \0"
  /* 16070 */ "ae_mulaf16ss.11 \0"
  /* 16087 */ "ae_mulf16ss.11 \0"
  /* 16103 */ "ae_mulsf16ss.11 \0"
  /* 16120 */ "ae_mulaf16ss.21 \0"
  /* 16137 */ "ae_mulf16ss.21 \0"
  /* 16153 */ "ae_mulsf16ss.21 \0"
  /* 16170 */ "ae_mulaf16ss.31 \0"
  /* 16187 */ "ae_mulf16ss.31 \0"
  /* 16203 */ "ae_mulsf16ss.31 \0"
  /* 16220 */ "ae_mula32x16.h1 \0"
  /* 16237 */ "ae_mulaf32x16.h1 \0"
  /* 16255 */ "ae_mulf32x16.h1 \0"
  /* 16272 */ "ae_mulsf32x16.h1 \0"
  /* 16290 */ "ae_mul32x16.h1 \0"
  /* 16306 */ "ae_muls32x16.h1 \0"
  /* 16323 */ "ae_mulaad32x16.h0.l1 \0"
  /* 16345 */ "ae_mulzaad32x16.h0.l1 \0"
  /* 16368 */ "ae_mulaafd32x16.h0.l1 \0"
  /* 16391 */ "ae_mulzaafd32x16.h0.l1 \0"
  /* 16415 */ "ae_mula32x16.l1 \0"
  /* 16432 */ "ae_mulaf32x16.l1 \0"
  /* 16450 */ "ae_mulf32x16.l1 \0"
  /* 16467 */ "ae_mulsf32x16.l1 \0"
  /* 16485 */ "ae_mul32x16.l1 \0"
  /* 16501 */ "ae_muls32x16.l1 \0"
  /* 16518 */ "ae_movad16.2 \0"
  /* 16532 */ "ae_mulaafd16ss.13_02 \0"
  /* 16554 */ "ae_mulzaafd16ss.13_02 \0"
  /* 16577 */ "ae_mulssfd16ss.13_02 \0"
  /* 16599 */ "ae_mulzssfd16ss.13_02 \0"
  /* 16622 */ "ae_mulaf16ss.22 \0"
  /* 16639 */ "ae_mulf16ss.22 \0"
  /* 16655 */ "ae_mulsf16ss.22 \0"
  /* 16672 */ "ae_mulaafd16ss.33_22 \0"
  /* 16694 */ "ae_mulzaafd16ss.33_22 \0"
  /* 16717 */ "ae_mulssfd16ss.33_22 \0"
  /* 16739 */ "ae_mulzssfd16ss.33_22 \0"
  /* 16762 */ "ae_sext32x2d16.32 \0"
  /* 16781 */ "ae_cvt32x2f16.32 \0"
  /* 16799 */ "ae_mulaf16ss.32 \0"
  /* 16816 */ "ae_mulf16ss.32 \0"
  /* 16832 */ "ae_mulsf16ss.32 \0"
  /* 16849 */ "ae_sra64_32 \0"
  /* 16862 */ "ae_cvt64a32 \0"
  /* 16875 */ "ae_cvt48a32 \0"
  /* 16888 */ "ae_slaa32 \0"
  /* 16899 */ "ae_sraa32 \0"
  /* 16910 */ "ae_addbrba32 \0"
  /* 16924 */ "ae_movda32 \0"
  /* 16936 */ "ae_sha32 \0"
  /* 16946 */ "ae_srla32 \0"
  /* 16957 */ "ae_sub32 \0"
  /* 16967 */ "ae_addsub32 \0"
  /* 16980 */ "ae_add32 \0"
  /* 16990 */ "ae_subadd32 \0"
  /* 17003 */ "ae_le32 \0"
  /* 17012 */ "ae_neg32 \0"
  /* 17022 */ "ae_slai32 \0"
  /* 17033 */ "ae_srai32 \0"
  /* 17044 */ "ae_srli32 \0"
  /* 17055 */ "ae_min32 \0"
  /* 17065 */ "ae_eq32 \0"
  /* 17074 */ "ae_pksr32 \0"
  /* 17085 */ "ae_slas32 \0"
  /* 17096 */ "ae_sras32 \0"
  /* 17107 */ "ae_abs32 \0"
  /* 17117 */ "ae_srls32 \0"
  /* 17128 */ "ae_lt32 \0"
  /* 17137 */ "ae_sext32 \0"
  /* 17148 */ "ae_max32 \0"
  /* 17158 */ "!movba2 \0"
  /* 17167 */ "ae_mula32x16.h2 \0"
  /* 17184 */ "ae_mulaf32x16.h2 \0"
  /* 17202 */ "ae_mulf32x16.h2 \0"
  /* 17219 */ "ae_mulsf32x16.h2 \0"
  /* 17237 */ "ae_mul32x16.h2 \0"
  /* 17253 */ "ae_muls32x16.h2 \0"
  /* 17270 */ "ae_mulaad32x16.h3.l2 \0"
  /* 17292 */ "ae_mulzaad32x16.h3.l2 \0"
  /* 17315 */ "ae_mulsad32x16.h3.l2 \0"
  /* 17337 */ "ae_mulzsad32x16.h3.l2 \0"
  /* 17360 */ "ae_mulaafd32x16.h3.l2 \0"
  /* 17383 */ "ae_mulzaafd32x16.h3.l2 \0"
  /* 17407 */ "ae_mulsafd32x16.h3.l2 \0"
  /* 17430 */ "ae_mulzsafd32x16.h3.l2 \0"
  /* 17454 */ "ae_mulasfd32x16.h3.l2 \0"
  /* 17477 */ "ae_mulzasfd32x16.h3.l2 \0"
  /* 17501 */ "ae_mulssfd32x16.h3.l2 \0"
  /* 17524 */ "ae_mulzssfd32x16.h3.l2 \0"
  /* 17548 */ "ae_mulasd32x16.h3.l2 \0"
  /* 17570 */ "ae_mulzasd32x16.h3.l2 \0"
  /* 17593 */ "ae_mulssd32x16.h3.l2 \0"
  /* 17615 */ "ae_mulzssd32x16.h3.l2 \0"
  /* 17638 */ "ae_mula32x16.l2 \0"
  /* 17655 */ "ae_mulaf32x16.l2 \0"
  /* 17673 */ "ae_mulf32x16.l2 \0"
  /* 17690 */ "ae_mulsf32x16.l2 \0"
  /* 17708 */ "ae_mul32x16.l2 \0"
  /* 17724 */ "ae_muls32x16.l2 \0"
  /* 17741 */ "!extui_br2 \0"
  /* 17753 */ "ae_mulaf16ss.00_s2 \0"
  /* 17773 */ "ae_mulf16ss.00_s2 \0"
  /* 17792 */ "ae_mulsf16ss.00_s2 \0"
  /* 17812 */ "ae_mulaafd16ss.11_00_s2 \0"
  /* 17837 */ "ae_mulzaafd16ss.11_00_s2 \0"
  /* 17863 */ "ae_mulssfd16ss.11_00_s2 \0"
  /* 17888 */ "ae_mulzssfd16ss.11_00_s2 \0"
  /* 17914 */ "ae_mula32x16.h0_s2 \0"
  /* 17934 */ "ae_mulaf32x16.h0_s2 \0"
  /* 17955 */ "ae_mulf32x16.h0_s2 \0"
  /* 17975 */ "ae_mulsf32x16.h0_s2 \0"
  /* 17996 */ "ae_mul32x16.h0_s2 \0"
  /* 18015 */ "ae_muls32x16.h0_s2 \0"
  /* 18035 */ "ae_mulaad32x16.h1.l0_s2 \0"
  /* 18060 */ "ae_mulzaad32x16.h1.l0_s2 \0"
  /* 18086 */ "ae_mulsad32x16.h1.l0_s2 \0"
  /* 18111 */ "ae_mulzsad32x16.h1.l0_s2 \0"
  /* 18137 */ "ae_mulaafd32x16.h1.l0_s2 \0"
  /* 18163 */ "ae_mulzaafd32x16.h1.l0_s2 \0"
  /* 18190 */ "ae_mulsafd32x16.h1.l0_s2 \0"
  /* 18216 */ "ae_mulzsafd32x16.h1.l0_s2 \0"
  /* 18243 */ "ae_mulasfd32x16.h1.l0_s2 \0"
  /* 18269 */ "ae_mulzasfd32x16.h1.l0_s2 \0"
  /* 18296 */ "ae_mulssfd32x16.h1.l0_s2 \0"
  /* 18322 */ "ae_mulzssfd32x16.h1.l0_s2 \0"
  /* 18349 */ "ae_mulasd32x16.h1.l0_s2 \0"
  /* 18374 */ "ae_mulzasd32x16.h1.l0_s2 \0"
  /* 18400 */ "ae_mulssd32x16.h1.l0_s2 \0"
  /* 18425 */ "ae_mulzssd32x16.h1.l0_s2 \0"
  /* 18451 */ "ae_mula32x16.l0_s2 \0"
  /* 18471 */ "ae_mulaf32x16.l0_s2 \0"
  /* 18492 */ "ae_mulf32x16.l0_s2 \0"
  /* 18512 */ "ae_mulsf32x16.l0_s2 \0"
  /* 18533 */ "ae_mul32x16.l0_s2 \0"
  /* 18552 */ "ae_muls32x16.l0_s2 \0"
  /* 18572 */ "ae_mula32x16.h1_s2 \0"
  /* 18592 */ "ae_mulaf32x16.h1_s2 \0"
  /* 18613 */ "ae_mulf32x16.h1_s2 \0"
  /* 18633 */ "ae_mulsf32x16.h1_s2 \0"
  /* 18654 */ "ae_mul32x16.h1_s2 \0"
  /* 18673 */ "ae_muls32x16.h1_s2 \0"
  /* 18693 */ "ae_mulaad32x16.h0.l1_s2 \0"
  /* 18718 */ "ae_mulzaad32x16.h0.l1_s2 \0"
  /* 18744 */ "ae_mulaafd32x16.h0.l1_s2 \0"
  /* 18770 */ "ae_mulzaafd32x16.h0.l1_s2 \0"
  /* 18797 */ "ae_mula32x16.l1_s2 \0"
  /* 18817 */ "ae_mulaf32x16.l1_s2 \0"
  /* 18838 */ "ae_mulf32x16.l1_s2 \0"
  /* 18858 */ "ae_mulsf32x16.l1_s2 \0"
  /* 18879 */ "ae_mul32x16.l1_s2 \0"
  /* 18898 */ "ae_muls32x16.l1_s2 \0"
  /* 18918 */ "ae_mulaafd16ss.13_02_s2 \0"
  /* 18943 */ "ae_mulzaafd16ss.13_02_s2 \0"
  /* 18969 */ "ae_mulssfd16ss.13_02_s2 \0"
  /* 18994 */ "ae_mulzssfd16ss.13_02_s2 \0"
  /* 19020 */ "ae_mulaafd16ss.33_22_s2 \0"
  /* 19045 */ "ae_mulzaafd16ss.33_22_s2 \0"
  /* 19071 */ "ae_mulssfd16ss.33_22_s2 \0"
  /* 19096 */ "ae_mulzssfd16ss.33_22_s2 \0"
  /* 19122 */ "ae_mula32x16.h2_s2 \0"
  /* 19142 */ "ae_mulaf32x16.h2_s2 \0"
  /* 19163 */ "ae_mulf32x16.h2_s2 \0"
  /* 19183 */ "ae_mulsf32x16.h2_s2 \0"
  /* 19204 */ "ae_mul32x16.h2_s2 \0"
  /* 19223 */ "ae_muls32x16.h2_s2 \0"
  /* 19243 */ "ae_mulaad32x16.h3.l2_s2 \0"
  /* 19268 */ "ae_mulzaad32x16.h3.l2_s2 \0"
  /* 19294 */ "ae_mulsad32x16.h3.l2_s2 \0"
  /* 19319 */ "ae_mulzsad32x16.h3.l2_s2 \0"
  /* 19345 */ "ae_mulaafd32x16.h3.l2_s2 \0"
  /* 19371 */ "ae_mulzaafd32x16.h3.l2_s2 \0"
  /* 19398 */ "ae_mulsafd32x16.h3.l2_s2 \0"
  /* 19424 */ "ae_mulzsafd32x16.h3.l2_s2 \0"
  /* 19451 */ "ae_mulasfd32x16.h3.l2_s2 \0"
  /* 19477 */ "ae_mulzasfd32x16.h3.l2_s2 \0"
  /* 19504 */ "ae_mulssfd32x16.h3.l2_s2 \0"
  /* 19530 */ "ae_mulzssfd32x16.h3.l2_s2 \0"
  /* 19557 */ "ae_mulasd32x16.h3.l2_s2 \0"
  /* 19582 */ "ae_mulzasd32x16.h3.l2_s2 \0"
  /* 19608 */ "ae_mulssd32x16.h3.l2_s2 \0"
  /* 19633 */ "ae_mulzssd32x16.h3.l2_s2 \0"
  /* 19659 */ "ae_mula32x16.l2_s2 \0"
  /* 19679 */ "ae_mulaf32x16.l2_s2 \0"
  /* 19700 */ "ae_mulf32x16.l2_s2 \0"
  /* 19720 */ "ae_mulsf32x16.l2_s2 \0"
  /* 19741 */ "ae_mul32x16.l2_s2 \0"
  /* 19760 */ "ae_muls32x16.l2_s2 \0"
  /* 19780 */ "ae_mulap24x2_s2 \0"
  /* 19797 */ "ae_mulp24x2_s2 \0"
  /* 19813 */ "ae_mulsp24x2_s2 \0"
  /* 19830 */ "ae_mula32x16.h3_s2 \0"
  /* 19850 */ "ae_mulaf32x16.h3_s2 \0"
  /* 19871 */ "ae_mulf32x16.h3_s2 \0"
  /* 19891 */ "ae_mulsf32x16.h3_s2 \0"
  /* 19912 */ "ae_mul32x16.h3_s2 \0"
  /* 19931 */ "ae_muls32x16.h3_s2 \0"
  /* 19951 */ "ae_mulaad32x16.h2.l3_s2 \0"
  /* 19976 */ "ae_mulzaad32x16.h2.l3_s2 \0"
  /* 20002 */ "ae_mulaafd32x16.h2.l3_s2 \0"
  /* 20028 */ "ae_mulzaafd32x16.h2.l3_s2 \0"
  /* 20055 */ "ae_mula32x16.l3_s2 \0"
  /* 20075 */ "ae_mulaf32x16.l3_s2 \0"
  /* 20096 */ "ae_mulf32x16.l3_s2 \0"
  /* 20116 */ "ae_mulsf32x16.l3_s2 \0"
  /* 20137 */ "ae_mul32x16.l3_s2 \0"
  /* 20156 */ "ae_muls32x16.l3_s2 \0"
  /* 20176 */ "ae_mulafp24x2ra_s2 \0"
  /* 20196 */ "ae_mulfp24x2ra_s2 \0"
  /* 20215 */ "ae_mulsfp24x2ra_s2 \0"
  /* 20235 */ "ae_mulafq32sp24s.h_s2 \0"
  /* 20258 */ "ae_mulfq32sp24s.h_s2 \0"
  /* 20280 */ "ae_mularfq32sp24s.h_s2 \0"
  /* 20304 */ "ae_mulrfq32sp24s.h_s2 \0"
  /* 20327 */ "ae_mulsrfq32sp24s.h_s2 \0"
  /* 20351 */ "ae_mulsfq32sp24s.h_s2 \0"
  /* 20374 */ "ae_mulafp32x16x2ras.h_s2 \0"
  /* 20400 */ "ae_mulfp32x16x2ras.h_s2 \0"
  /* 20425 */ "ae_mulsfp32x16x2ras.h_s2 \0"
  /* 20451 */ "ae_mulafp32x16x2rs.h_s2 \0"
  /* 20476 */ "ae_mulfp32x16x2rs.h_s2 \0"
  /* 20500 */ "ae_mulsfp32x16x2rs.h_s2 \0"
  /* 20525 */ "ae_mulas32f48p16s.hh_s2 \0"
  /* 20550 */ "ae_muls32f48p16s.hh_s2 \0"
  /* 20574 */ "ae_mulss32f48p16s.hh_s2 \0"
  /* 20599 */ "ae_mulaad24.hl.lh_s2 \0"
  /* 20621 */ "ae_mulzaad24.hl.lh_s2 \0"
  /* 20644 */ "ae_mulaafd24.hl.lh_s2 \0"
  /* 20667 */ "ae_mulzaafd24.hl.lh_s2 \0"
  /* 20691 */ "ae_mulasfd24.hl.lh_s2 \0"
  /* 20714 */ "ae_mulzasfd24.hl.lh_s2 \0"
  /* 20738 */ "ae_mulssfd24.hl.lh_s2 \0"
  /* 20761 */ "ae_mulzssfd24.hl.lh_s2 \0"
  /* 20785 */ "ae_mulasd24.hl.lh_s2 \0"
  /* 20807 */ "ae_mulzasd24.hl.lh_s2 \0"
  /* 20830 */ "ae_mulssd24.hl.lh_s2 \0"
  /* 20852 */ "ae_mulzssd24.hl.lh_s2 \0"
  /* 20875 */ "ae_mulas32f48p16s.lh_s2 \0"
  /* 20900 */ "ae_muls32f48p16s.lh_s2 \0"
  /* 20924 */ "ae_mulss32f48p16s.lh_s2 \0"
  /* 20949 */ "ae_mulafq32sp24s.l_s2 \0"
  /* 20972 */ "ae_mulfq32sp24s.l_s2 \0"
  /* 20994 */ "ae_mularfq32sp24s.l_s2 \0"
  /* 21018 */ "ae_mulrfq32sp24s.l_s2 \0"
  /* 21041 */ "ae_mulsrfq32sp24s.l_s2 \0"
  /* 21065 */ "ae_mulsfq32sp24s.l_s2 \0"
  /* 21088 */ "ae_mulaf48q32sp16s.l_s2 \0"
  /* 21113 */ "ae_mulf48q32sp16s.l_s2 \0"
  /* 21137 */ "ae_mulsf48q32sp16s.l_s2 \0"
  /* 21162 */ "ae_mulaq32sp16s.l_s2 \0"
  /* 21184 */ "ae_mulq32sp16s.l_s2 \0"
  /* 21205 */ "ae_mulsq32sp16s.l_s2 \0"
  /* 21227 */ "ae_mulafp32x16x2ras.l_s2 \0"
  /* 21253 */ "ae_mulfp32x16x2ras.l_s2 \0"
  /* 21278 */ "ae_mulsfp32x16x2ras.l_s2 \0"
  /* 21304 */ "ae_mulafp32x16x2rs.l_s2 \0"
  /* 21329 */ "ae_mulfp32x16x2rs.l_s2 \0"
  /* 21353 */ "ae_mulsfp32x16x2rs.l_s2 \0"
  /* 21378 */ "ae_mulaf48q32sp16u.l_s2 \0"
  /* 21403 */ "ae_mulf48q32sp16u.l_s2 \0"
  /* 21427 */ "ae_mulsf48q32sp16u.l_s2 \0"
  /* 21452 */ "ae_mulaq32sp16u.l_s2 \0"
  /* 21474 */ "ae_mulq32sp16u.l_s2 \0"
  /* 21495 */ "ae_mulsq32sp16u.l_s2 \0"
  /* 21517 */ "ae_mula32.ll_s2 \0"
  /* 21534 */ "ae_mul32.ll_s2 \0"
  /* 21550 */ "ae_mulaad24.hh.ll_s2 \0"
  /* 21572 */ "ae_mulzaad24.hh.ll_s2 \0"
  /* 21595 */ "ae_mulsad24.hh.ll_s2 \0"
  /* 21617 */ "ae_mulzsad24.hh.ll_s2 \0"
  /* 21640 */ "ae_mulaafd24.hh.ll_s2 \0"
  /* 21663 */ "ae_mulzaafd24.hh.ll_s2 \0"
  /* 21687 */ "ae_mulsafd24.hh.ll_s2 \0"
  /* 21710 */ "ae_mulzsafd24.hh.ll_s2 \0"
  /* 21734 */ "ae_mulasfd24.hh.ll_s2 \0"
  /* 21757 */ "ae_mulzasfd24.hh.ll_s2 \0"
  /* 21781 */ "ae_mulssfd24.hh.ll_s2 \0"
  /* 21804 */ "ae_mulzssfd24.hh.ll_s2 \0"
  /* 21828 */ "ae_mulasd24.hh.ll_s2 \0"
  /* 21850 */ "ae_mulzasd24.hh.ll_s2 \0"
  /* 21873 */ "ae_mulssd24.hh.ll_s2 \0"
  /* 21895 */ "ae_mulzssd24.hh.ll_s2 \0"
  /* 21918 */ "ae_mulaf32r.ll_s2 \0"
  /* 21937 */ "ae_mulf32r.ll_s2 \0"
  /* 21955 */ "ae_mulsf32r.ll_s2 \0"
  /* 21974 */ "ae_mulaf32s.ll_s2 \0"
  /* 21993 */ "ae_mulf32s.ll_s2 \0"
  /* 22011 */ "ae_mulas32f48p16s.ll_s2 \0"
  /* 22036 */ "ae_muls32f48p16s.ll_s2 \0"
  /* 22060 */ "ae_mulss32f48p16s.ll_s2 \0"
  /* 22085 */ "ae_mulafp24x2r_s2 \0"
  /* 22104 */ "ae_mulfp24x2r_s2 \0"
  /* 22122 */ "ae_mulsfp24x2r_s2 \0"
  /* 22141 */ "ae_movda32x2 \0"
  /* 22155 */ "ae_movf32x2 \0"
  /* 22168 */ "ae_mulap32x2 \0"
  /* 22182 */ "ae_mulp32x2 \0"
  /* 22195 */ "ae_mulsp32x2 \0"
  /* 22209 */ "ae_movt32x2 \0"
  /* 22222 */ "ae_mulap24x2 \0"
  /* 22236 */ "ae_mulp24x2 \0"
  /* 22249 */ "ae_mulsp24x2 \0"
  /* 22263 */ "ae_movda16x2 \0"
  /* 22277 */ "ae_movad16.3 \0"
  /* 22291 */ "ae_mulaf16ss.33 \0"
  /* 22308 */ "ae_mulf16ss.33 \0"
  /* 22324 */ "ae_mulsf16ss.33 \0"
  /* 22341 */ "ae_mula32x16.h3 \0"
  /* 22358 */ "ae_mulaf32x16.h3 \0"
  /* 22376 */ "ae_mulf32x16.h3 \0"
  /* 22393 */ "ae_mulsf32x16.h3 \0"
  /* 22411 */ "ae_mul32x16.h3 \0"
  /* 22427 */ "ae_muls32x16.h3 \0"
  /* 22444 */ "ae_mulaad32x16.h2.l3 \0"
  /* 22466 */ "ae_mulzaad32x16.h2.l3 \0"
  /* 22489 */ "ae_mulaafd32x16.h2.l3 \0"
  /* 22512 */ "ae_mulzaafd32x16.h2.l3 \0"
  /* 22536 */ "ae_mula32x16.l3 \0"
  /* 22553 */ "ae_mulaf32x16.l3 \0"
  /* 22571 */ "ae_mulf32x16.l3 \0"
  /* 22588 */ "ae_mulsf32x16.l3 \0"
  /* 22606 */ "ae_mul32x16.l3 \0"
  /* 22622 */ "ae_muls32x16.l3 \0"
  /* 22639 */ "ae_mulac24 \0"
  /* 22651 */ "ae_mulc24 \0"
  /* 22662 */ "ae_slai24 \0"
  /* 22673 */ "ae_srai24 \0"
  /* 22684 */ "ae_srli24 \0"
  /* 22695 */ "ae_pksr24 \0"
  /* 22706 */ "ae_slas24 \0"
  /* 22717 */ "ae_sras24 \0"
  /* 22728 */ "ae_srls24 \0"
  /* 22739 */ "ae_slaa64 \0"
  /* 22750 */ "ae_sraa64 \0"
  /* 22761 */ "ae_srla64 \0"
  /* 22772 */ "ae_nsa64 \0"
  /* 22782 */ "ae_sub64 \0"
  /* 22792 */ "ae_add64 \0"
  /* 22802 */ "ae_le64 \0"
  /* 22811 */ "ae_movf64 \0"
  /* 22822 */ "ae_neg64 \0"
  /* 22832 */ "ae_slai64 \0"
  /* 22843 */ "ae_srai64 \0"
  /* 22854 */ "ae_srli64 \0"
  /* 22865 */ "ae_zalign64 \0"
  /* 22878 */ "ae_min64 \0"
  /* 22888 */ "ae_eq64 \0"
  /* 22897 */ "ae_slas64 \0"
  /* 22908 */ "ae_sras64 \0"
  /* 22919 */ "ae_abs64 \0"
  /* 22929 */ "ae_srls64 \0"
  /* 22940 */ "ae_lt64 \0"
  /* 22949 */ "ae_movt64 \0"
  /* 22960 */ "ae_max64 \0"
  /* 22970 */ "!movba4 \0"
  /* 22979 */ "!extui_br4 \0"
  /* 22991 */ "ae_mula16x4 \0"
  /* 23004 */ "ae_movf16x4 \0"
  /* 23017 */ "ae_mul16x4 \0"
  /* 23029 */ "ae_muls16x4 \0"
  /* 23042 */ "ae_sat16x4 \0"
  /* 23054 */ "ae_movt16x4 \0"
  /* 23067 */ "ae_movda16 \0"
  /* 23079 */ "ae_sub16 \0"
  /* 23089 */ "ae_add16 \0"
  /* 23099 */ "ae_le16 \0"
  /* 23108 */ "ae_srai16 \0"
  /* 23119 */ "ae_eq16 \0"
  /* 23128 */ "ae_lt16 \0"
  /* 23137 */ "ae_slaaq56 \0"
  /* 23149 */ "ae_slasq56 \0"
  /* 23161 */ "# SRA_P \0"
  /* 23170 */ "!L8I_P \0"
  /* 23178 */ "# SLL_P \0"
  /* 23187 */ "# SRL_P \0"
  /* 23196 */ "!movba \0"
  /* 23204 */ "ae_mulafp24x2ra \0"
  /* 23221 */ "ae_mulfp24x2ra \0"
  /* 23237 */ "ae_mulsfp24x2ra \0"
  /* 23254 */ "ae_mulafc24ra \0"
  /* 23269 */ "ae_mulfc24ra \0"
  /* 23283 */ "ae_db \0"
  /* 23290 */ "ae_lb \0"
  /* 23297 */ "ae_sb \0"
  /* 23304 */ "ae_vldl16c \0"
  /* 23316 */ "ae_vles16c \0"
  /* 23328 */ "!loopdec \0"
  /* 23338 */ "ae_la32x2.ic \0"
  /* 23352 */ "ae_sa32x2.ic \0"
  /* 23366 */ "ae_la24x2.ic \0"
  /* 23380 */ "ae_sa24x2.ic \0"
  /* 23394 */ "ae_la24.ic \0"
  /* 23406 */ "ae_la32x2f24.ic \0"
  /* 23423 */ "ae_sa32x2f24.ic \0"
  /* 23440 */ "ae_la16x4.ic \0"
  /* 23454 */ "ae_sa16x4.ic \0"
  /* 23468 */ "ae_db.ic \0"
  /* 23478 */ "ae_sb.ic \0"
  /* 23488 */ "ae_vldl16c.ic \0"
  /* 23503 */ "ae_vles16c.ic \0"
  /* 23518 */ "ae_sbf.ic \0"
  /* 23529 */ "ae_dbi.ic \0"
  /* 23540 */ "ae_sbi.ic \0"
  /* 23551 */ "ae_sa24.l.ic \0"
  /* 23565 */ "ae_la32x2.ric \0"
  /* 23580 */ "ae_sa32x2.ric \0"
  /* 23595 */ "ae_l32x2.ric \0"
  /* 23609 */ "ae_s32x2.ric \0"
  /* 23623 */ "ae_la24x2.ric \0"
  /* 23638 */ "ae_sa24x2.ric \0"
  /* 23653 */ "ae_la24.ric \0"
  /* 23666 */ "ae_la32x2f24.ric \0"
  /* 23684 */ "ae_sa32x2f24.ric \0"
  /* 23702 */ "ae_l32x2f24.ric \0"
  /* 23719 */ "ae_s32x2f24.ric \0"
  /* 23736 */ "ae_la16x4.ric \0"
  /* 23751 */ "ae_sa16x4.ric \0"
  /* 23766 */ "ae_l16x4.ric \0"
  /* 23780 */ "ae_s16x4.ric \0"
  /* 23794 */ "ae_sa24.l.ric \0"
  /* 23809 */ "ae_la32x2neg.pc \0"
  /* 23826 */ "ae_la24x2neg.pc \0"
  /* 23843 */ "ae_la24neg.pc \0"
  /* 23858 */ "ae_la16x4neg.pc \0"
  /* 23875 */ "ae_la32x2pos.pc \0"
  /* 23892 */ "ae_la24x2pos.pc \0"
  /* 23909 */ "ae_la24pos.pc \0"
  /* 23924 */ "ae_la16x4pos.pc \0"
  /* 23941 */ "ae_s16.0.xc \0"
  /* 23954 */ "ae_l32.xc \0"
  /* 23965 */ "ae_l32x2.xc \0"
  /* 23978 */ "ae_s32x2.xc \0"
  /* 23991 */ "ae_l32f24.xc \0"
  /* 24005 */ "ae_l32x2f24.xc \0"
  /* 24021 */ "ae_s32x2f24.xc \0"
  /* 24037 */ "ae_l64.xc \0"
  /* 24048 */ "ae_s64.xc \0"
  /* 24059 */ "ae_l16x4.xc \0"
  /* 24072 */ "ae_s16x4.xc \0"
  /* 24085 */ "ae_l16.xc \0"
  /* 24096 */ "ae_s32.l.xc \0"
  /* 24109 */ "ae_s32f24.l.xc \0"
  /* 24125 */ "ae_s16m.l.xc \0"
  /* 24139 */ "ae_l32m.xc \0"
  /* 24151 */ "ae_s32m.xc \0"
  /* 24163 */ "ae_l16x2m.xc \0"
  /* 24177 */ "ae_s16x2m.xc \0"
  /* 24191 */ "ae_l16m.xc \0"
  /* 24203 */ "ae_s32ra64s.xc \0"
  /* 24219 */ "ae_s24ra64s.xc \0"
  /* 24235 */ "rur.ae_bithead \0"
  /* 24251 */ "wur.ae_bithead \0"
  /* 24267 */ "rur.ae_bitsused \0"
  /* 24284 */ "wur.ae_bitsused \0"
  /* 24301 */ "ae_and \0"
  /* 24309 */ "ae_nand \0"
  /* 24318 */ "!loopend \0"
  /* 24328 */ "rur.ae_searchdone \0"
  /* 24347 */ "wur.ae_searchdone \0"
  /* 24366 */ "rur.ae_tablesize \0"
  /* 24384 */ "wur.ae_tablesize \0"
  /* 24402 */ "ae_sbf \0"
  /* 24410 */ "ae_div64d32.h \0"
  /* 24425 */ "ae_movad32.h \0"
  /* 24439 */ "ae_cvt64f32.h \0"
  /* 24454 */ "ae_mulap32x16x2.h \0"
  /* 24473 */ "ae_mulp32x16x2.h \0"
  /* 24491 */ "ae_mulsp32x16x2.h \0"
  /* 24510 */ "ae_mulac32x16.h \0"
  /* 24527 */ "ae_mulc32x16.h \0"
  /* 24543 */ "ae_mulafd24x2.fir.h \0"
  /* 24564 */ "ae_mulfd24x2.fir.h \0"
  /* 24584 */ "ae_cvtq56p32s.h \0"
  /* 24601 */ "ae_cvta32f24s.h \0"
  /* 24618 */ "ae_mulafp32x16x2ras.h \0"
  /* 24641 */ "ae_mulfp32x16x2ras.h \0"
  /* 24663 */ "ae_mulsfp32x16x2ras.h \0"
  /* 24686 */ "ae_mulafc32x16ras.h \0"
  /* 24707 */ "ae_mulfc32x16ras.h \0"
  /* 24727 */ "ae_mulafp32x16x2rs.h \0"
  /* 24749 */ "ae_mulfp32x16x2rs.h \0"
  /* 24770 */ "ae_mulsfp32x16x2rs.h \0"
  /* 24792 */ "ae_mula32.hh \0"
  /* 24806 */ "ae_mul32.hh \0"
  /* 24819 */ "ae_muls32.hh \0"
  /* 24833 */ "ae_mulaf32r.hh \0"
  /* 24849 */ "ae_mulf32r.hh \0"
  /* 24864 */ "ae_mulsf32r.hh \0"
  /* 24880 */ "ae_mulafd32x16x2.fir.hh \0"
  /* 24905 */ "ae_mulfd32x16x2.fir.hh \0"
  /* 24929 */ "ae_mulaf32s.hh \0"
  /* 24945 */ "ae_mulf32s.hh \0"
  /* 24960 */ "ae_mulsf32s.hh \0"
  /* 24976 */ "ae_mulas32f48p16s.hh \0"
  /* 24998 */ "ae_muls32f48p16s.hh \0"
  /* 25019 */ "ae_mulss32f48p16s.hh \0"
  /* 25041 */ "ae_mula32.lh \0"
  /* 25055 */ "ae_mul32.lh \0"
  /* 25068 */ "ae_muls32.lh \0"
  /* 25082 */ "ae_mulaad24.hl.lh \0"
  /* 25101 */ "ae_mulzaad24.hl.lh \0"
  /* 25121 */ "ae_mulaafd24.hl.lh \0"
  /* 25141 */ "ae_mulzaafd24.hl.lh \0"
  /* 25162 */ "ae_mulasfd24.hl.lh \0"
  /* 25182 */ "ae_mulzasfd24.hl.lh \0"
  /* 25203 */ "ae_mulssfd24.hl.lh \0"
  /* 25223 */ "ae_mulzssfd24.hl.lh \0"
  /* 25244 */ "ae_mulasd24.hl.lh \0"
  /* 25263 */ "ae_mulzasd24.hl.lh \0"
  /* 25283 */ "ae_mulssd24.hl.lh \0"
  /* 25302 */ "ae_mulzssd24.hl.lh \0"
  /* 25322 */ "ae_mulaf32r.lh \0"
  /* 25338 */ "ae_mulf32r.lh \0"
  /* 25353 */ "ae_mulsf32r.lh \0"
  /* 25369 */ "ae_mulafd32x16x2.fir.lh \0"
  /* 25394 */ "ae_mulfd32x16x2.fir.lh \0"
  /* 25418 */ "ae_mulaf32s.lh \0"
  /* 25434 */ "ae_mulf32s.lh \0"
  /* 25449 */ "ae_mulsf32s.lh \0"
  /* 25465 */ "ae_mulas32f48p16s.lh \0"
  /* 25487 */ "ae_muls32f48p16s.lh \0"
  /* 25508 */ "ae_mulss32f48p16s.lh \0"
  /* 25530 */ "ae_add32_hl_lh \0"
  /* 25546 */ "ae_s16.0.i \0"
  /* 25558 */ "ae_l32.i \0"
  /* 25568 */ "ae_l32x2.i \0"
  /* 25580 */ "ae_s32x2.i \0"
  /* 25592 */ "ae_l32f24.i \0"
  /* 25605 */ "ae_l32x2f24.i \0"
  /* 25620 */ "ae_s32x2f24.i \0"
  /* 25635 */ "ae_l64.i \0"
  /* 25645 */ "ae_lalign64.i \0"
  /* 25660 */ "ae_salign64.i \0"
  /* 25675 */ "ae_s64.i \0"
  /* 25685 */ "ae_l16x4.i \0"
  /* 25697 */ "ae_s16x4.i \0"
  /* 25709 */ "ae_l16.i \0"
  /* 25719 */ "ae_s32.l.i \0"
  /* 25731 */ "ae_s32f24.l.i \0"
  /* 25746 */ "ae_s16m.l.i \0"
  /* 25759 */ "ae_l32m.i \0"
  /* 25770 */ "ae_s32m.i \0"
  /* 25781 */ "ae_l16x2m.i \0"
  /* 25794 */ "ae_s16x2m.i \0"
  /* 25807 */ "ae_l16m.i \0"
  /* 25818 */ "ae_s32ra64s.i \0"
  /* 25833 */ "ae_s24ra64s.i \0"
  /* 25848 */ "ae_sel16i \0"
  /* 25859 */ "ae_dbi \0"
  /* 25867 */ "ae_lbi \0"
  /* 25875 */ "ae_sbi \0"
  /* 25883 */ "ae_lbki \0"
  /* 25892 */ "ae_lbsi \0"
  /* 25901 */ "ae_movi \0"
  /* 25910 */ "ae_lbk \0"
  /* 25918 */ "ae_div64d32.l \0"
  /* 25933 */ "ae_movad32.l \0"
  /* 25947 */ "ae_nsaz32.l \0"
  /* 25960 */ "ae_mulap32x16x2.l \0"
  /* 25979 */ "ae_mulp32x16x2.l \0"
  /* 25997 */ "ae_mulsp32x16x2.l \0"
  /* 26016 */ "ae_mulac32x16.l \0"
  /* 26033 */ "ae_mulc32x16.l \0"
  /* 26049 */ "ae_mulafd24x2.fir.l \0"
  /* 26070 */ "ae_mulfd24x2.fir.l \0"
  /* 26090 */ "ae_cvtq56p32s.l \0"
  /* 26107 */ "ae_cvta32f24s.l \0"
  /* 26124 */ "ae_trunca32f64s.l \0"
  /* 26143 */ "ae_trunci32f64s.l \0"
  /* 26162 */ "ae_mulaf48q32sp16s.l \0"
  /* 26184 */ "ae_mulf48q32sp16s.l \0"
  /* 26205 */ "ae_mulsf48q32sp16s.l \0"
  /* 26227 */ "ae_mulafp32x16x2ras.l \0"
  /* 26250 */ "ae_mulfp32x16x2ras.l \0"
  /* 26272 */ "ae_mulsfp32x16x2ras.l \0"
  /* 26295 */ "ae_mulafc32x16ras.l \0"
  /* 26316 */ "ae_mulfc32x16ras.l \0"
  /* 26336 */ "ae_mulafp32x16x2rs.l \0"
  /* 26358 */ "ae_mulfp32x16x2rs.l \0"
  /* 26379 */ "ae_mulsfp32x16x2rs.l \0"
  /* 26401 */ "ae_mulaf48q32sp16u.l \0"
  /* 26423 */ "ae_mulf48q32sp16u.l \0"
  /* 26444 */ "ae_mulsf48q32sp16u.l \0"
  /* 26466 */ "ae_mulafd32x16x2.fir.hl \0"
  /* 26491 */ "ae_mulfd32x16x2.fir.hl \0"
  /* 26515 */ "ae_mula32.ll \0"
  /* 26529 */ "ae_mul32.ll \0"
  /* 26542 */ "ae_muls32.ll \0"
  /* 26556 */ "ae_mulaad24.hh.ll \0"
  /* 26575 */ "ae_mulzaad24.hh.ll \0"
  /* 26595 */ "ae_mulsad24.hh.ll \0"
  /* 26614 */ "ae_mulzsad24.hh.ll \0"
  /* 26634 */ "ae_mulaafd24.hh.ll \0"
  /* 26654 */ "ae_mulzaafd24.hh.ll \0"
  /* 26675 */ "ae_mulsafd24.hh.ll \0"
  /* 26695 */ "ae_mulzsafd24.hh.ll \0"
  /* 26716 */ "ae_mulasfd24.hh.ll \0"
  /* 26736 */ "ae_mulzasfd24.hh.ll \0"
  /* 26757 */ "ae_mulssfd24.hh.ll \0"
  /* 26777 */ "ae_mulzssfd24.hh.ll \0"
  /* 26798 */ "ae_mulasd24.hh.ll \0"
  /* 26817 */ "ae_mulzasd24.hh.ll \0"
  /* 26837 */ "ae_mulssd24.hh.ll \0"
  /* 26856 */ "ae_mulzssd24.hh.ll \0"
  /* 26876 */ "ae_mulaf32r.ll \0"
  /* 26892 */ "ae_mulf32r.ll \0"
  /* 26907 */ "ae_mulsf32r.ll \0"
  /* 26923 */ "ae_mulafd32x16x2.fir.ll \0"
  /* 26948 */ "ae_mulfd32x16x2.fir.ll \0"
  /* 26972 */ "ae_mulaf32s.ll \0"
  /* 26988 */ "ae_mulf32s.ll \0"
  /* 27003 */ "ae_mulsf32s.ll \0"
  /* 27019 */ "ae_mulas32f48p16s.ll \0"
  /* 27041 */ "ae_muls32f48p16s.ll \0"
  /* 27062 */ "ae_mulss32f48p16s.ll \0"
  /* 27084 */ "ae_mula32u.ll \0"
  /* 27099 */ "ae_mul32u.ll \0"
  /* 27113 */ "ae_muls32u.ll \0"
  /* 27128 */ "!restore_bool \0"
  /* 27143 */ "!spill_bool \0"
  /* 27156 */ "ae_roundsp16q48x2sym \0"
  /* 27178 */ "ae_roundsp16f24sym \0"
  /* 27198 */ "ae_roundsq32f48sym \0"
  /* 27218 */ "ae_roundsp16q48x2asym \0"
  /* 27241 */ "ae_roundsp16f24asym \0"
  /* 27262 */ "ae_roundsq32f48asym \0"
  /* 27283 */ "ae_round16x4f32sasym \0"
  /* 27305 */ "ae_round32x2f64sasym \0"
  /* 27327 */ "ae_round32x2f48sasym \0"
  /* 27349 */ "ae_round24x2f48sasym \0"
  /* 27371 */ "ae_round16x4f32ssym \0"
  /* 27392 */ "ae_round32x2f64ssym \0"
  /* 27413 */ "ae_round32x2f48ssym \0"
  /* 27434 */ "ae_round24x2f48ssym \0"
  /* 27455 */ "ae_sel16i.n \0"
  /* 27468 */ "ae_movalign \0"
  /* 27481 */ "rur.ae_cw_sd_no \0"
  /* 27498 */ "wur.ae_cw_sd_no \0"
  /* 27515 */ "rur.ae_cwrap \0"
  /* 27529 */ "wur.ae_cwrap \0"
  /* 27543 */ "ae_shortswap \0"
  /* 27557 */ "rur.ae_ts_fts_bu_bp \0"
  /* 27578 */ "wur.ae_ts_fts_bu_bp \0"
  /* 27599 */ "ae_sa64neg.fp \0"
  /* 27614 */ "ae_sa64pos.fp \0"
  /* 27629 */ "!brcc_fp \0"
  /* 27639 */ "!select_cc_fp_fp \0"
  /* 27657 */ "!select_cc_int_fp \0"
  /* 27676 */ "ae_s16.0.ip \0"
  /* 27689 */ "ae_l32.ip \0"
  /* 27700 */ "ae_la32x2.ip \0"
  /* 27714 */ "ae_sa32x2.ip \0"
  /* 27728 */ "ae_l32x2.ip \0"
  /* 27741 */ "ae_s32x2.ip \0"
  /* 27754 */ "ae_la24x2.ip \0"
  /* 27768 */ "ae_sa24x2.ip \0"
  /* 27782 */ "ae_la24.ip \0"
  /* 27794 */ "ae_l32f24.ip \0"
  /* 27808 */ "ae_la32x2f24.ip \0"
  /* 27825 */ "ae_sa32x2f24.ip \0"
  /* 27842 */ "ae_l32x2f24.ip \0"
  /* 27858 */ "ae_s32x2f24.ip \0"
  /* 27874 */ "ae_l64.ip \0"
  /* 27885 */ "ae_s64.ip \0"
  /* 27896 */ "ae_la16x4.ip \0"
  /* 27910 */ "ae_sa16x4.ip \0"
  /* 27924 */ "ae_l16x4.ip \0"
  /* 27937 */ "ae_s16x4.ip \0"
  /* 27950 */ "ae_l16.ip \0"
  /* 27961 */ "ae_db.ip \0"
  /* 27971 */ "ae_sb.ip \0"
  /* 27981 */ "ae_vldl16c.ip \0"
  /* 27996 */ "ae_vles16c.ip \0"
  /* 28011 */ "ae_sbf.ip \0"
  /* 28022 */ "ae_dbi.ip \0"
  /* 28033 */ "ae_sbi.ip \0"
  /* 28044 */ "ae_s32.l.ip \0"
  /* 28057 */ "ae_sa24.l.ip \0"
  /* 28071 */ "ae_s32f24.l.ip \0"
  /* 28087 */ "ae_s32ra64s.ip \0"
  /* 28103 */ "ae_s32x2ra64s.ip \0"
  /* 28121 */ "ae_s24x2ra64s.ip \0"
  /* 28139 */ "ae_s24ra64s.ip \0"
  /* 28155 */ "ae_la32x2.rip \0"
  /* 28170 */ "ae_sa32x2.rip \0"
  /* 28185 */ "ae_l32x2.rip \0"
  /* 28199 */ "ae_s32x2.rip \0"
  /* 28213 */ "ae_la24x2.rip \0"
  /* 28228 */ "ae_sa24x2.rip \0"
  /* 28243 */ "ae_la24.rip \0"
  /* 28256 */ "ae_la32x2f24.rip \0"
  /* 28274 */ "ae_sa32x2f24.rip \0"
  /* 28292 */ "ae_l32x2f24.rip \0"
  /* 28309 */ "ae_s32x2f24.rip \0"
  /* 28326 */ "ae_la16x4.rip \0"
  /* 28341 */ "ae_sa16x4.rip \0"
  /* 28356 */ "ae_l16x4.rip \0"
  /* 28370 */ "ae_s16x4.rip \0"
  /* 28384 */ "ae_sa24.l.rip \0"
  /* 28399 */ "ae_la64.pp \0"
  /* 28411 */ "ae_s16.0.xp \0"
  /* 28424 */ "ae_l32.xp \0"
  /* 28435 */ "ae_l32x2.xp \0"
  /* 28448 */ "ae_s32x2.xp \0"
  /* 28461 */ "ae_l32f24.xp \0"
  /* 28475 */ "ae_l32x2f24.xp \0"
  /* 28491 */ "ae_s32x2f24.xp \0"
  /* 28507 */ "ae_l64.xp \0"
  /* 28518 */ "ae_s64.xp \0"
  /* 28529 */ "ae_l16x4.xp \0"
  /* 28542 */ "ae_s16x4.xp \0"
  /* 28555 */ "ae_l16.xp \0"
  /* 28566 */ "ae_s32.l.xp \0"
  /* 28579 */ "ae_s32f24.l.xp \0"
  /* 28595 */ "ae_s32ra64s.xp \0"
  /* 28611 */ "ae_s24ra64s.xp \0"
  /* 28627 */ "ae_srai32r \0"
  /* 28639 */ "ae_mulafp24x2r \0"
  /* 28655 */ "ae_mulfp24x2r \0"
  /* 28670 */ "ae_mulsfp24x2r \0"
  /* 28686 */ "ae_srai16r \0"
  /* 28698 */ "rur.ae_sar \0"
  /* 28710 */ "wur.ae_sar \0"
  /* 28722 */ "rur.ae_ovf_sar \0"
  /* 28738 */ "wur.ae_ovf_sar \0"
  /* 28754 */ "!slli_br \0"
  /* 28764 */ "!extui_br \0"
  /* 28775 */ "!loopbr \0"
  /* 28784 */ "ae_or \0"
  /* 28791 */ "ae_xor \0"
  /* 28799 */ "rur.ae_bitptr \0"
  /* 28814 */ "wur.ae_bitptr \0"
  /* 28829 */ "ae_cvtq56a32s \0"
  /* 28844 */ "ae_slaa32s \0"
  /* 28856 */ "ae_sraa32s \0"
  /* 28868 */ "ae_sub32s \0"
  /* 28879 */ "ae_addsub32s \0"
  /* 28893 */ "ae_add32s \0"
  /* 28904 */ "ae_subadd32s \0"
  /* 28918 */ "ae_neg32s \0"
  /* 28929 */ "ae_slai32s \0"
  /* 28941 */ "ae_slas32s \0"
  /* 28953 */ "ae_abs32s \0"
  /* 28964 */ "ae_minabs32s \0"
  /* 28978 */ "ae_maxabs32s \0"
  /* 28992 */ "ae_sub24s \0"
  /* 29003 */ "ae_add24s \0"
  /* 29014 */ "ae_neg24s \0"
  /* 29025 */ "ae_slai24s \0"
  /* 29037 */ "ae_slas24s \0"
  /* 29049 */ "ae_abs24s \0"
  /* 29060 */ "ae_sat24s \0"
  /* 29071 */ "ae_slaa64s \0"
  /* 29083 */ "ae_sub64s \0"
  /* 29094 */ "ae_add64s \0"
  /* 29105 */ "ae_trunca32x2f64s \0"
  /* 29124 */ "ae_trunci32x2f64s \0"
  /* 29143 */ "ae_neg64s \0"
  /* 29154 */ "ae_slai64s \0"
  /* 29166 */ "ae_slas64s \0"
  /* 29178 */ "ae_abs64s \0"
  /* 29189 */ "ae_minabs64s \0"
  /* 29203 */ "ae_maxabs64s \0"
  /* 29217 */ "ae_mulfp16x4s \0"
  /* 29232 */ "ae_slaa16s \0"
  /* 29244 */ "ae_sraa16s \0"
  /* 29256 */ "ae_sub16s \0"
  /* 29267 */ "ae_add16s \0"
  /* 29278 */ "ae_neg16s \0"
  /* 29289 */ "ae_slai16s \0"
  /* 29301 */ "ae_abs16s \0"
  /* 29312 */ "ae_slaisq56s \0"
  /* 29326 */ "ae_slassq56s \0"
  /* 29340 */ "ae_satq56s \0"
  /* 29352 */ "ae_sat48s \0"
  /* 29363 */ "ae_mulafp32x2ras \0"
  /* 29381 */ "ae_mulfp32x2ras \0"
  /* 29398 */ "ae_mulsfp32x2ras \0"
  /* 29416 */ "ae_mulfp16x4ras \0"
  /* 29433 */ "ae_lbs \0"
  /* 29441 */ "ae_sraa32rs \0"
  /* 29454 */ "ae_mulafp32x2rs \0"
  /* 29471 */ "ae_mulfp32x2rs \0"
  /* 29487 */ "ae_mulsfp32x2rs \0"
  /* 29504 */ "ae_sraa16rs \0"
  /* 29517 */ "ae_mulaf16x4ss \0"
  /* 29533 */ "ae_mulf16x4ss \0"
  /* 29548 */ "ae_mulsf16x4ss \0"
  /* 29564 */ "rur.ae_first_ts \0"
  /* 29581 */ "wur.ae_first_ts \0"
  /* 29598 */ "ae_vldl32t \0"
  /* 29610 */ "ae_vlel32t \0"
  /* 29622 */ "ae_vldl16t \0"
  /* 29634 */ "ae_vlel16t \0"
  /* 29646 */ "!select \0"
  /* 29655 */ "rur.ae_nextoffset \0"
  /* 29674 */ "wur.ae_nextoffset \0"
  /* 29693 */ "ae_vldsht \0"
  /* 29704 */ "!loopinit \0"
  /* 29715 */ "!select_cc_fp_int \0"
  /* 29734 */ "!loopstart \0"
  /* 29746 */ "ae_s16m.l.iu \0"
  /* 29760 */ "ae_l32m.iu \0"
  /* 29772 */ "ae_s32m.iu \0"
  /* 29784 */ "ae_l16x2m.iu \0"
  /* 29798 */ "ae_s16x2m.iu \0"
  /* 29812 */ "ae_l16m.iu \0"
  /* 29824 */ "ae_s16m.l.xu \0"
  /* 29838 */ "ae_l32m.xu \0"
  /* 29850 */ "ae_s32m.xu \0"
  /* 29862 */ "ae_l16x2m.xu \0"
  /* 29876 */ "ae_s16x2m.xu \0"
  /* 29890 */ "ae_l16m.xu \0"
  /* 29902 */ "ae_mov \0"
  /* 29910 */ "rur.ae_overflow \0"
  /* 29927 */ "wur.ae_overflow \0"
  /* 29944 */ "ae_s16.0.x \0"
  /* 29956 */ "ae_l32.x \0"
  /* 29966 */ "ae_l32x2.x \0"
  /* 29978 */ "ae_s32x2.x \0"
  /* 29990 */ "ae_l32f24.x \0"
  /* 30003 */ "ae_l32x2f24.x \0"
  /* 30018 */ "ae_s32x2f24.x \0"
  /* 30033 */ "ae_l64.x \0"
  /* 30043 */ "ae_s64.x \0"
  /* 30053 */ "ae_l16x4.x \0"
  /* 30065 */ "ae_s16x4.x \0"
  /* 30077 */ "ae_l16.x \0"
  /* 30087 */ "ae_s32.l.x \0"
  /* 30099 */ "ae_s32f24.l.x \0"
  /* 30114 */ "ae_s16m.l.x \0"
  /* 30127 */ "ae_l32m.x \0"
  /* 30138 */ "ae_s32m.x \0"
  /* 30149 */ "ae_l16x2m.x \0"
  /* 30162 */ "ae_s16x2m.x \0"
  /* 30175 */ "ae_l16m.x \0"
  /* 30186 */ "ae_s32ra64s.x \0"
  /* 30201 */ "ae_s24ra64s.x \0"
  /* 30216 */ "# XRay Function Patchable RET.\0"
  /* 30247 */ "# XRay Typed Event Log.\0"
  /* 30271 */ "# XRay Custom Event Log.\0"
  /* 30296 */ "# XRay Function Enter.\0"
  /* 30319 */ "# XRay Tail Call Exit.\0"
  /* 30342 */ "# XRay Function Exit.\0"
  /* 30364 */ "LIFETIME_END\0"
  /* 30377 */ "PSEUDO_PROBE\0"
  /* 30390 */ "BUNDLE\0"
  /* 30397 */ "DBG_VALUE\0"
  /* 30407 */ "DBG_INSTR_REF\0"
  /* 30421 */ "DBG_PHI\0"
  /* 30429 */ "DBG_LABEL\0"
  /* 30439 */ "#ADJCALLSTACKDOWN\0"
  /* 30457 */ "#ADJCALLSTACKUP\0"
  /* 30473 */ "LIFETIME_START\0"
  /* 30488 */ "DBG_VALUE_LIST\0"
  /* 30503 */ "dsync\0"
  /* 30509 */ "esync\0"
  /* 30515 */ "isync\0"
  /* 30521 */ "rsync\0"
  /* 30527 */ "rfde\0"
  /* 30532 */ "rfe\0"
  /* 30536 */ "# FEntry call\0"
  /* 30550 */ "simcall\0"
  /* 30558 */ "syscall\0"
  /* 30566 */ "ill\0"
  /* 30570 */ "ill.n\0"
  /* 30576 */ "ret.n\0"
  /* 30582 */ "retw.n\0"
  /* 30589 */ "foo\0"
  /* 30593 */ "rfwo\0"
  /* 30598 */ "!xtensa_ee_zero_qacc_p\0"
  /* 30621 */ "!xtensa_ee_zero_accx_p\0"
  /* 30644 */ "nop\0"
  /* 30648 */ "ret\0"
  /* 30652 */ "rfwu\0"
  /* 30657 */ "excw\0"
  /* 30662 */ "memw\0"
  /* 30667 */ "retw\0"
  /* 30672 */ "extw\0"
};
#endif // CAPSTONE_DIET

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    30398U,	// DBG_VALUE
    30489U,	// DBG_VALUE_LIST
    30408U,	// DBG_INSTR_REF
    30422U,	// DBG_PHI
    30430U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    30391U,	// BUNDLE
    30474U,	// LIFETIME_START
    30365U,	// LIFETIME_END
    30378U,	// PSEUDO_PROBE
    0U,	// ARITH_FENCE
    0U,	// STACKMAP
    30537U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    30297U,	// PATCHABLE_FUNCTION_ENTER
    30217U,	// PATCHABLE_RET
    30343U,	// PATCHABLE_FUNCTION_EXIT
    30320U,	// PATCHABLE_TAIL_CALL
    30272U,	// PATCHABLE_EVENT_CALL
    30248U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// MEMBARRIER
    0U,	// JUMP_TABLE_DEBUG_INFO
    0U,	// G_ASSERT_SEXT
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ASSERT_ALIGN
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_SDIVREM
    0U,	// G_UDIVREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_CONSTANT_POOL
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_CONSTANT_FOLD_BARRIER
    0U,	// G_INTRINSIC_FPTRUNC_ROUND
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_ATOMICRMW_FMAX
    0U,	// G_ATOMICRMW_FMIN
    0U,	// G_ATOMICRMW_UINC_WRAP
    0U,	// G_ATOMICRMW_UDEC_WRAP
    0U,	// G_FENCE
    0U,	// G_PREFETCH
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INVOKE_REGION_START
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_INTRINSIC_CONVERGENT
    0U,	// G_INTRINSIC_CONVERGENT_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ROTR
    0U,	// G_ROTL
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FEXP10
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FLDEXP
    0U,	// G_FFREXP
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_IS_FPCLASS
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_GET_FPENV
    0U,	// G_SET_FPENV
    0U,	// G_RESET_FPENV
    0U,	// G_GET_FPMODE
    0U,	// G_SET_FPMODE
    0U,	// G_RESET_FPMODE
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_LROUND
    0U,	// G_LLROUND
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STACKSAVE
    0U,	// G_STACKRESTORE
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_STRICT_FLDEXP
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMCPY_INLINE
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_BZERO
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_FMAXIMUM
    0U,	// G_VECREDUCE_FMINIMUM
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// G_SBFX
    0U,	// G_UBFX
    30440U,	// ADJCALLSTACKDOWN
    30458U,	// ADJCALLSTACKUP
    40789U,	// ATOMIC_CMP_SWAP_16_P
    40108U,	// ATOMIC_CMP_SWAP_32_P
    41469U,	// ATOMIC_CMP_SWAP_8_P
    40647U,	// ATOMIC_LOAD_ADD_16_P
    39944U,	// ATOMIC_LOAD_ADD_32_P
    41333U,	// ATOMIC_LOAD_ADD_8_P
    40671U,	// ATOMIC_LOAD_AND_16_P
    39968U,	// ATOMIC_LOAD_AND_32_P
    41356U,	// ATOMIC_LOAD_AND_8_P
    40908U,	// ATOMIC_LOAD_MAX_16_P
    40295U,	// ATOMIC_LOAD_MAX_32_P
    41583U,	// ATOMIC_LOAD_MAX_8_P
    40720U,	// ATOMIC_LOAD_MIN_16_P
    40039U,	// ATOMIC_LOAD_MIN_32_P
    41403U,	// ATOMIC_LOAD_MIN_8_P
    40695U,	// ATOMIC_LOAD_NAND_16_P
    39992U,	// ATOMIC_LOAD_NAND_32_P
    41379U,	// ATOMIC_LOAD_NAND_8_P
    40861U,	// ATOMIC_LOAD_OR_16_P
    40226U,	// ATOMIC_LOAD_OR_32_P
    41538U,	// ATOMIC_LOAD_OR_8_P
    40599U,	// ATOMIC_LOAD_SUB_16_P
    39896U,	// ATOMIC_LOAD_SUB_32_P
    41287U,	// ATOMIC_LOAD_SUB_8_P
    40932U,	// ATOMIC_LOAD_UMAX_16_P
    40319U,	// ATOMIC_LOAD_UMAX_32_P
    41606U,	// ATOMIC_LOAD_UMAX_8_P
    40744U,	// ATOMIC_LOAD_UMIN_16_P
    40063U,	// ATOMIC_LOAD_UMIN_32_P
    41426U,	// ATOMIC_LOAD_UMIN_8_P
    40884U,	// ATOMIC_LOAD_XOR_16_P
    40249U,	// ATOMIC_LOAD_XOR_32_P
    41560U,	// ATOMIC_LOAD_XOR_8_P
    40769U,	// ATOMIC_SWAP_16_P
    40088U,	// ATOMIC_SWAP_32_P
    41450U,	// ATOMIC_SWAP_8_P
    60398U,	// BRCC_FP
    67156522U,	// BR_JT
    30590U,	// CONSTPOOL_ENTRY
    539048393U,	// EE_ANDQ_P
    67189301U,	// EE_BITREV_P
    536946937U,	// EE_CMUL_S16_LD_INCP_P
    539041817U,	// EE_CMUL_S16_P
    536947631U,	// EE_CMUL_S16_ST_INCP_P
    536947099U,	// EE_FFT_AMS_S16_LD_INCP_P
    536949305U,	// EE_FFT_AMS_S16_LD_INCP_UAUP_P
    536946544U,	// EE_FFT_AMS_S16_LD_R32_DECP_P
    2174033U,	// EE_FFT_AMS_S16_ST_INCP_P
    79748U,	// EE_FFT_CMUL_S16_LD_XP_P
    539048195U,	// EE_FFT_CMUL_S16_ST_XP_P
    539041789U,	// EE_FFT_R2BF_S16_P
    539044747U,	// EE_FFT_R2BF_S16_ST_INCP_P
    1073817495U,	// EE_FFT_VST_R32_DECP_P
    44924U,	// EE_LDF_128_IP_P
    46876U,	// EE_LDF_128_XP_P
    44591U,	// EE_LDF_64_IP_P
    46543U,	// EE_LDF_64_XP_P
    4239080U,	// EE_LDQA_S16_128_IP_P
    67155592U,	// EE_LDQA_S16_128_XP_P
    4239142U,	// EE_LDQA_S8_128_IP_P
    67155654U,	// EE_LDQA_S8_128_XP_P
    4239111U,	// EE_LDQA_U16_128_IP_P
    67155623U,	// EE_LDQA_U16_128_XP_P
    4239172U,	// EE_LDQA_U8_128_IP_P
    67155684U,	// EE_LDQA_U8_128_XP_P
    2170100U,	// EE_LDXQ_32_P
    1610691047U,	// EE_LD_128_USAR_IP_P
    80101U,	// EE_LD_128_USAR_XP_P
    6337029U,	// EE_LD_ACCX_IP_P
    8433067U,	// EE_LD_QACC_H_H_32_IP_P
    4239280U,	// EE_LD_QACC_H_L_128_IP_P
    8433133U,	// EE_LD_QACC_L_H_32_IP_P
    4239348U,	// EE_LD_QACC_L_L_128_IP_P
    4239787U,	// EE_LD_UA_STATE_IP_P
    2147558313U,	// EE_MOVI_32_A_P
    2147563909U,	// EE_MOVI_32_Q_P
    599071U,	// EE_MOV_S16_QACC_P
    599248U,	// EE_MOV_S8_QACC_P
    599130U,	// EE_MOV_U16_QACC_P
    599305U,	// EE_MOV_U8_QACC_P
    69286404U,	// EE_NOTQ_P
    539048413U,	// EE_ORQ_P
    2686531877U,	// EE_SLCI_2Q_P
    2177363U,	// EE_SLCXXP_2Q_P
    2686531900U,	// EE_SRCI_2Q_P
    1073816514U,	// EE_SRCMB_S16_QACC_P
    1073816694U,	// EE_SRCMB_S8_QACC_P
    2174132U,	// EE_SRCQ_128_ST_INCP_P
    2177388U,	// EE_SRCXXP_2Q_P
    1610690814U,	// EE_SRC_Q_LD_IP_P
    79928U,	// EE_SRC_Q_LD_XP_P
    539048350U,	// EE_SRC_Q_P
    539047323U,	// EE_SRC_Q_QUP_P
    1073789637U,	// EE_SRS_ACCX_P
    44950U,	// EE_STF_128_IP_P
    46902U,	// EE_STF_128_XP_P
    44616U,	// EE_STF_64_IP_P
    46568U,	// EE_STF_64_XP_P
    2170123U,	// EE_STXQ_32_P
    6337055U,	// EE_ST_ACCX_IP_P
    8433100U,	// EE_ST_QACC_H_H_32_IP_P
    4239314U,	// EE_ST_QACC_H_L_128_IP_P
    8433166U,	// EE_ST_QACC_L_H_32_IP_P
    4239382U,	// EE_ST_QACC_L_L_128_IP_P
    4239817U,	// EE_ST_UA_STATE_IP_P
    536947066U,	// EE_VADDS_S16_LD_INCP_P
    539041941U,	// EE_VADDS_S16_P
    536947760U,	// EE_VADDS_S16_ST_INCP_P
    536946872U,	// EE_VADDS_S32_LD_INCP_P
    539041252U,	// EE_VADDS_S32_P
    536947530U,	// EE_VADDS_S32_ST_INCP_P
    536947292U,	// EE_VADDS_S8_LD_INCP_P
    539042558U,	// EE_VADDS_S8_P
    536948018U,	// EE_VADDS_S8_ST_INCP_P
    539041889U,	// EE_VCMP_EQ_S16_P
    539041200U,	// EE_VCMP_EQ_S32_P
    539042508U,	// EE_VCMP_EQ_S8_P
    539041966U,	// EE_VCMP_GT_S16_P
    539041277U,	// EE_VCMP_GT_S32_P
    539042582U,	// EE_VCMP_GT_S8_P
    539041993U,	// EE_VCMP_LT_S16_P
    539041304U,	// EE_VCMP_LT_S32_P
    539042608U,	// EE_VCMP_LT_S8_P
    3221302989U,	// EE_VLDBC_16_IP_P
    67182255U,	// EE_VLDBC_16_P
    79469U,	// EE_VLDBC_16_XP_P
    3758173584U,	// EE_VLDBC_32_IP_P
    67181552U,	// EE_VLDBC_32_P
    79284U,	// EE_VLDBC_32_XP_P
    77906U,	// EE_VLDBC_8_IP_P
    67182942U,	// EE_VLDBC_8_P
    79722U,	// EE_VLDBC_8_XP_P
    2172855U,	// EE_VLDHBC_16_INCP_P
    1610690402U,	// EE_VLD_128_IP_P
    79618U,	// EE_VLD_128_XP_P
    536948321U,	// EE_VLD_H_64_IP_P
    79361U,	// EE_VLD_H_64_XP_P
    536948375U,	// EE_VLD_L_64_IP_P
    79415U,	// EE_VLD_L_64_XP_P
    536947134U,	// EE_VMAX_S16_LD_INCP_P
    539042071U,	// EE_VMAX_S16_P
    536947828U,	// EE_VMAX_S16_ST_INCP_P
    536946905U,	// EE_VMAX_S32_LD_INCP_P
    539041331U,	// EE_VMAX_S32_P
    536947563U,	// EE_VMAX_S32_ST_INCP_P
    536947324U,	// EE_VMAX_S8_LD_INCP_P
    539042683U,	// EE_VMAX_S8_P
    536948050U,	// EE_VMAX_S8_ST_INCP_P
    536947001U,	// EE_VMIN_S16_LD_INCP_P
    539041865U,	// EE_VMIN_S16_P
    536947695U,	// EE_VMIN_S16_ST_INCP_P
    536946807U,	// EE_VMIN_S32_LD_INCP_P
    539041176U,	// EE_VMIN_S32_P
    536947465U,	// EE_VMIN_S32_ST_INCP_P
    536947229U,	// EE_VMIN_S8_LD_INCP_P
    539042485U,	// EE_VMIN_S8_P
    536947955U,	// EE_VMIN_S8_ST_INCP_P
    1073819929U,	// EE_VMULAS_S16_ACCX_LD_IP_P
    1073820597U,	// EE_VMULAS_S16_ACCX_LD_IP_QUP_P
    79955U,	// EE_VMULAS_S16_ACCX_LD_XP_P
    79097U,	// EE_VMULAS_S16_ACCX_LD_XP_QUP_P
    69286475U,	// EE_VMULAS_S16_ACCX_P
    536946645U,	// EE_VMULAS_S16_QACC_LDBC_INCP_P
    536949345U,	// EE_VMULAS_S16_QACC_LDBC_INCP_QUP_P
    1073819756U,	// EE_VMULAS_S16_QACC_LD_IP_P
    1073820435U,	// EE_VMULAS_S16_QACC_LD_IP_QUP_P
    79782U,	// EE_VMULAS_S16_QACC_LD_XP_P
    78935U,	// EE_VMULAS_S16_QACC_LD_XP_QUP_P
    69280768U,	// EE_VMULAS_S16_QACC_P
    1073820003U,	// EE_VMULAS_S8_ACCX_LD_IP_P
    1073820679U,	// EE_VMULAS_S8_ACCX_LD_IP_QUP_P
    80029U,	// EE_VMULAS_S8_ACCX_LD_XP_P
    79179U,	// EE_VMULAS_S8_ACCX_LD_XP_QUP_P
    69286537U,	// EE_VMULAS_S8_ACCX_P
    536946727U,	// EE_VMULAS_S8_QACC_LDBC_INCP_P
    536949435U,	// EE_VMULAS_S8_QACC_LDBC_INCP_QUP_P
    1073819830U,	// EE_VMULAS_S8_QACC_LD_IP_P
    1073820517U,	// EE_VMULAS_S8_QACC_LD_IP_QUP_P
    79856U,	// EE_VMULAS_S8_QACC_LD_XP_P
    79017U,	// EE_VMULAS_S8_QACC_LD_XP_QUP_P
    69280946U,	// EE_VMULAS_S8_QACC_P
    1073819966U,	// EE_VMULAS_U16_ACCX_LD_IP_P
    1073820638U,	// EE_VMULAS_U16_ACCX_LD_IP_QUP_P
    79992U,	// EE_VMULAS_U16_ACCX_LD_XP_P
    79138U,	// EE_VMULAS_U16_ACCX_LD_XP_QUP_P
    69286506U,	// EE_VMULAS_U16_ACCX_P
    536946686U,	// EE_VMULAS_U16_QACC_LDBC_INCP_P
    536949390U,	// EE_VMULAS_U16_QACC_LDBC_INCP_QUP_P
    1073819793U,	// EE_VMULAS_U16_QACC_LD_IP_P
    1073820476U,	// EE_VMULAS_U16_QACC_LD_IP_QUP_P
    79819U,	// EE_VMULAS_U16_QACC_LD_XP_P
    78976U,	// EE_VMULAS_U16_QACC_LD_XP_QUP_P
    69280827U,	// EE_VMULAS_U16_QACC_P
    1073820039U,	// EE_VMULAS_U8_ACCX_LD_IP_P
    1073820719U,	// EE_VMULAS_U8_ACCX_LD_IP_QUP_P
    80065U,	// EE_VMULAS_U8_ACCX_LD_XP_P
    79219U,	// EE_VMULAS_U8_ACCX_LD_XP_QUP_P
    69286567U,	// EE_VMULAS_U8_ACCX_P
    536946767U,	// EE_VMULAS_U8_QACC_LDBC_INCP_P
    536949479U,	// EE_VMULAS_U8_QACC_LDBC_INCP_QUP_P
    1073819866U,	// EE_VMULAS_U8_QACC_LD_IP_P
    1073820557U,	// EE_VMULAS_U8_QACC_LD_IP_QUP_P
    79892U,	// EE_VMULAS_U8_QACC_LD_XP_P
    79057U,	// EE_VMULAS_U8_QACC_LD_XP_QUP_P
    69281003U,	// EE_VMULAS_U8_QACC_P
    536946969U,	// EE_VMUL_S16_LD_INCP_P
    539041841U,	// EE_VMUL_S16_P
    536947663U,	// EE_VMUL_S16_ST_INCP_P
    536947198U,	// EE_VMUL_S8_LD_INCP_P
    539042462U,	// EE_VMUL_S8_P
    536947924U,	// EE_VMUL_S8_ST_INCP_P
    536947166U,	// EE_VMUL_U16_LD_INCP_P
    539042095U,	// EE_VMUL_U16_P
    536947860U,	// EE_VMUL_U16_ST_INCP_P
    536947355U,	// EE_VMUL_U8_LD_INCP_P
    539042706U,	// EE_VMUL_U8_P
    536948081U,	// EE_VMUL_U8_ST_INCP_P
    539042020U,	// EE_VPRELU_S16_P
    539042634U,	// EE_VPRELU_S8_P
    73982U,	// EE_VRELU_S16_P
    74595U,	// EE_VRELU_S8_P
    69278801U,	// EE_VSL_32_P
    536947386U,	// EE_VSMULAS_S16_QACC_LD_INCP_P
    1612784608U,	// EE_VSMULAS_S16_QACC_P
    536947426U,	// EE_VSMULAS_S8_QACC_LD_INCP_P
    2686526611U,	// EE_VSMULAS_S8_QACC_P
    69279057U,	// EE_VSR_32_P
    1610690616U,	// EE_VST_128_IP_P
    79696U,	// EE_VST_128_XP_P
    536948348U,	// EE_VST_H_64_IP_P
    79388U,	// EE_VST_H_64_XP_P
    536948402U,	// EE_VST_L_64_IP_P
    79442U,	// EE_VST_L_64_XP_P
    536947033U,	// EE_VSUBS_S16_LD_INCP_P
    539041916U,	// EE_VSUBS_S16_P
    536947727U,	// EE_VSUBS_S16_ST_INCP_P
    536946839U,	// EE_VSUBS_S32_LD_INCP_P
    539041227U,	// EE_VSUBS_S32_P
    536947497U,	// EE_VSUBS_S32_ST_INCP_P
    536947260U,	// EE_VSUBS_S8_LD_INCP_P
    539042534U,	// EE_VSUBS_S8_P
    536947986U,	// EE_VSUBS_S8_ST_INCP_P
    69279597U,	// EE_VUNZIP_16_P
    69278916U,	// EE_VUNZIP_32_P
    69280276U,	// EE_VUNZIP_8_P
    69279622U,	// EE_VZIP_16_P
    69278941U,	// EE_VZIP_32_P
    69280300U,	// EE_VZIP_8_P
    539048432U,	// EE_XORQ_P
    30622U,	// EE_ZERO_ACCX_P
    30599U,	// EE_ZERO_QACC_P
    604595U,	// EE_ZERO_Q_P
    50510U,	// EXTUI_BR2_P
    55748U,	// EXTUI_BR4_P
    61533U,	// EXTUI_BR_P
    10541699U,	// L8I_P
    67183908U,	// LDDEC_P
    67184158U,	// LDINC_P
    12644456U,	// LOOPBR
    67164961U,	// LOOPDEC
    122623U,	// LOOPEND
    67171337U,	// LOOPINIT
    12645415U,	// LOOPSTART
    67158791U,	// MOVBA2_P
    55965U,	// MOVBA2_P2
    67164603U,	// MOVBA4_P
    55739U,	// MOVBA4_P2
    67164829U,	// MOVBA_P
    55965U,	// MOVBA_P2
    536945974U,	// MULA_DA_HH_LDDEC_P
    536946224U,	// MULA_DA_HH_LDINC_P
    536946090U,	// MULA_DA_HL_LDDEC_P
    536946340U,	// MULA_DA_HL_LDINC_P
    536946032U,	// MULA_DA_LH_LDDEC_P
    536946282U,	// MULA_DA_LH_LDINC_P
    536946148U,	// MULA_DA_LL_LDDEC_P
    536946398U,	// MULA_DA_LL_LDINC_P
    536946003U,	// MULA_DD_HH_LDDEC_P
    536946253U,	// MULA_DD_HH_LDINC_P
    536946119U,	// MULA_DD_HL_LDDEC_P
    536946369U,	// MULA_DD_HL_LDINC_P
    536946061U,	// MULA_DD_LH_LDDEC_P
    536946311U,	// MULA_DD_LH_LDINC_P
    536946177U,	// MULA_DD_LL_LDDEC_P
    536946427U,	// MULA_DD_LL_LDINC_P
    10545657U,	// RESTORE_BOOL
    62415U,	// SELECT
    60408U,	// SELECT_CC_FP_FP
    62484U,	// SELECT_CC_FP_INT
    60426U,	// SELECT_CC_INT_FP
    61523U,	// SLLI_BR_P
    55947U,	// SLL_P
    10545672U,	// SPILL_BOOL
    55930U,	// SRA_P
    55956U,	// SRL_P
    567064U,	// WSR_ACCHI_P
    567108U,	// WSR_ACCLO_P
    564108U,	// WSR_M0_P
    564146U,	// WSR_M1_P
    564811U,	// WSR_M2_P
    564849U,	// WSR_M3_P
    567086U,	// XSR_ACCHI_P
    567130U,	// XSR_ACCLO_P
    564127U,	// XSR_M0_P
    564165U,	// XSR_M1_P
    564830U,	// XSR_M2_P
    564868U,	// XSR_M3_P
    69286424U,	// mv_QR_P
    67143192U,	// ABS
    67143089U,	// ABS_S
    32973U,	// ADD
    81921390U,	// ADDEXPM_S
    81921424U,	// ADDEXP_S
    536904286U,	// ADDI
    2147517513U,	// ADDI_N
    2684387971U,	// ADDMI
    32818U,	// ADDX2
    32839U,	// ADDX4
    32874U,	// ADDX8
    33840U,	// ADD_N
    34078U,	// ADD_S
    67170934U,	// AE_ABS16S
    67170682U,	// AE_ABS24S
    67158740U,	// AE_ABS32
    67170586U,	// AE_ABS32S
    67164552U,	// AE_ABS64
    67170811U,	// AE_ABS64S
    55858U,	// AE_ADD16
    62036U,	// AE_ADD16S
    61772U,	// AE_ADD24S
    49749U,	// AE_ADD32
    61662U,	// AE_ADD32S
    58299U,	// AE_ADD32_HL_LH
    55561U,	// AE_ADD64
    61863U,	// AE_ADD64S
    49679U,	// AE_ADDBRBA32
    49736U,	// AE_ADDSUB32
    61648U,	// AE_ADDSUB32S
    57070U,	// AE_AND
    67156887U,	// AE_CVT32X2F16_10
    67158414U,	// AE_CVT32X2F16_32
    67158508U,	// AE_CVT48A32
    67158495U,	// AE_CVT64A32
    67166072U,	// AE_CVT64F32_H
    67166234U,	// AE_CVTA32F24S_H
    67167740U,	// AE_CVTA32F24S_L
    67170462U,	// AE_CVTQ56A32S
    67166217U,	// AE_CVTQ56P32S_H
    67167723U,	// AE_CVTQ56P32S_L
    81943284U,	// AE_DB
    16934148U,	// AE_DBI
    16931818U,	// AE_DBI_IC
    16936311U,	// AE_DBI_IP
    81943469U,	// AE_DB_IC
    81947962U,	// AE_DB_IP
    81944411U,	// AE_DIV64D32_H
    81945919U,	// AE_DIV64D32_L
    55888U,	// AE_EQ16
    49834U,	// AE_EQ32
    55657U,	// AE_EQ64
    3221284048U,	// AE_L16M_I
    3772839029U,	// AE_L16M_IU
    62944U,	// AE_L16M_X
    14737024U,	// AE_L16M_XC
    14742723U,	// AE_L16M_XU
    536929462U,	// AE_L16X2M_I
    1088484441U,	// AE_L16X2M_IU
    62918U,	// AE_L16X2M_X
    14736996U,	// AE_L16X2M_XC
    14742695U,	// AE_L16X2M_XU
    1610671190U,	// AE_L16X4_I
    2162224405U,	// AE_L16X4_IP
    81845463U,	// AE_L16X4_RIC
    81850053U,	// AE_L16X4_RIP
    62822U,	// AE_L16X4_X
    14736892U,	// AE_L16X4_XC
    14741362U,	// AE_L16X4_XP
    3221283950U,	// AE_L16_I
    3772837167U,	// AE_L16_IP
    62846U,	// AE_L16_X
    14736918U,	// AE_L16_XC
    14741388U,	// AE_L16_XP
    536929273U,	// AE_L32F24_I
    1088482451U,	// AE_L32F24_IP
    62759U,	// AE_L32F24_X
    14736824U,	// AE_L32F24_XC
    14741294U,	// AE_L32F24_XP
    536929440U,	// AE_L32M_I
    1088484417U,	// AE_L32M_IU
    62896U,	// AE_L32M_X
    14736972U,	// AE_L32M_XC
    14742671U,	// AE_L32M_XU
    1610671110U,	// AE_L32X2F24_I
    2162224323U,	// AE_L32X2F24_IP
    81845399U,	// AE_L32X2F24_RIC
    81849989U,	// AE_L32X2F24_RIP
    62772U,	// AE_L32X2F24_X
    14736838U,	// AE_L32X2F24_XC
    14741308U,	// AE_L32X2F24_XP
    1610671073U,	// AE_L32X2_I
    2162224209U,	// AE_L32X2_IP
    81845292U,	// AE_L32X2_RIC
    81849882U,	// AE_L32X2_RIP
    62735U,	// AE_L32X2_X
    14736798U,	// AE_L32X2_XC
    14741268U,	// AE_L32X2_XP
    536929239U,	// AE_L32_I
    1088482346U,	// AE_L32_IP
    62725U,	// AE_L32_X
    14736787U,	// AE_L32_XC
    14741257U,	// AE_L32_XP
    1610671140U,	// AE_L64_I
    2699095267U,	// AE_L64_IP
    62802U,	// AE_L64_X
    14736870U,	// AE_L64_XC
    14741340U,	// AE_L64_XP
    81845555U,	// AE_LA16X4NEG_PC
    81845621U,	// AE_LA16X4POS_PC
    3374373777U,	// AE_LA16X4_IC
    3374378233U,	// AE_LA16X4_IP
    3374374073U,	// AE_LA16X4_RIC
    3374378663U,	// AE_LA16X4_RIP
    81845540U,	// AE_LA24NEG_PC
    81845606U,	// AE_LA24POS_PC
    81845523U,	// AE_LA24X2NEG_PC
    81845589U,	// AE_LA24X2POS_PC
    3374373703U,	// AE_LA24X2_IC
    3374378091U,	// AE_LA24X2_IP
    3374373960U,	// AE_LA24X2_RIC
    3374378550U,	// AE_LA24X2_RIP
    3374373731U,	// AE_LA24_IC
    3374378119U,	// AE_LA24_IP
    3374373990U,	// AE_LA24_RIC
    3374378580U,	// AE_LA24_RIP
    3374373743U,	// AE_LA32X2F24_IC
    3374378145U,	// AE_LA32X2F24_IP
    3374374003U,	// AE_LA32X2F24_RIC
    3374378593U,	// AE_LA32X2F24_RIP
    81845506U,	// AE_LA32X2NEG_PC
    81845572U,	// AE_LA32X2POS_PC
    3374373675U,	// AE_LA32X2_IC
    3374378037U,	// AE_LA32X2_IP
    3374373902U,	// AE_LA32X2_RIC
    3374378492U,	// AE_LA32X2_RIP
    67170032U,	// AE_LA64_PP
    1610671150U,	// AE_LALIGN64_I
    67164923U,	// AE_LB
    21030156U,	// AE_LBI
    58679U,	// AE_LBK
    3758155036U,	// AE_LBKI
    67171066U,	// AE_LBS
    21030181U,	// AE_LBSI
    55868U,	// AE_LE16
    49772U,	// AE_LE32
    55571U,	// AE_LE64
    55897U,	// AE_LT16
    49897U,	// AE_LT32
    55709U,	// AE_LT64
    49917U,	// AE_MAX32
    55729U,	// AE_MAX64
    61747U,	// AE_MAXABS32S
    61972U,	// AE_MAXABS64S
    49824U,	// AE_MIN32
    55647U,	// AE_MIN64
    61733U,	// AE_MINABS32S
    61958U,	// AE_MINABS64S
    67171535U,	// AE_MOV
    67156701U,	// AE_MOVAD16_0
    67157689U,	// AE_MOVAD16_1
    67158151U,	// AE_MOVAD16_2
    67163910U,	// AE_MOVAD16_3
    67166058U,	// AE_MOVAD32_H
    67167566U,	// AE_MOVAD32_L
    67169101U,	// AE_MOVALIGN
    67164700U,	// AE_MOVDA16
    55032U,	// AE_MOVDA16X2
    67158557U,	// AE_MOVDA32
    54910U,	// AE_MOVDA32X2
    14834141U,	// AE_MOVF16X4
    14833292U,	// AE_MOVF32X2
    14833948U,	// AE_MOVF64
    23127342U,	// AE_MOVI
    14834191U,	// AE_MOVT16X4
    14833346U,	// AE_MOVT32X2
    14834086U,	// AE_MOVT64
    55786U,	// AE_MUL16X4
    59868U,	// AE_MUL32U_LL
    48289U,	// AE_MUL32X16_H0
    50765U,	// AE_MUL32X16_H0_S2
    49059U,	// AE_MUL32X16_H1
    51423U,	// AE_MUL32X16_H1_S2
    50006U,	// AE_MUL32X16_H2
    51973U,	// AE_MUL32X16_H2_S2
    55180U,	// AE_MUL32X16_H3
    52681U,	// AE_MUL32X16_H3_S2
    48760U,	// AE_MUL32X16_L0
    51302U,	// AE_MUL32X16_L0_S2
    49254U,	// AE_MUL32X16_L1
    51648U,	// AE_MUL32X16_L1_S2
    50477U,	// AE_MUL32X16_L2
    52510U,	// AE_MUL32X16_L2_S2
    55375U,	// AE_MUL32X16_L3
    52906U,	// AE_MUL32X16_L3_S2
    57575U,	// AE_MUL32_HH
    57824U,	// AE_MUL32_LH
    59298U,	// AE_MUL32_LL
    54303U,	// AE_MUL32_LL_S2
    25352656U,	// AE_MULA16X4
    14838221U,	// AE_MULA32U_LL
    14826587U,	// AE_MULA32X16_H0
    14829051U,	// AE_MULA32X16_H0_S2
    14827357U,	// AE_MULA32X16_H1
    14829709U,	// AE_MULA32X16_H1_S2
    14828304U,	// AE_MULA32X16_H2
    14830259U,	// AE_MULA32X16_H2_S2
    14833478U,	// AE_MULA32X16_H3
    14830967U,	// AE_MULA32X16_H3_S2
    14827058U,	// AE_MULA32X16_L0
    14829588U,	// AE_MULA32X16_L0_S2
    14827552U,	// AE_MULA32X16_L1
    14829934U,	// AE_MULA32X16_L1_S2
    14828775U,	// AE_MULA32X16_L2
    14830796U,	// AE_MULA32X16_L2_S2
    14833673U,	// AE_MULA32X16_L3
    14831192U,	// AE_MULA32X16_L3_S2
    14835929U,	// AE_MULA32_HH
    14836178U,	// AE_MULA32_LH
    14837652U,	// AE_MULA32_LL
    14832654U,	// AE_MULA32_LL_S2
    14837693U,	// AE_MULAAD24_HH_LL
    14832687U,	// AE_MULAAD24_HH_LL_S2
    14836219U,	// AE_MULAAD24_HL_LH
    14831736U,	// AE_MULAAD24_HL_LH_S2
    14827460U,	// AE_MULAAD32X16_H0_L1
    14829830U,	// AE_MULAAD32X16_H0_L1_S2
    14826690U,	// AE_MULAAD32X16_H1_L0
    14829172U,	// AE_MULAAD32X16_H1_L0_S2
    14833581U,	// AE_MULAAD32X16_H2_L3
    14831088U,	// AE_MULAAD32X16_H2_L3_S2
    14828407U,	// AE_MULAAD32X16_H3_L2
    14830380U,	// AE_MULAAD32X16_H3_L2_S2
    14826282U,	// AE_MULAAFD16SS_11_00
    14828949U,	// AE_MULAAFD16SS_11_00_S2
    14827669U,	// AE_MULAAFD16SS_13_02
    14830055U,	// AE_MULAAFD16SS_13_02_S2
    14827809U,	// AE_MULAAFD16SS_33_22
    14830157U,	// AE_MULAAFD16SS_33_22_S2
    14837771U,	// AE_MULAAFD24_HH_LL
    14832777U,	// AE_MULAAFD24_HH_LL_S2
    14836258U,	// AE_MULAAFD24_HL_LH
    14831781U,	// AE_MULAAFD24_HL_LH_S2
    14827505U,	// AE_MULAAFD32X16_H0_L1
    14829881U,	// AE_MULAAFD32X16_H0_L1_S2
    14826780U,	// AE_MULAAFD32X16_H1_L0
    14829274U,	// AE_MULAAFD32X16_H1_L0_S2
    14833626U,	// AE_MULAAFD32X16_H2_L3
    14831139U,	// AE_MULAAFD32X16_H2_L3_S2
    14828497U,	// AE_MULAAFD32X16_H3_L2
    14830482U,	// AE_MULAAFD32X16_H3_L2_S2
    14833776U,	// AE_MULAC24
    14835647U,	// AE_MULAC32X16_H
    14837153U,	// AE_MULAC32X16_L
    14826232U,	// AE_MULAF16SS_00
    14828890U,	// AE_MULAF16SS_00_S2
    14826409U,	// AE_MULAF16SS_10
    14827207U,	// AE_MULAF16SS_11
    14826459U,	// AE_MULAF16SS_20
    14827257U,	// AE_MULAF16SS_21
    14827759U,	// AE_MULAF16SS_22
    14826509U,	// AE_MULAF16SS_30
    14827307U,	// AE_MULAF16SS_31
    14827936U,	// AE_MULAF16SS_32
    14833428U,	// AE_MULAF16SS_33
    25359182U,	// AE_MULAF16X4SS
    14835970U,	// AE_MULAF32R_HH
    14836459U,	// AE_MULAF32R_LH
    14838013U,	// AE_MULAF32R_LL
    14833055U,	// AE_MULAF32R_LL_S2
    14836066U,	// AE_MULAF32S_HH
    14836555U,	// AE_MULAF32S_LH
    14838109U,	// AE_MULAF32S_LL
    14833111U,	// AE_MULAF32S_LL_S2
    14826604U,	// AE_MULAF32X16_H0
    14829071U,	// AE_MULAF32X16_H0_S2
    14827374U,	// AE_MULAF32X16_H1
    14829729U,	// AE_MULAF32X16_H1_S2
    14828321U,	// AE_MULAF32X16_H2
    14830279U,	// AE_MULAF32X16_H2_S2
    14833495U,	// AE_MULAF32X16_H3
    14830987U,	// AE_MULAF32X16_H3_S2
    14827075U,	// AE_MULAF32X16_L0
    14829608U,	// AE_MULAF32X16_L0_S2
    14827569U,	// AE_MULAF32X16_L1
    14829954U,	// AE_MULAF32X16_L1_S2
    14828792U,	// AE_MULAF32X16_L2
    14830816U,	// AE_MULAF32X16_L2_S2
    14833690U,	// AE_MULAF32X16_L3
    14831212U,	// AE_MULAF32X16_L3_S2
    14837299U,	// AE_MULAF48Q32SP16S_L
    14832225U,	// AE_MULAF48Q32SP16S_L_S2
    14837538U,	// AE_MULAF48Q32SP16U_L
    14832515U,	// AE_MULAF48Q32SP16U_L_S2
    14834391U,	// AE_MULAFC24RA
    14835823U,	// AE_MULAFC32X16RAS_H
    14837432U,	// AE_MULAFC32X16RAS_L
    25354208U,	// AE_MULAFD24X2_FIR_H
    25355714U,	// AE_MULAFD24X2_FIR_L
    25354545U,	// AE_MULAFD32X16X2_FIR_HH
    25356131U,	// AE_MULAFD32X16X2_FIR_HL
    25355034U,	// AE_MULAFD32X16X2_FIR_LH
    25356588U,	// AE_MULAFD32X16X2_FIR_LL
    14839776U,	// AE_MULAFP24X2R
    14834341U,	// AE_MULAFP24X2RA
    14831313U,	// AE_MULAFP24X2RA_S2
    14833222U,	// AE_MULAFP24X2R_S2
    14835755U,	// AE_MULAFP32X16X2RAS_H
    14831511U,	// AE_MULAFP32X16X2RAS_H_S2
    14837364U,	// AE_MULAFP32X16X2RAS_L
    14832364U,	// AE_MULAFP32X16X2RAS_L_S2
    14835864U,	// AE_MULAFP32X16X2RS_H
    14831588U,	// AE_MULAFP32X16X2RS_H_S2
    14837473U,	// AE_MULAFP32X16X2RS_L
    14832441U,	// AE_MULAFP32X16X2RS_L_S2
    14840500U,	// AE_MULAFP32X2RAS
    14840591U,	// AE_MULAFP32X2RS
    14831372U,	// AE_MULAFQ32SP24S_H_S2
    14832086U,	// AE_MULAFQ32SP24S_L_S2
    14833359U,	// AE_MULAP24X2
    14830917U,	// AE_MULAP24X2_S2
    14835591U,	// AE_MULAP32X16X2_H
    14837097U,	// AE_MULAP32X16X2_L
    14833305U,	// AE_MULAP32X2
    14832299U,	// AE_MULAQ32SP16S_L_S2
    14832589U,	// AE_MULAQ32SP16U_L_S2
    14831417U,	// AE_MULARFQ32SP24S_H_S2
    14832131U,	// AE_MULARFQ32SP24S_L_S2
    14836113U,	// AE_MULAS32F48P16S_HH
    14831662U,	// AE_MULAS32F48P16S_HH_S2
    14836602U,	// AE_MULAS32F48P16S_LH
    14832012U,	// AE_MULAS32F48P16S_LH_S2
    14838156U,	// AE_MULAS32F48P16S_LL
    14833148U,	// AE_MULAS32F48P16S_LL_S2
    14837935U,	// AE_MULASD24_HH_LL
    14832965U,	// AE_MULASD24_HH_LL_S2
    14836381U,	// AE_MULASD24_HL_LH
    14831922U,	// AE_MULASD24_HL_LH_S2
    14826968U,	// AE_MULASD32X16_H1_L0
    14829486U,	// AE_MULASD32X16_H1_L0_S2
    14828685U,	// AE_MULASD32X16_H3_L2
    14830694U,	// AE_MULASD32X16_H3_L2_S2
    14837853U,	// AE_MULASFD24_HH_LL
    14832871U,	// AE_MULASFD24_HH_LL_S2
    14836299U,	// AE_MULASFD24_HL_LH
    14831828U,	// AE_MULASFD24_HL_LH_S2
    14826874U,	// AE_MULASFD32X16_H1_L0
    14829380U,	// AE_MULASFD32X16_H1_L0_S2
    14828591U,	// AE_MULASFD32X16_H3_L2
    14830588U,	// AE_MULASFD32X16_H3_L2_S2
    55420U,	// AE_MULC24
    57296U,	// AE_MULC32X16_H
    58802U,	// AE_MULC32X16_L
    47881U,	// AE_MULF16SS_00
    50542U,	// AE_MULF16SS_00_S2
    48058U,	// AE_MULF16SS_10
    48856U,	// AE_MULF16SS_11
    48108U,	// AE_MULF16SS_20
    48906U,	// AE_MULF16SS_21
    49408U,	// AE_MULF16SS_22
    48158U,	// AE_MULF16SS_30
    48956U,	// AE_MULF16SS_31
    49585U,	// AE_MULF16SS_32
    55077U,	// AE_MULF16SS_33
    62302U,	// AE_MULF16X4SS
    57618U,	// AE_MULF32R_HH
    58107U,	// AE_MULF32R_LH
    59661U,	// AE_MULF32R_LL
    54706U,	// AE_MULF32R_LL_S2
    57714U,	// AE_MULF32S_HH
    58203U,	// AE_MULF32S_LH
    59757U,	// AE_MULF32S_LL
    54762U,	// AE_MULF32S_LL_S2
    48254U,	// AE_MULF32X16_H0
    50724U,	// AE_MULF32X16_H0_S2
    49024U,	// AE_MULF32X16_H1
    51382U,	// AE_MULF32X16_H1_S2
    49971U,	// AE_MULF32X16_H2
    51932U,	// AE_MULF32X16_H2_S2
    55145U,	// AE_MULF32X16_H3
    52640U,	// AE_MULF32X16_H3_S2
    48725U,	// AE_MULF32X16_L0
    51261U,	// AE_MULF32X16_L0_S2
    49219U,	// AE_MULF32X16_L1
    51607U,	// AE_MULF32X16_L1_S2
    50442U,	// AE_MULF32X16_L2
    52469U,	// AE_MULF32X16_L2_S2
    55340U,	// AE_MULF32X16_L3
    52865U,	// AE_MULF32X16_L3_S2
    58953U,	// AE_MULF48Q32SP16S_L
    53882U,	// AE_MULF48Q32SP16S_L_S2
    59192U,	// AE_MULF48Q32SP16U_L
    54172U,	// AE_MULF48Q32SP16U_L_S2
    56038U,	// AE_MULFC24RA
    57476U,	// AE_MULFC32X16RAS_H
    59085U,	// AE_MULFC32X16RAS_L
    57333U,	// AE_MULFD24X2_FIR_H
    58839U,	// AE_MULFD24X2_FIR_L
    57674U,	// AE_MULFD32X16X2_FIR_HH
    59260U,	// AE_MULFD32X16X2_FIR_HL
    58163U,	// AE_MULFD32X16X2_FIR_LH
    59717U,	// AE_MULFD32X16X2_FIR_LL
    62185U,	// AE_MULFP16X4RAS
    61986U,	// AE_MULFP16X4S
    61424U,	// AE_MULFP24X2R
    55990U,	// AE_MULFP24X2RA
    52965U,	// AE_MULFP24X2RA_S2
    54873U,	// AE_MULFP24X2R_S2
    57410U,	// AE_MULFP32X16X2RAS_H
    53169U,	// AE_MULFP32X16X2RAS_H_S2
    59019U,	// AE_MULFP32X16X2RAS_L
    54022U,	// AE_MULFP32X16X2RAS_L_S2
    57518U,	// AE_MULFP32X16X2RS_H
    53245U,	// AE_MULFP32X16X2RS_H_S2
    59127U,	// AE_MULFP32X16X2RS_L
    54098U,	// AE_MULFP32X16X2RS_L_S2
    62150U,	// AE_MULFP32X2RAS
    62240U,	// AE_MULFP32X2RS
    53027U,	// AE_MULFQ32SP24S_H_S2
    53741U,	// AE_MULFQ32SP24S_L_S2
    55005U,	// AE_MULP24X2
    52566U,	// AE_MULP24X2_S2
    57242U,	// AE_MULP32X16X2_H
    58748U,	// AE_MULP32X16X2_L
    54951U,	// AE_MULP32X2
    53953U,	// AE_MULQ32SP16S_L_S2
    54243U,	// AE_MULQ32SP16U_L_S2
    53073U,	// AE_MULRFQ32SP24S_H_S2
    53787U,	// AE_MULRFQ32SP24S_L_S2
    25352694U,	// AE_MULS16X4
    57767U,	// AE_MULS32F48P16S_HH
    53319U,	// AE_MULS32F48P16S_HH_S2
    58256U,	// AE_MULS32F48P16S_LH
    53669U,	// AE_MULS32F48P16S_LH_S2
    59810U,	// AE_MULS32F48P16S_LL
    54805U,	// AE_MULS32F48P16S_LL_S2
    14838250U,	// AE_MULS32U_LL
    14826673U,	// AE_MULS32X16_H0
    14829152U,	// AE_MULS32X16_H0_S2
    14827443U,	// AE_MULS32X16_H1
    14829810U,	// AE_MULS32X16_H1_S2
    14828390U,	// AE_MULS32X16_H2
    14830360U,	// AE_MULS32X16_H2_S2
    14833564U,	// AE_MULS32X16_H3
    14831068U,	// AE_MULS32X16_H3_S2
    14827144U,	// AE_MULS32X16_L0
    14829689U,	// AE_MULS32X16_L0_S2
    14827638U,	// AE_MULS32X16_L1
    14830035U,	// AE_MULS32X16_L1_S2
    14828861U,	// AE_MULS32X16_L2
    14830897U,	// AE_MULS32X16_L2_S2
    14833759U,	// AE_MULS32X16_L3
    14831293U,	// AE_MULS32X16_L3_S2
    14835956U,	// AE_MULS32_HH
    14836205U,	// AE_MULS32_LH
    14837679U,	// AE_MULS32_LL
    14837732U,	// AE_MULSAD24_HH_LL
    14832732U,	// AE_MULSAD24_HH_LL_S2
    14826735U,	// AE_MULSAD32X16_H1_L0
    14829223U,	// AE_MULSAD32X16_H1_L0_S2
    14828452U,	// AE_MULSAD32X16_H3_L2
    14830431U,	// AE_MULSAD32X16_H3_L2_S2
    14837812U,	// AE_MULSAFD24_HH_LL
    14832824U,	// AE_MULSAFD24_HH_LL_S2
    14826827U,	// AE_MULSAFD32X16_H1_L0
    14829327U,	// AE_MULSAFD32X16_H1_L0_S2
    14828544U,	// AE_MULSAFD32X16_H3_L2
    14830535U,	// AE_MULSAFD32X16_H3_L2_S2
    14826265U,	// AE_MULSF16SS_00
    14828929U,	// AE_MULSF16SS_00_S2
    14826442U,	// AE_MULSF16SS_10
    14827240U,	// AE_MULSF16SS_11
    14826492U,	// AE_MULSF16SS_20
    14827290U,	// AE_MULSF16SS_21
    14827792U,	// AE_MULSF16SS_22
    14826542U,	// AE_MULSF16SS_30
    14827340U,	// AE_MULSF16SS_31
    14827969U,	// AE_MULSF16SS_32
    14833461U,	// AE_MULSF16SS_33
    25359213U,	// AE_MULSF16X4SS
    14836001U,	// AE_MULSF32R_HH
    14836490U,	// AE_MULSF32R_LH
    14838044U,	// AE_MULSF32R_LL
    14833092U,	// AE_MULSF32R_LL_S2
    14836097U,	// AE_MULSF32S_HH
    14836586U,	// AE_MULSF32S_LH
    14838140U,	// AE_MULSF32S_LL
    14826639U,	// AE_MULSF32X16_H0
    14829112U,	// AE_MULSF32X16_H0_S2
    14827409U,	// AE_MULSF32X16_H1
    14829770U,	// AE_MULSF32X16_H1_S2
    14828356U,	// AE_MULSF32X16_H2
    14830320U,	// AE_MULSF32X16_H2_S2
    14833530U,	// AE_MULSF32X16_H3
    14831028U,	// AE_MULSF32X16_H3_S2
    14827110U,	// AE_MULSF32X16_L0
    14829649U,	// AE_MULSF32X16_L0_S2
    14827604U,	// AE_MULSF32X16_L1
    14829995U,	// AE_MULSF32X16_L1_S2
    14828827U,	// AE_MULSF32X16_L2
    14830857U,	// AE_MULSF32X16_L2_S2
    14833725U,	// AE_MULSF32X16_L3
    14831253U,	// AE_MULSF32X16_L3_S2
    14837342U,	// AE_MULSF48Q32SP16S_L
    14832274U,	// AE_MULSF48Q32SP16S_L_S2
    14837581U,	// AE_MULSF48Q32SP16U_L
    14832564U,	// AE_MULSF48Q32SP16U_L_S2
    14839807U,	// AE_MULSFP24X2R
    14834374U,	// AE_MULSFP24X2RA
    14831352U,	// AE_MULSFP24X2RA_S2
    14833259U,	// AE_MULSFP24X2R_S2
    14835800U,	// AE_MULSFP32X16X2RAS_H
    14831562U,	// AE_MULSFP32X16X2RAS_H_S2
    14837409U,	// AE_MULSFP32X16X2RAS_L
    14832415U,	// AE_MULSFP32X16X2RAS_L_S2
    14835907U,	// AE_MULSFP32X16X2RS_H
    14831637U,	// AE_MULSFP32X16X2RS_H_S2
    14837516U,	// AE_MULSFP32X16X2RS_L
    14832490U,	// AE_MULSFP32X16X2RS_L_S2
    14840535U,	// AE_MULSFP32X2RAS
    14840624U,	// AE_MULSFP32X2RS
    14831488U,	// AE_MULSFQ32SP24S_H_S2
    14832202U,	// AE_MULSFQ32SP24S_L_S2
    14833386U,	// AE_MULSP24X2
    14830950U,	// AE_MULSP24X2_S2
    14835628U,	// AE_MULSP32X16X2_H
    14837134U,	// AE_MULSP32X16X2_L
    14833332U,	// AE_MULSP32X2
    14832342U,	// AE_MULSQ32SP16S_L_S2
    14832632U,	// AE_MULSQ32SP16U_L_S2
    14831464U,	// AE_MULSRFQ32SP24S_H_S2
    14832178U,	// AE_MULSRFQ32SP24S_L_S2
    14836156U,	// AE_MULSS32F48P16S_HH
    14831711U,	// AE_MULSS32F48P16S_HH_S2
    14836645U,	// AE_MULSS32F48P16S_LH
    14832061U,	// AE_MULSS32F48P16S_LH_S2
    14838199U,	// AE_MULSS32F48P16S_LL
    14833197U,	// AE_MULSS32F48P16S_LL_S2
    14837974U,	// AE_MULSSD24_HH_LL
    14833010U,	// AE_MULSSD24_HH_LL_S2
    14836420U,	// AE_MULSSD24_HL_LH
    14831967U,	// AE_MULSSD24_HL_LH_S2
    14827013U,	// AE_MULSSD32X16_H1_L0
    14829537U,	// AE_MULSSD32X16_H1_L0_S2
    14828730U,	// AE_MULSSD32X16_H3_L2
    14830745U,	// AE_MULSSD32X16_H3_L2_S2
    14826327U,	// AE_MULSSFD16SS_11_00
    14829000U,	// AE_MULSSFD16SS_11_00_S2
    14827714U,	// AE_MULSSFD16SS_13_02
    14830106U,	// AE_MULSSFD16SS_13_02_S2
    14827854U,	// AE_MULSSFD16SS_33_22
    14830208U,	// AE_MULSSFD16SS_33_22_S2
    14837894U,	// AE_MULSSFD24_HH_LL
    14832918U,	// AE_MULSSFD24_HH_LL_S2
    14836340U,	// AE_MULSSFD24_HL_LH
    14831875U,	// AE_MULSSFD24_HL_LH_S2
    14826921U,	// AE_MULSSFD32X16_H1_L0
    14829433U,	// AE_MULSSFD32X16_H1_L0_S2
    14828638U,	// AE_MULSSFD32X16_H3_L2
    14830641U,	// AE_MULSSFD32X16_H3_L2_S2
    59344U,	// AE_MULZAAD24_HH_LL
    54341U,	// AE_MULZAAD24_HH_LL_S2
    57870U,	// AE_MULZAAD24_HL_LH
    53390U,	// AE_MULZAAD24_HL_LH_S2
    49114U,	// AE_MULZAAD32X16_H0_L1
    51487U,	// AE_MULZAAD32X16_H0_L1_S2
    48344U,	// AE_MULZAAD32X16_H1_L0
    50829U,	// AE_MULZAAD32X16_H1_L0_S2
    55235U,	// AE_MULZAAD32X16_H2_L3
    52745U,	// AE_MULZAAD32X16_H2_L3_S2
    50061U,	// AE_MULZAAD32X16_H3_L2
    52037U,	// AE_MULZAAD32X16_H3_L2_S2
    47936U,	// AE_MULZAAFD16SS_11_00
    50606U,	// AE_MULZAAFD16SS_11_00_S2
    49323U,	// AE_MULZAAFD16SS_13_02
    51712U,	// AE_MULZAAFD16SS_13_02_S2
    49463U,	// AE_MULZAAFD16SS_33_22
    51814U,	// AE_MULZAAFD16SS_33_22_S2
    59423U,	// AE_MULZAAFD24_HH_LL
    54432U,	// AE_MULZAAFD24_HH_LL_S2
    57910U,	// AE_MULZAAFD24_HL_LH
    53436U,	// AE_MULZAAFD24_HL_LH_S2
    49160U,	// AE_MULZAAFD32X16_H0_L1
    51539U,	// AE_MULZAAFD32X16_H0_L1_S2
    48435U,	// AE_MULZAAFD32X16_H1_L0
    50932U,	// AE_MULZAAFD32X16_H1_L0_S2
    55281U,	// AE_MULZAAFD32X16_H2_L3
    52797U,	// AE_MULZAAFD32X16_H2_L3_S2
    50152U,	// AE_MULZAAFD32X16_H3_L2
    52140U,	// AE_MULZAAFD32X16_H3_L2_S2
    59586U,	// AE_MULZASD24_HH_LL
    54619U,	// AE_MULZASD24_HH_LL_S2
    58032U,	// AE_MULZASD24_HL_LH
    53576U,	// AE_MULZASD24_HL_LH_S2
    48622U,	// AE_MULZASD32X16_H1_L0
    51143U,	// AE_MULZASD32X16_H1_L0_S2
    50339U,	// AE_MULZASD32X16_H3_L2
    52351U,	// AE_MULZASD32X16_H3_L2_S2
    59505U,	// AE_MULZASFD24_HH_LL
    54526U,	// AE_MULZASFD24_HH_LL_S2
    57951U,	// AE_MULZASFD24_HL_LH
    53483U,	// AE_MULZASFD24_HL_LH_S2
    48529U,	// AE_MULZASFD32X16_H1_L0
    51038U,	// AE_MULZASFD32X16_H1_L0_S2
    50246U,	// AE_MULZASFD32X16_H3_L2
    52246U,	// AE_MULZASFD32X16_H3_L2_S2
    59383U,	// AE_MULZSAD24_HH_LL
    54386U,	// AE_MULZSAD24_HH_LL_S2
    48389U,	// AE_MULZSAD32X16_H1_L0
    50880U,	// AE_MULZSAD32X16_H1_L0_S2
    50106U,	// AE_MULZSAD32X16_H3_L2
    52088U,	// AE_MULZSAD32X16_H3_L2_S2
    59464U,	// AE_MULZSAFD24_HH_LL
    54479U,	// AE_MULZSAFD24_HH_LL_S2
    48482U,	// AE_MULZSAFD32X16_H1_L0
    50985U,	// AE_MULZSAFD32X16_H1_L0_S2
    50199U,	// AE_MULZSAFD32X16_H3_L2
    52193U,	// AE_MULZSAFD32X16_H3_L2_S2
    59625U,	// AE_MULZSSD24_HH_LL
    54664U,	// AE_MULZSSD24_HH_LL_S2
    58071U,	// AE_MULZSSD24_HL_LH
    53621U,	// AE_MULZSSD24_HL_LH_S2
    48667U,	// AE_MULZSSD32X16_H1_L0
    51194U,	// AE_MULZSSD32X16_H1_L0_S2
    50384U,	// AE_MULZSSD32X16_H3_L2
    52402U,	// AE_MULZSSD32X16_H3_L2_S2
    47981U,	// AE_MULZSSFD16SS_11_00
    50657U,	// AE_MULZSSFD16SS_11_00_S2
    49368U,	// AE_MULZSSFD16SS_13_02
    51763U,	// AE_MULZSSFD16SS_13_02_S2
    49508U,	// AE_MULZSSFD16SS_33_22
    51865U,	// AE_MULZSSFD16SS_33_22_S2
    59546U,	// AE_MULZSSFD24_HH_LL
    54573U,	// AE_MULZSSFD24_HH_LL_S2
    57992U,	// AE_MULZSSFD24_HL_LH
    53530U,	// AE_MULZSSFD24_HL_LH_S2
    48576U,	// AE_MULZSSFD32X16_H1_L0
    51091U,	// AE_MULZSSFD32X16_H1_L0_S2
    50293U,	// AE_MULZSSFD32X16_H3_L2
    52299U,	// AE_MULZSSFD32X16_H3_L2_S2
    57078U,	// AE_NAND
    67170911U,	// AE_NEG16S
    67170647U,	// AE_NEG24S
    67158645U,	// AE_NEG32
    67170551U,	// AE_NEG32S
    67164455U,	// AE_NEG64
    67170776U,	// AE_NEG64S
    67164405U,	// AE_NSA64
    67156715U,	// AE_NSAZ16_0
    67167580U,	// AE_NSAZ32_L
    61553U,	// AE_OR
    551704744U,	// AE_PKSR24
    551699123U,	// AE_PKSR32
    60052U,	// AE_ROUND16X4F32SASYM
    60140U,	// AE_ROUND16X4F32SSYM
    60118U,	// AE_ROUND24X2F48SASYM
    60203U,	// AE_ROUND24X2F48SSYM
    60096U,	// AE_ROUND32X2F48SASYM
    60182U,	// AE_ROUND32X2F48SSYM
    60074U,	// AE_ROUND32X2F64SASYM
    60161U,	// AE_ROUND32X2F64SSYM
    67168874U,	// AE_ROUNDSP16F24ASYM
    67168811U,	// AE_ROUNDSP16F24SYM
    59987U,	// AE_ROUNDSP16Q48X2ASYM
    59925U,	// AE_ROUNDSP16Q48X2SYM
    67168895U,	// AE_ROUNDSQ32F48ASYM
    67168831U,	// AE_ROUNDSQ32F48SYM
    3221283987U,	// AE_S16M_L_I
    3772937267U,	// AE_S16M_L_IU
    62883U,	// AE_S16M_L_X
    14835262U,	// AE_S16M_L_XC
    14840961U,	// AE_S16M_L_XU
    536929475U,	// AE_S16X2M_I
    1088582759U,	// AE_S16X2M_IU
    62931U,	// AE_S16X2M_X
    14835314U,	// AE_S16X2M_XC
    14841013U,	// AE_S16X2M_XU
    1610671202U,	// AE_S16X4_I
    2162322722U,	// AE_S16X4_IP
    81943781U,	// AE_S16X4_RIC
    81948371U,	// AE_S16X4_RIP
    62834U,	// AE_S16X4_X
    14835209U,	// AE_S16X4_XC
    14839679U,	// AE_S16X4_XP
    3221283787U,	// AE_S16_0_I
    3772935197U,	// AE_S16_0_IP
    62713U,	// AE_S16_0_X
    14835078U,	// AE_S16_0_XC
    14839548U,	// AE_S16_0_XP
    536929514U,	// AE_S24RA64S_I
    1088581100U,	// AE_S24RA64S_IP
    62970U,	// AE_S24RA64S_X
    14835356U,	// AE_S24RA64S_XC
    14839748U,	// AE_S24RA64S_XP
    14839258U,	// AE_S24X2RA64S_IP
    536929412U,	// AE_S32F24_L_I
    1088581032U,	// AE_S32F24_L_IP
    62868U,	// AE_S32F24_L_X
    14835246U,	// AE_S32F24_L_XC
    14839716U,	// AE_S32F24_L_XP
    536929451U,	// AE_S32M_I
    1088582733U,	// AE_S32M_IU
    62907U,	// AE_S32M_X
    14835288U,	// AE_S32M_XC
    14840987U,	// AE_S32M_XU
    536929499U,	// AE_S32RA64S_I
    1088581048U,	// AE_S32RA64S_IP
    62955U,	// AE_S32RA64S_X
    14835340U,	// AE_S32RA64S_XC
    14839732U,	// AE_S32RA64S_XP
    1610671125U,	// AE_S32X2F24_I
    2162322643U,	// AE_S32X2F24_IP
    81943720U,	// AE_S32X2F24_RIC
    81948310U,	// AE_S32X2F24_RIP
    62787U,	// AE_S32X2F24_X
    14835158U,	// AE_S32X2F24_XC
    14839628U,	// AE_S32X2F24_XP
    14839240U,	// AE_S32X2RA64S_IP
    1610671085U,	// AE_S32X2_I
    2162322526U,	// AE_S32X2_IP
    81943610U,	// AE_S32X2_RIC
    81948200U,	// AE_S32X2_RIP
    62747U,	// AE_S32X2_X
    14835115U,	// AE_S32X2_XC
    14839585U,	// AE_S32X2_XP
    536929400U,	// AE_S32_L_I
    1088581005U,	// AE_S32_L_IP
    62856U,	// AE_S32_L_X
    14835233U,	// AE_S32_L_XC
    14839703U,	// AE_S32_L_XP
    1610671180U,	// AE_S64_I
    2699193582U,	// AE_S64_IP
    62812U,	// AE_S64_X
    14835185U,	// AE_S64_XC
    14839655U,	// AE_S64_XP
    92461983U,	// AE_SA16X4_IC
    92466439U,	// AE_SA16X4_IP
    92462280U,	// AE_SA16X4_RIC
    92466870U,	// AE_SA16X4_RIP
    92461909U,	// AE_SA24X2_IC
    92466297U,	// AE_SA24X2_IP
    92462167U,	// AE_SA24X2_RIC
    92466757U,	// AE_SA24X2_RIP
    92462080U,	// AE_SA24_L_IC
    92466586U,	// AE_SA24_L_IP
    92462323U,	// AE_SA24_L_RIC
    92466913U,	// AE_SA24_L_RIP
    92461952U,	// AE_SA32X2F24_IC
    92466354U,	// AE_SA32X2F24_IP
    92462213U,	// AE_SA32X2F24_RIC
    92466803U,	// AE_SA32X2F24_RIP
    92461881U,	// AE_SA32X2_IC
    92466243U,	// AE_SA32X2_IP
    92462109U,	// AE_SA32X2_RIC
    92466699U,	// AE_SA32X2_RIP
    81947600U,	// AE_SA64NEG_FP
    81947615U,	// AE_SA64POS_FP
    1610671165U,	// AE_SALIGN64_I
    55811U,	// AE_SAT16X4
    67170693U,	// AE_SAT24S
    67170985U,	// AE_SAT48S
    67170973U,	// AE_SATQ56S
    81943298U,	// AE_SB
    679763U,	// AE_SBF
    678879U,	// AE_SBF_IC
    683372U,	// AE_SBF_IP
    1088578836U,	// AE_SBI
    1088576501U,	// AE_SBI_IC
    1088580994U,	// AE_SBI_IP
    81943479U,	// AE_SB_IC
    81947972U,	// AE_SB_IP
    58617U,	// AE_SEL16I
    60224U,	// AE_SEL16I_N
    1610662642U,	// AE_SEXT32
    67156868U,	// AE_SEXT32X2D16_10
    67158395U,	// AE_SEXT32X2D16_32
    67158569U,	// AE_SHA32
    67169176U,	// AE_SHORTSWAP
    62001U,	// AE_SLAA16S
    49657U,	// AE_SLAA32
    61613U,	// AE_SLAA32S
    55508U,	// AE_SLAA64
    61840U,	// AE_SLAA64S
    55906U,	// AE_SLAAQ56
    2147545706U,	// AE_SLAI16S
    2684409991U,	// AE_SLAI24
    2684416354U,	// AE_SLAI24S
    2684404351U,	// AE_SLAI32
    2684416258U,	// AE_SLAI32S
    3221281073U,	// AE_SLAI64
    3221287395U,	// AE_SLAI64S
    3221287553U,	// AE_SLAISQ56S
    67164339U,	// AE_SLAS24
    67170670U,	// AE_SLAS24S
    67158718U,	// AE_SLAS32
    67170574U,	// AE_SLAS32S
    67164530U,	// AE_SLAS64
    67170799U,	// AE_SLAS64S
    67164782U,	// AE_SLASQ56
    67170959U,	// AE_SLASSQ56S
    49618U,	// AE_SRA64_32
    62273U,	// AE_SRAA16RS
    62013U,	// AE_SRAA16S
    49668U,	// AE_SRAA32
    62210U,	// AE_SRAA32RS
    61625U,	// AE_SRAA32S
    55519U,	// AE_SRAA64
    2147539525U,	// AE_SRAI16
    2147545103U,	// AE_SRAI16R
    2684410002U,	// AE_SRAI24
    2684404362U,	// AE_SRAI32
    2684415956U,	// AE_SRAI32R
    3221281084U,	// AE_SRAI64
    67164350U,	// AE_SRAS24
    67158729U,	// AE_SRAS32
    67164541U,	// AE_SRAS64
    49715U,	// AE_SRLA32
    55530U,	// AE_SRLA64
    2684410013U,	// AE_SRLI24
    2684404373U,	// AE_SRLI32
    3221281095U,	// AE_SRLI64
    67164361U,	// AE_SRLS24
    67158750U,	// AE_SRLS32
    67164562U,	// AE_SRLS64
    55848U,	// AE_SUB16
    62025U,	// AE_SUB16S
    61761U,	// AE_SUB24S
    49726U,	// AE_SUB32
    61637U,	// AE_SUB32S
    55551U,	// AE_SUB64
    61852U,	// AE_SUB64S
    49759U,	// AE_SUBADD32
    61673U,	// AE_SUBADD32S
    58893U,	// AE_TRUNCA32F64S_L
    61874U,	// AE_TRUNCA32X2F64S
    58912U,	// AE_TRUNCI32F64S_L
    61893U,	// AE_TRUNCI32X2F64S
    678665U,	// AE_VLDL16C
    678849U,	// AE_VLDL16C_IC
    683342U,	// AE_VLDL16C_IP
    62391U,	// AE_VLDL16T
    62367U,	// AE_VLDL32T
    586750U,	// AE_VLDSHT
    14742467U,	// AE_VLEL16T
    14742443U,	// AE_VLEL32T
    678677U,	// AE_VLES16C
    678864U,	// AE_VLES16C_IC
    683357U,	// AE_VLES16C_IP
    61560U,	// AE_XOR
    579922U,	// AE_ZALIGN64
    67141690U,	// ALL4
    67141725U,	// ALL8
    32978U,	// AND
    32905U,	// ANDB
    32941U,	// ANDBC
    67141718U,	// ANY4
    67141753U,	// ANY8
    3758130190U,	// BALL
    3758130915U,	// BANY
    3758129320U,	// BBC
    27296344U,	// BBCI
    3758130717U,	// BBS
    27296407U,	// BBSI
    3758130339U,	// BEQ
    29393546U,	// BEQI
    12617493U,	// BEQZ
    12615924U,	// BF
    3758129379U,	// BGE
    29393508U,	// BGEI
    3758130840U,	// BGEU
    31490753U,	// BGEUI
    12617456U,	// BGEZ
    3758130746U,	// BLT
    29393582U,	// BLTI
    3758130864U,	// BLTU
    31490760U,	// BLTUI
    12617516U,	// BLTZ
    3758130196U,	// BNALL
    3758129384U,	// BNE
    29393514U,	// BNEI
    12617470U,	// BNEZ
    3758129389U,	// BNONE
    33751776U,	// BREAK
    722009U,	// BREAK_N
    12617270U,	// BT
    229387U,	// CALL0
    229402U,	// CALL12
    229433U,	// CALL4
    229468U,	// CALL8
    557074U,	// CALLX0
    557090U,	// CALLX12
    557134U,	// CALLX4
    557169U,	// CALLX8
    2147517791U,	// CEIL_S
    1610647086U,	// CLAMPS
    263767U,	// CLR_BIT_GPIO_OUT
    33588688U,	// CONST_S
    67142905U,	// DIV0_S
    14812552U,	// DIVN_S
    30504U,	// DSYNC
    39625U,	// EE_ANDQ
    81828640U,	// EE_BITREV
    263764U,	// EE_CLR_BIT_GPIO_OUT
    35367U,	// EE_CMUL_S16
    220237611U,	// EE_CMUL_S16_LD_INCP
    537039119U,	// EE_CMUL_S16_ST_INCP
    25202587U,	// EE_FFT_AMS_S16_LD_INCP
    25204093U,	// EE_FFT_AMS_S16_LD_INCP_UAUP
    25202192U,	// EE_FFT_AMS_S16_LD_R32_DECP
    1347967U,	// EE_FFT_AMS_S16_ST_INCP
    153131330U,	// EE_FFT_CMUL_S16_LD_XP
    14817875U,	// EE_FFT_CMUL_S16_ST_XP
    35349U,	// EE_FFT_R2BF_S16
    14717173U,	// EE_FFT_R2BF_S16_ST_INCP
    1088556589U,	// EE_FFT_VST_R32_DECP
    558185U,	// EE_GET_GPIO_IN
    37804U,	// EE_LDF_128_IP
    39186U,	// EE_LDF_128_XP
    37575U,	// EE_LDF_64_IP
    38957U,	// EE_LDF_64_XP
    35787594U,	// EE_LDQA_S16_128_IP
    81926320U,	// EE_LDQA_S16_128_XP
    35787636U,	// EE_LDQA_S8_128_IP
    81926362U,	// EE_LDQA_S8_128_XP
    35787615U,	// EE_LDQA_U16_128_IP
    81926341U,	// EE_LDQA_U16_128_XP
    35787656U,	// EE_LDQA_U8_128_IP
    81926382U,	// EE_LDQA_U8_128_XP
    34912U,	// EE_LDXQ_32
    1625331017U,	// EE_LD_128_USAR_IP
    14719551U,	// EE_LD_128_USAR_XP
    37885277U,	// EE_LD_ACCX_IP
    39981675U,	// EE_LD_QACC_H_H_32_IP
    35787724U,	// EE_LD_QACC_H_L_128_IP
    39981721U,	// EE_LD_QACC_L_H_32_IP
    35787772U,	// EE_LD_QACC_L_L_128_IP
    35788065U,	// EE_LD_UA_STATE_IP
    2189560737U,	// EE_MOVI_32_A
    2147523179U,	// EE_MOVI_32_Q
    560111U,	// EE_MOV_S16_QACC
    560228U,	// EE_MOV_S8_QACC
    560150U,	// EE_MOV_U16_QACC
    560265U,	// EE_MOV_U8_QACC
    67148518U,	// EE_NOTQ
    39635U,	// EE_ORQ
    263785U,	// EE_SET_BIT_GPIO_OUT
    44210833U,	// EE_SLCI_2Q
    1874603U,	// EE_SLCXXP_2Q
    44210846U,	// EE_SRCI_2Q
    1073777584U,	// EE_SRCMB_S16_QACC
    1073777704U,	// EE_SRCMB_S8_QACC
    14815684U,	// EE_SRCQ_128_ST_INCP
    1874618U,	// EE_SRCXXP_2Q
    39546U,	// EE_SRC_Q
    287347878U,	// EE_SRC_Q_LD_IP
    153131460U,	// EE_SRC_Q_LD_XP
    14718989U,	// EE_SRC_Q_QUP
    1073781630U,	// EE_SRS_ACCX
    14816188U,	// EE_STF_128_IP
    14817570U,	// EE_STF_128_XP
    14815958U,	// EE_STF_64_IP
    14817340U,	// EE_STF_64_XP
    34925U,	// EE_STXQ_32
    37885293U,	// EE_ST_ACCX_IP
    39981698U,	// EE_ST_QACC_H_H_32_IP
    35787748U,	// EE_ST_QACC_H_L_128_IP
    39981744U,	// EE_ST_QACC_L_H_32_IP
    35787796U,	// EE_ST_QACC_L_L_128_IP
    35788085U,	// EE_ST_UA_STATE_IP
    35441U,	// EE_VADDS_S16
    3441463172U,	// EE_VADDS_S16_LD_INCP
    537039208U,	// EE_VADDS_S16_ST_INCP
    34996U,	// EE_VADDS_S32
    3441463038U,	// EE_VADDS_S32_LD_INCP
    537039048U,	// EE_VADDS_S32_ST_INCP
    35644U,	// EE_VADDS_S8
    3441463328U,	// EE_VADDS_S8_LD_INCP
    537039386U,	// EE_VADDS_S8_ST_INCP
    35409U,	// EE_VCMP_EQ_S16
    34964U,	// EE_VCMP_EQ_S32
    35614U,	// EE_VCMP_EQ_S8
    35456U,	// EE_VCMP_GT_S16
    35011U,	// EE_VCMP_GT_S32
    35658U,	// EE_VCMP_GT_S8
    35473U,	// EE_VCMP_LT_S16
    35028U,	// EE_VCMP_LT_S32
    35674U,	// EE_VCMP_LT_S8
    67144171U,	// EE_VLDBC_16
    2162201385U,	// EE_VLDBC_16_IP
    14719119U,	// EE_VLDBC_16_XP
    67143722U,	// EE_VLDBC_32
    2699072090U,	// EE_VLDBC_32_IP
    14719004U,	// EE_VLDBC_32_XP
    67144413U,	// EE_VLDBC_8
    3235943226U,	// EE_VLDBC_8_IP
    14719136U,	// EE_VLDBC_8_XP
    36419U,	// EE_VLDHBC_16_INCP
    1625330588U,	// EE_VLD_128_IP
    14719234U,	// EE_VLD_128_XP
    3772814053U,	// EE_VLD_H_64_IP
    14719051U,	// EE_VLD_H_64_XP
    3772814087U,	// EE_VLD_L_64_IP
    14719085U,	// EE_VLD_L_64_XP
    35521U,	// EE_VMAX_S16
    3441463220U,	// EE_VMAX_S16_LD_INCP
    537039256U,	// EE_VMAX_S16_ST_INCP
    35045U,	// EE_VMAX_S32
    3441463061U,	// EE_VMAX_S32_LD_INCP
    537039071U,	// EE_VMAX_S32_ST_INCP
    35719U,	// EE_VMAX_S8
    3441463350U,	// EE_VMAX_S8_LD_INCP
    537039408U,	// EE_VMAX_S8_ST_INCP
    35395U,	// EE_VMIN_S16
    3441463127U,	// EE_VMIN_S16_LD_INCP
    537039163U,	// EE_VMIN_S16_ST_INCP
    34950U,	// EE_VMIN_S32
    3441462993U,	// EE_VMIN_S32_LD_INCP
    537039003U,	// EE_VMIN_S32_ST_INCP
    35601U,	// EE_VMIN_S8
    3441463285U,	// EE_VMIN_S8_LD_INCP
    537039343U,	// EE_VMIN_S8_ST_INCP
    67148588U,	// EE_VMULAS_S16_ACCX
    14718135U,	// EE_VMULAS_S16_ACCX_LD_IP
    354457247U,	// EE_VMULAS_S16_ACCX_LD_IP_QUP
    14719445U,	// EE_VMULAS_S16_ACCX_LD_XP
    153130899U,	// EE_VMULAS_S16_ACCX_LD_XP_QUP
    67144666U,	// EE_VMULAS_S16_QACC
    14716503U,	// EE_VMULAS_S16_QACC_LDBC_INCP
    153130395U,	// EE_VMULAS_S16_QACC_LDBC_INCP_QUP
    14718012U,	// EE_VMULAS_S16_QACC_LD_IP
    354457125U,	// EE_VMULAS_S16_QACC_LD_IP_QUP
    14719322U,	// EE_VMULAS_S16_QACC_LD_XP
    153130777U,	// EE_VMULAS_S16_QACC_LD_XP_QUP
    67148630U,	// EE_VMULAS_S8_ACCX
    14718189U,	// EE_VMULAS_S8_ACCX_LD_IP
    354457309U,	// EE_VMULAS_S8_ACCX_LD_IP_QUP
    14719499U,	// EE_VMULAS_S8_ACCX_LD_XP
    153130961U,	// EE_VMULAS_S8_ACCX_LD_XP_QUP
    67144784U,	// EE_VMULAS_S8_QACC
    14716565U,	// EE_VMULAS_S8_QACC_LDBC_INCP
    153130465U,	// EE_VMULAS_S8_QACC_LDBC_INCP_QUP
    14718066U,	// EE_VMULAS_S8_QACC_LD_IP
    354457187U,	// EE_VMULAS_S8_QACC_LD_IP_QUP
    14719376U,	// EE_VMULAS_S8_QACC_LD_XP
    153130839U,	// EE_VMULAS_S8_QACC_LD_XP_QUP
    67148609U,	// EE_VMULAS_U16_ACCX
    14718162U,	// EE_VMULAS_U16_ACCX_LD_IP
    354457278U,	// EE_VMULAS_U16_ACCX_LD_IP_QUP
    14719472U,	// EE_VMULAS_U16_ACCX_LD_XP
    153130930U,	// EE_VMULAS_U16_ACCX_LD_XP_QUP
    67144705U,	// EE_VMULAS_U16_QACC
    14716534U,	// EE_VMULAS_U16_QACC_LDBC_INCP
    153130430U,	// EE_VMULAS_U16_QACC_LDBC_INCP_QUP
    14718039U,	// EE_VMULAS_U16_QACC_LD_IP
    354457156U,	// EE_VMULAS_U16_QACC_LD_IP_QUP
    14719349U,	// EE_VMULAS_U16_QACC_LD_XP
    153130808U,	// EE_VMULAS_U16_QACC_LD_XP_QUP
    67148650U,	// EE_VMULAS_U8_ACCX
    14718215U,	// EE_VMULAS_U8_ACCX_LD_IP
    354457339U,	// EE_VMULAS_U8_ACCX_LD_IP_QUP
    14719525U,	// EE_VMULAS_U8_ACCX_LD_XP
    153130991U,	// EE_VMULAS_U8_ACCX_LD_XP_QUP
    67144821U,	// EE_VMULAS_U8_QACC
    14716595U,	// EE_VMULAS_U8_QACC_LDBC_INCP
    153130499U,	// EE_VMULAS_U8_QACC_LDBC_INCP_QUP
    14718092U,	// EE_VMULAS_U8_QACC_LD_IP
    354457217U,	// EE_VMULAS_U8_QACC_LD_IP_QUP
    14719402U,	// EE_VMULAS_U8_QACC_LD_XP
    153130869U,	// EE_VMULAS_U8_QACC_LD_XP_QUP
    35381U,	// EE_VMUL_S16
    3441463105U,	// EE_VMUL_S16_LD_INCP
    537039141U,	// EE_VMUL_S16_ST_INCP
    35588U,	// EE_VMUL_S8
    3441463264U,	// EE_VMUL_S8_LD_INCP
    537039322U,	// EE_VMUL_S8_ST_INCP
    35535U,	// EE_VMUL_U16
    3441463242U,	// EE_VMUL_U16_LD_INCP
    537039278U,	// EE_VMUL_U16_ST_INCP
    35732U,	// EE_VMUL_U8
    3441463371U,	// EE_VMUL_U8_LD_INCP
    537039429U,	// EE_VMUL_U8_ST_INCP
    35490U,	// EE_VPRELU_S16
    35690U,	// EE_VPRELU_S8
    14813874U,	// EE_VRELU_S16
    14814073U,	// EE_VRELU_S8
    67143736U,	// EE_VSL_32
    1610648516U,	// EE_VSMULAS_S16_QACC
    14717024U,	// EE_VSMULAS_S16_QACC_LD_INCP
    2684390459U,	// EE_VSMULAS_S8_QACC
    14717054U,	// EE_VSMULAS_S8_QACC_LD_INCP
    67143802U,	// EE_VSR_32
    1625429036U,	// EE_VST_128_IP
    14817586U,	// EE_VST_128_XP
    3772912374U,	// EE_VST_H_64_IP
    14817372U,	// EE_VST_H_64_XP
    3772912408U,	// EE_VST_L_64_IP
    14817406U,	// EE_VST_L_64_XP
    35426U,	// EE_VSUBS_S16
    3441463149U,	// EE_VSUBS_S16_LD_INCP
    537039185U,	// EE_VSUBS_S16_ST_INCP
    34981U,	// EE_VSUBS_S32
    3441463015U,	// EE_VSUBS_S32_LD_INCP
    537039025U,	// EE_VSUBS_S32_ST_INCP
    35630U,	// EE_VSUBS_S8
    3441463306U,	// EE_VSUBS_S8_LD_INCP
    537039364U,	// EE_VSUBS_S8_ST_INCP
    690681U,	// EE_VUNZIP_16
    690244U,	// EE_VUNZIP_32
    690922U,	// EE_VUNZIP_8
    690696U,	// EE_VZIP_16
    690259U,	// EE_VZIP_32
    690936U,	// EE_VZIP_8
    67143231U,	// EE_WR_MASK_GPIO_OUT
    39644U,	// EE_XORQ
    1735U,	// EE_ZERO_ACCX
    563845U,	// EE_ZERO_Q
    186U,	// EE_ZERO_QACC
    46171881U,	// ENTRY
    30510U,	// ESYNC
    30658U,	// EXCW
    2684388047U,	// EXTUI
    30673U,	// EXTW
    2147517881U,	// FLOAT_S
    2147517864U,	// FLOOR_S
    558188U,	// GET_GPIO_IN
    30567U,	// ILL
    30571U,	// ILL_N
    30516U,	// ISYNC
    328413U,	// J
    558805U,	// JX
    10519184U,	// L16SI
    10519220U,	// L16UI
    536903895U,	// L32E
    10519092U,	// L32I
    10519608U,	// L32I_N
    48268456U,	// L32R
    10519227U,	// L8UI
    81824933U,	// LDDEC
    81825085U,	// LDINC
    10519134U,	// LEA_ADD
    50365578U,	// LOOP
    50366243U,	// LOOPGTZ
    50366212U,	// LOOPNEZ
    10519197U,	// LSI
    1088455806U,	// LSIP
    34521U,	// LSX
    14714007U,	// LSXP
    14714233U,	// MADDN_S
    14714141U,	// MADD_S
    34498U,	// MAX
    34486U,	// MAXU
    30663U,	// MEMW
    33913U,	// MIN
    34468U,	// MINU
    81921355U,	// MKDADJ_S
    67142997U,	// MKSADJ_S
    34587U,	// MOVEQZ
    14812668U,	// MOVEQZ_S
    14811384U,	// MOVF
    14812476U,	// MOVF_S
    34550U,	// MOVGEZ
    14812648U,	// MOVGEZ_S
    52462295U,	// MOVI
    54559825U,	// MOVI_N
    34610U,	// MOVLTZ
    14812678U,	// MOVLTZ_S
    34573U,	// MOVNEZ
    14812658U,	// MOVNEZ_S
    67142800U,	// MOVSP
    14812798U,	// MOVT
    14812633U,	// MOVT_S
    67142754U,	// MOV_N
    67143137U,	// MOV_S
    14714123U,	// MSUB_S
    34320U,	// MUL16S
    34442U,	// MUL16U
    67141891U,	// MULA_AA_HH
    67142382U,	// MULA_AA_HL
    67142032U,	// MULA_AA_LH
    67142529U,	// MULA_AA_LL
    67141962U,	// MULA_AD_HH
    67142453U,	// MULA_AD_HL
    67142103U,	// MULA_AD_LH
    67142600U,	// MULA_AD_LL
    67141927U,	// MULA_DA_HH
    14716058U,	// MULA_DA_HH_LDDEC
    14716210U,	// MULA_DA_HH_LDINC
    67142418U,	// MULA_DA_HL
    14716134U,	// MULA_DA_HL_LDDEC
    14716286U,	// MULA_DA_HL_LDINC
    67142068U,	// MULA_DA_LH
    14716096U,	// MULA_DA_LH_LDDEC
    14716248U,	// MULA_DA_LH_LDINC
    67142565U,	// MULA_DA_LL
    14716172U,	// MULA_DA_LL_LDDEC
    14716324U,	// MULA_DA_LL_LDINC
    67141997U,	// MULA_DD_HH
    14716077U,	// MULA_DD_HH_LDDEC
    14716229U,	// MULA_DD_HH_LDINC
    67142488U,	// MULA_DD_HL
    14716153U,	// MULA_DD_HL_LDDEC
    14716305U,	// MULA_DD_HL_LDINC
    67142138U,	// MULA_DD_LH
    14716115U,	// MULA_DD_LH_LDDEC
    14716267U,	// MULA_DD_LH_LDINC
    67142635U,	// MULA_DD_LL
    14716191U,	// MULA_DD_LL_LDDEC
    14716343U,	// MULA_DD_LL_LDINC
    33824U,	// MULL
    33309U,	// MULSH
    67141915U,	// MULS_AA_HH
    67142406U,	// MULS_AA_HL
    67142056U,	// MULS_AA_LH
    67142553U,	// MULS_AA_LL
    67141985U,	// MULS_AD_HH
    67142476U,	// MULS_AD_HL
    67142126U,	// MULS_AD_LH
    67142623U,	// MULS_AD_LL
    67141950U,	// MULS_DA_HH
    67142441U,	// MULS_DA_HL
    67142091U,	// MULS_DA_LH
    67142588U,	// MULS_DA_LL
    67142020U,	// MULS_DD_HH
    67142511U,	// MULS_DD_HL
    67142161U,	// MULS_DD_LH
    67142658U,	// MULS_DD_LL
    33316U,	// MULUH
    67141904U,	// MUL_AA_HH
    67142395U,	// MUL_AA_HL
    67142045U,	// MUL_AA_LH
    67142542U,	// MUL_AA_LL
    67141974U,	// MUL_AD_HH
    67142465U,	// MUL_AD_HL
    67142115U,	// MUL_AD_LH
    67142612U,	// MUL_AD_LL
    67141939U,	// MUL_DA_HH
    67142430U,	// MUL_DA_HL
    67142080U,	// MUL_DA_LH
    67142577U,	// MUL_DA_LL
    67142009U,	// MUL_DD_HH
    67142500U,	// MUL_DD_HL
    67142150U,	// MUL_DD_LH
    67142647U,	// MUL_DD_LL
    34151U,	// MUL_S
    67141886U,	// NEG
    67142980U,	// NEG_S
    67142913U,	// NEXP01_S
    30645U,	// NOP
    67141764U,	// NSA
    67143314U,	// NSAU
    34202U,	// OEQ_S
    34094U,	// OLE_S
    34242U,	// OLT_S
    33987U,	// OR
    32926U,	// ORB
    32948U,	// ORBC
    34344U,	// QUOS
    34474U,	// QUOU
    67142885U,	// RECIP0_S
    34338U,	// REMS
    34462U,	// REMU
    67142830U,	// RER
    30649U,	// RET
    30668U,	// RETW
    30583U,	// RETW_N
    30577U,	// RET_N
    30528U,	// RFDE
    30533U,	// RFE
    721520U,	// RFI
    67142840U,	// RFR
    30594U,	// RFWO
    30653U,	// RFWU
    362172U,	// ROTW
    2147517733U,	// ROUND_S
    33588091U,	// RSIL
    67142895U,	// RSQRT0_S
    67142855U,	// RSR
    30522U,	// RSYNC
    67142875U,	// RUR
    559000U,	// RUR_ACCX_0
    559120U,	// RUR_ACCX_1
    581292U,	// RUR_AE_BITHEAD
    585856U,	// RUR_AE_BITPTR
    581324U,	// RUR_AE_BITSUSED
    573081U,	// RUR_AE_CBEGIN0
    572479U,	// RUR_AE_CEND0
    584572U,	// RUR_AE_CWRAP
    584538U,	// RUR_AE_CW_SD_NO
    586621U,	// RUR_AE_FIRST_TS
    586712U,	// RUR_AE_NEXTOFFSET
    586967U,	// RUR_AE_OVERFLOW
    585779U,	// RUR_AE_OVF_SAR
    585755U,	// RUR_AE_SAR
    581385U,	// RUR_AE_SEARCHDONE
    581423U,	// RUR_AE_TABLESIZE
    584614U,	// RUR_AE_TS_FTS_BU_BP
    560616U,	// RUR_FFT_BIT_WIDTH
    563970U,	// RUR_GPIO_OUT
    558940U,	// RUR_QACC_H_0
    559060U,	// RUR_QACC_H_1
    559381U,	// RUR_QACC_H_2
    559475U,	// RUR_QACC_H_3
    559535U,	// RUR_QACC_H_4
    558970U,	// RUR_QACC_L_0
    559090U,	// RUR_QACC_L_1
    559411U,	// RUR_QACC_L_2
    559505U,	// RUR_QACC_L_3
    559565U,	// RUR_QACC_L_4
    560586U,	// RUR_SAR_BYTE
    558906U,	// RUR_UA_STATE_0
    559026U,	// RUR_UA_STATE_1
    559347U,	// RUR_UA_STATE_2
    559441U,	// RUR_UA_STATE_3
    10519105U,	// S16I
    56754731U,	// S32C1I
    536903901U,	// S32E
    10519099U,	// S32I
    10519617U,	// S32I_N
    10519111U,	// S8I
    263788U,	// SET_BIT_GPIO_OUT
    1610647172U,	// SEXT
    30551U,	// SIMCALL
    67142683U,	// SLL
    1610646134U,	// SLLI
    67142896U,	// SQRT0_S
    67141759U,	// SRA
    2684387916U,	// SRAI
    32968U,	// SRC
    67142694U,	// SRL
    2684387965U,	// SRLI
    557799U,	// SSA8L
    393810U,	// SSAI
    10519202U,	// SSI
    1088554116U,	// SSIP
    558123U,	// SSL
    558284U,	// SSR
    34526U,	// SSX
    14812317U,	// SSXP
    32931U,	// SUB
    32811U,	// SUBX2
    32832U,	// SUBX4
    32867U,	// SUBX8
    34060U,	// SUB_S
    30559U,	// SYSCALL
    2147517716U,	// TRUNC_S
    34209U,	// UEQ_S
    2147517880U,	// UFLOAT_S
    34101U,	// ULE_S
    34249U,	// ULT_S
    67141903U,	// UMUL_AA_HH
    67142394U,	// UMUL_AA_HL
    67142044U,	// UMUL_AA_LH
    67142541U,	// UMUL_AA_LL
    34178U,	// UN_S
    2147517715U,	// UTRUNC_S
    721575U,	// WAITI
    67141775U,	// WDTLB
    67142835U,	// WER
    67142845U,	// WFR
    67141782U,	// WITLB
    67143234U,	// WR_MASK_GPIO_OUT
    109184209U,	// WSR
    109184224U,	// WUR
    559013U,	// WUR_ACCX_0
    559133U,	// WUR_ACCX_1
    581308U,	// WUR_AE_BITHEAD
    585871U,	// WUR_AE_BITPTR
    581341U,	// WUR_AE_BITSUSED
    573097U,	// WUR_AE_CBEGIN0
    572493U,	// WUR_AE_CEND0
    584586U,	// WUR_AE_CWRAP
    584555U,	// WUR_AE_CW_SD_NO
    586638U,	// WUR_AE_FIRST_TS
    586731U,	// WUR_AE_NEXTOFFSET
    586984U,	// WUR_AE_OVERFLOW
    585795U,	// WUR_AE_OVF_SAR
    585767U,	// WUR_AE_SAR
    581404U,	// WUR_AE_SEARCHDONE
    581441U,	// WUR_AE_TABLESIZE
    584635U,	// WUR_AE_TS_FTS_BU_BP
    557057U,	// WUR_FCR
    560636U,	// WUR_FFT_BIT_WIDTH
    563960U,	// WUR_FSR
    563985U,	// WUR_GPIO_OUT
    558955U,	// WUR_QACC_H_0
    559075U,	// WUR_QACC_H_1
    559396U,	// WUR_QACC_H_2
    559490U,	// WUR_QACC_H_3
    559550U,	// WUR_QACC_H_4
    558985U,	// WUR_QACC_L_0
    559105U,	// WUR_QACC_L_1
    559426U,	// WUR_QACC_L_2
    559520U,	// WUR_QACC_L_3
    559580U,	// WUR_QACC_L_4
    560601U,	// WUR_SAR_BYTE
    558923U,	// WUR_UA_STATE_0
    559043U,	// WUR_UA_STATE_1
    559364U,	// WUR_UA_STATE_2
    559458U,	// WUR_UA_STATE_3
    33986U,	// XOR
    32925U,	// XORB
    689366U,	// XSR
    10519091U,	// _L32I
    10519607U,	// _L32I_N
    58753750U,	// _MOVI
    10519098U,	// _S32I
    10519616U,	// _S32I_N
    2147517045U,	// _SLLI
    2147517052U,	// _SRLI
    67148528U,	// mv_QR
  };

  static const uint16_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_VALUE_LIST
    0U,	// DBG_INSTR_REF
    0U,	// DBG_PHI
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// ARITH_FENCE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// MEMBARRIER
    0U,	// JUMP_TABLE_DEBUG_INFO
    0U,	// G_ASSERT_SEXT
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ASSERT_ALIGN
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_SDIVREM
    0U,	// G_UDIVREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_CONSTANT_POOL
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_CONSTANT_FOLD_BARRIER
    0U,	// G_INTRINSIC_FPTRUNC_ROUND
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_ATOMICRMW_FMAX
    0U,	// G_ATOMICRMW_FMIN
    0U,	// G_ATOMICRMW_UINC_WRAP
    0U,	// G_ATOMICRMW_UDEC_WRAP
    0U,	// G_FENCE
    0U,	// G_PREFETCH
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INVOKE_REGION_START
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_INTRINSIC_CONVERGENT
    0U,	// G_INTRINSIC_CONVERGENT_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ROTR
    0U,	// G_ROTL
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FEXP10
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FLDEXP
    0U,	// G_FFREXP
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_IS_FPCLASS
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_GET_FPENV
    0U,	// G_SET_FPENV
    0U,	// G_RESET_FPENV
    0U,	// G_GET_FPMODE
    0U,	// G_SET_FPMODE
    0U,	// G_RESET_FPMODE
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_LROUND
    0U,	// G_LLROUND
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STACKSAVE
    0U,	// G_STACKRESTORE
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_STRICT_FLDEXP
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMCPY_INLINE
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_BZERO
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_FMAXIMUM
    0U,	// G_VECREDUCE_FMINIMUM
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// G_SBFX
    0U,	// G_UBFX
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ATOMIC_CMP_SWAP_16_P
    0U,	// ATOMIC_CMP_SWAP_32_P
    0U,	// ATOMIC_CMP_SWAP_8_P
    8U,	// ATOMIC_LOAD_ADD_16_P
    8U,	// ATOMIC_LOAD_ADD_32_P
    8U,	// ATOMIC_LOAD_ADD_8_P
    8U,	// ATOMIC_LOAD_AND_16_P
    8U,	// ATOMIC_LOAD_AND_32_P
    8U,	// ATOMIC_LOAD_AND_8_P
    8U,	// ATOMIC_LOAD_MAX_16_P
    8U,	// ATOMIC_LOAD_MAX_32_P
    8U,	// ATOMIC_LOAD_MAX_8_P
    8U,	// ATOMIC_LOAD_MIN_16_P
    8U,	// ATOMIC_LOAD_MIN_32_P
    8U,	// ATOMIC_LOAD_MIN_8_P
    8U,	// ATOMIC_LOAD_NAND_16_P
    8U,	// ATOMIC_LOAD_NAND_32_P
    8U,	// ATOMIC_LOAD_NAND_8_P
    8U,	// ATOMIC_LOAD_OR_16_P
    8U,	// ATOMIC_LOAD_OR_32_P
    8U,	// ATOMIC_LOAD_OR_8_P
    8U,	// ATOMIC_LOAD_SUB_16_P
    8U,	// ATOMIC_LOAD_SUB_32_P
    8U,	// ATOMIC_LOAD_SUB_8_P
    8U,	// ATOMIC_LOAD_UMAX_16_P
    8U,	// ATOMIC_LOAD_UMAX_32_P
    8U,	// ATOMIC_LOAD_UMAX_8_P
    8U,	// ATOMIC_LOAD_UMIN_16_P
    8U,	// ATOMIC_LOAD_UMIN_32_P
    8U,	// ATOMIC_LOAD_UMIN_8_P
    8U,	// ATOMIC_LOAD_XOR_16_P
    8U,	// ATOMIC_LOAD_XOR_32_P
    8U,	// ATOMIC_LOAD_XOR_8_P
    8U,	// ATOMIC_SWAP_16_P
    8U,	// ATOMIC_SWAP_32_P
    8U,	// ATOMIC_SWAP_8_P
    64U,	// BRCC_FP
    0U,	// BR_JT
    0U,	// CONSTPOOL_ENTRY
    8U,	// EE_ANDQ_P
    0U,	// EE_BITREV_P
    1152U,	// EE_CMUL_S16_LD_INCP_P
    192U,	// EE_CMUL_S16_P
    1152U,	// EE_CMUL_S16_ST_INCP_P
    1152U,	// EE_FFT_AMS_S16_LD_INCP_P
    1152U,	// EE_FFT_AMS_S16_LD_INCP_UAUP_P
    1152U,	// EE_FFT_AMS_S16_LD_R32_DECP_P
    1024U,	// EE_FFT_AMS_S16_ST_INCP_P
    1152U,	// EE_FFT_CMUL_S16_LD_XP_P
    3072U,	// EE_FFT_CMUL_S16_ST_XP_P
    5248U,	// EE_FFT_R2BF_S16_P
    7168U,	// EE_FFT_R2BF_S16_ST_INCP_P
    0U,	// EE_FFT_VST_R32_DECP_P
    3072U,	// EE_LDF_128_IP_P
    3072U,	// EE_LDF_128_XP_P
    256U,	// EE_LDF_64_IP_P
    0U,	// EE_LDF_64_XP_P
    0U,	// EE_LDQA_S16_128_IP_P
    0U,	// EE_LDQA_S16_128_XP_P
    0U,	// EE_LDQA_S8_128_IP_P
    0U,	// EE_LDQA_S8_128_XP_P
    0U,	// EE_LDQA_U16_128_IP_P
    0U,	// EE_LDQA_U16_128_XP_P
    0U,	// EE_LDQA_U8_128_IP_P
    0U,	// EE_LDQA_U8_128_XP_P
    9408U,	// EE_LDXQ_32_P
    8U,	// EE_LD_128_USAR_IP_P
    8U,	// EE_LD_128_USAR_XP_P
    0U,	// EE_LD_ACCX_IP_P
    0U,	// EE_LD_QACC_H_H_32_IP_P
    0U,	// EE_LD_QACC_H_L_128_IP_P
    0U,	// EE_LD_QACC_L_H_32_IP_P
    0U,	// EE_LD_QACC_L_L_128_IP_P
    0U,	// EE_LD_UA_STATE_IP_P
    0U,	// EE_MOVI_32_A_P
    0U,	// EE_MOVI_32_Q_P
    0U,	// EE_MOV_S16_QACC_P
    0U,	// EE_MOV_S8_QACC_P
    0U,	// EE_MOV_U16_QACC_P
    0U,	// EE_MOV_U8_QACC_P
    0U,	// EE_NOTQ_P
    8U,	// EE_ORQ_P
    0U,	// EE_SLCI_2Q_P
    0U,	// EE_SLCXXP_2Q_P
    0U,	// EE_SRCI_2Q_P
    0U,	// EE_SRCMB_S16_QACC_P
    0U,	// EE_SRCMB_S8_QACC_P
    8U,	// EE_SRCQ_128_ST_INCP_P
    0U,	// EE_SRCXXP_2Q_P
    33920U,	// EE_SRC_Q_LD_IP_P
    33920U,	// EE_SRC_Q_LD_XP_P
    8U,	// EE_SRC_Q_P
    8U,	// EE_SRC_Q_QUP_P
    0U,	// EE_SRS_ACCX_P
    3072U,	// EE_STF_128_IP_P
    3072U,	// EE_STF_128_XP_P
    256U,	// EE_STF_64_IP_P
    0U,	// EE_STF_64_XP_P
    9408U,	// EE_STXQ_32_P
    0U,	// EE_ST_ACCX_IP_P
    0U,	// EE_ST_QACC_H_H_32_IP_P
    0U,	// EE_ST_QACC_H_L_128_IP_P
    0U,	// EE_ST_QACC_L_H_32_IP_P
    0U,	// EE_ST_QACC_L_L_128_IP_P
    0U,	// EE_ST_UA_STATE_IP_P
    33920U,	// EE_VADDS_S16_LD_INCP_P
    8U,	// EE_VADDS_S16_P
    33920U,	// EE_VADDS_S16_ST_INCP_P
    33920U,	// EE_VADDS_S32_LD_INCP_P
    8U,	// EE_VADDS_S32_P
    33920U,	// EE_VADDS_S32_ST_INCP_P
    33920U,	// EE_VADDS_S8_LD_INCP_P
    8U,	// EE_VADDS_S8_P
    33920U,	// EE_VADDS_S8_ST_INCP_P
    8U,	// EE_VCMP_EQ_S16_P
    8U,	// EE_VCMP_EQ_S32_P
    8U,	// EE_VCMP_EQ_S8_P
    8U,	// EE_VCMP_GT_S16_P
    8U,	// EE_VCMP_GT_S32_P
    8U,	// EE_VCMP_GT_S8_P
    8U,	// EE_VCMP_LT_S16_P
    8U,	// EE_VCMP_LT_S32_P
    8U,	// EE_VCMP_LT_S8_P
    0U,	// EE_VLDBC_16_IP_P
    0U,	// EE_VLDBC_16_P
    8U,	// EE_VLDBC_16_XP_P
    0U,	// EE_VLDBC_32_IP_P
    0U,	// EE_VLDBC_32_P
    8U,	// EE_VLDBC_32_XP_P
    1U,	// EE_VLDBC_8_IP_P
    0U,	// EE_VLDBC_8_P
    8U,	// EE_VLDBC_8_XP_P
    8U,	// EE_VLDHBC_16_INCP_P
    8U,	// EE_VLD_128_IP_P
    8U,	// EE_VLD_128_XP_P
    1U,	// EE_VLD_H_64_IP_P
    8U,	// EE_VLD_H_64_XP_P
    1U,	// EE_VLD_L_64_IP_P
    8U,	// EE_VLD_L_64_XP_P
    33920U,	// EE_VMAX_S16_LD_INCP_P
    8U,	// EE_VMAX_S16_P
    33920U,	// EE_VMAX_S16_ST_INCP_P
    33920U,	// EE_VMAX_S32_LD_INCP_P
    8U,	// EE_VMAX_S32_P
    33920U,	// EE_VMAX_S32_ST_INCP_P
    33920U,	// EE_VMAX_S8_LD_INCP_P
    8U,	// EE_VMAX_S8_P
    33920U,	// EE_VMAX_S8_ST_INCP_P
    33920U,	// EE_VMIN_S16_LD_INCP_P
    8U,	// EE_VMIN_S16_P
    33920U,	// EE_VMIN_S16_ST_INCP_P
    33920U,	// EE_VMIN_S32_LD_INCP_P
    8U,	// EE_VMIN_S32_P
    33920U,	// EE_VMIN_S32_ST_INCP_P
    33920U,	// EE_VMIN_S8_LD_INCP_P
    8U,	// EE_VMIN_S8_P
    33920U,	// EE_VMIN_S8_ST_INCP_P
    9U,	// EE_VMULAS_S16_ACCX_LD_IP_P
    321U,	// EE_VMULAS_S16_ACCX_LD_IP_QUP_P
    33920U,	// EE_VMULAS_S16_ACCX_LD_XP_P
    1152U,	// EE_VMULAS_S16_ACCX_LD_XP_QUP_P
    0U,	// EE_VMULAS_S16_ACCX_P
    128U,	// EE_VMULAS_S16_QACC_LDBC_INCP_P
    1152U,	// EE_VMULAS_S16_QACC_LDBC_INCP_QUP_P
    9U,	// EE_VMULAS_S16_QACC_LD_IP_P
    321U,	// EE_VMULAS_S16_QACC_LD_IP_QUP_P
    33920U,	// EE_VMULAS_S16_QACC_LD_XP_P
    1152U,	// EE_VMULAS_S16_QACC_LD_XP_QUP_P
    0U,	// EE_VMULAS_S16_QACC_P
    9U,	// EE_VMULAS_S8_ACCX_LD_IP_P
    321U,	// EE_VMULAS_S8_ACCX_LD_IP_QUP_P
    33920U,	// EE_VMULAS_S8_ACCX_LD_XP_P
    1152U,	// EE_VMULAS_S8_ACCX_LD_XP_QUP_P
    0U,	// EE_VMULAS_S8_ACCX_P
    128U,	// EE_VMULAS_S8_QACC_LDBC_INCP_P
    1152U,	// EE_VMULAS_S8_QACC_LDBC_INCP_QUP_P
    9U,	// EE_VMULAS_S8_QACC_LD_IP_P
    321U,	// EE_VMULAS_S8_QACC_LD_IP_QUP_P
    33920U,	// EE_VMULAS_S8_QACC_LD_XP_P
    1152U,	// EE_VMULAS_S8_QACC_LD_XP_QUP_P
    0U,	// EE_VMULAS_S8_QACC_P
    9U,	// EE_VMULAS_U16_ACCX_LD_IP_P
    321U,	// EE_VMULAS_U16_ACCX_LD_IP_QUP_P
    33920U,	// EE_VMULAS_U16_ACCX_LD_XP_P
    1152U,	// EE_VMULAS_U16_ACCX_LD_XP_QUP_P
    0U,	// EE_VMULAS_U16_ACCX_P
    128U,	// EE_VMULAS_U16_QACC_LDBC_INCP_P
    1152U,	// EE_VMULAS_U16_QACC_LDBC_INCP_QUP_P
    9U,	// EE_VMULAS_U16_QACC_LD_IP_P
    321U,	// EE_VMULAS_U16_QACC_LD_IP_QUP_P
    33920U,	// EE_VMULAS_U16_QACC_LD_XP_P
    1152U,	// EE_VMULAS_U16_QACC_LD_XP_QUP_P
    0U,	// EE_VMULAS_U16_QACC_P
    9U,	// EE_VMULAS_U8_ACCX_LD_IP_P
    321U,	// EE_VMULAS_U8_ACCX_LD_IP_QUP_P
    33920U,	// EE_VMULAS_U8_ACCX_LD_XP_P
    1152U,	// EE_VMULAS_U8_ACCX_LD_XP_QUP_P
    0U,	// EE_VMULAS_U8_ACCX_P
    128U,	// EE_VMULAS_U8_QACC_LDBC_INCP_P
    1152U,	// EE_VMULAS_U8_QACC_LDBC_INCP_QUP_P
    9U,	// EE_VMULAS_U8_QACC_LD_IP_P
    321U,	// EE_VMULAS_U8_QACC_LD_IP_QUP_P
    33920U,	// EE_VMULAS_U8_QACC_LD_XP_P
    1152U,	// EE_VMULAS_U8_QACC_LD_XP_QUP_P
    0U,	// EE_VMULAS_U8_QACC_P
    33920U,	// EE_VMUL_S16_LD_INCP_P
    8U,	// EE_VMUL_S16_P
    33920U,	// EE_VMUL_S16_ST_INCP_P
    33920U,	// EE_VMUL_S8_LD_INCP_P
    8U,	// EE_VMUL_S8_P
    33920U,	// EE_VMUL_S8_ST_INCP_P
    33920U,	// EE_VMUL_U16_LD_INCP_P
    8U,	// EE_VMUL_U16_P
    33920U,	// EE_VMUL_U16_ST_INCP_P
    33920U,	// EE_VMUL_U8_LD_INCP_P
    8U,	// EE_VMUL_U8_P
    33920U,	// EE_VMUL_U8_ST_INCP_P
    0U,	// EE_VPRELU_S16_P
    0U,	// EE_VPRELU_S8_P
    8U,	// EE_VRELU_S16_P
    8U,	// EE_VRELU_S8_P
    0U,	// EE_VSL_32_P
    9344U,	// EE_VSMULAS_S16_QACC_LD_INCP_P
    1U,	// EE_VSMULAS_S16_QACC_P
    11392U,	// EE_VSMULAS_S8_QACC_LD_INCP_P
    0U,	// EE_VSMULAS_S8_QACC_P
    0U,	// EE_VSR_32_P
    8U,	// EE_VST_128_IP_P
    8U,	// EE_VST_128_XP_P
    1U,	// EE_VST_H_64_IP_P
    8U,	// EE_VST_H_64_XP_P
    1U,	// EE_VST_L_64_IP_P
    8U,	// EE_VST_L_64_XP_P
    33920U,	// EE_VSUBS_S16_LD_INCP_P
    8U,	// EE_VSUBS_S16_P
    33920U,	// EE_VSUBS_S16_ST_INCP_P
    33920U,	// EE_VSUBS_S32_LD_INCP_P
    8U,	// EE_VSUBS_S32_P
    33920U,	// EE_VSUBS_S32_ST_INCP_P
    33920U,	// EE_VSUBS_S8_LD_INCP_P
    8U,	// EE_VSUBS_S8_P
    33920U,	// EE_VSUBS_S8_ST_INCP_P
    0U,	// EE_VUNZIP_16_P
    0U,	// EE_VUNZIP_32_P
    0U,	// EE_VUNZIP_8_P
    0U,	// EE_VZIP_16_P
    0U,	// EE_VZIP_32_P
    0U,	// EE_VZIP_8_P
    8U,	// EE_XORQ_P
    0U,	// EE_ZERO_ACCX_P
    0U,	// EE_ZERO_QACC_P
    0U,	// EE_ZERO_Q_P
    8U,	// EXTUI_BR2_P
    8U,	// EXTUI_BR4_P
    8U,	// EXTUI_BR_P
    0U,	// L8I_P
    0U,	// LDDEC_P
    0U,	// LDINC_P
    0U,	// LOOPBR
    0U,	// LOOPDEC
    0U,	// LOOPEND
    0U,	// LOOPINIT
    0U,	// LOOPSTART
    0U,	// MOVBA2_P
    0U,	// MOVBA2_P2
    0U,	// MOVBA4_P
    0U,	// MOVBA4_P2
    0U,	// MOVBA_P
    0U,	// MOVBA_P2
    0U,	// MULA_DA_HH_LDDEC_P
    0U,	// MULA_DA_HH_LDINC_P
    0U,	// MULA_DA_HL_LDDEC_P
    0U,	// MULA_DA_HL_LDINC_P
    0U,	// MULA_DA_LH_LDDEC_P
    0U,	// MULA_DA_LH_LDINC_P
    0U,	// MULA_DA_LL_LDDEC_P
    0U,	// MULA_DA_LL_LDINC_P
    128U,	// MULA_DD_HH_LDDEC_P
    128U,	// MULA_DD_HH_LDINC_P
    128U,	// MULA_DD_HL_LDDEC_P
    128U,	// MULA_DD_HL_LDINC_P
    128U,	// MULA_DD_LH_LDDEC_P
    128U,	// MULA_DD_LH_LDINC_P
    128U,	// MULA_DD_LL_LDDEC_P
    128U,	// MULA_DD_LL_LDINC_P
    0U,	// RESTORE_BOOL
    3072U,	// SELECT
    3072U,	// SELECT_CC_FP_FP
    3072U,	// SELECT_CC_FP_INT
    3072U,	// SELECT_CC_INT_FP
    8U,	// SLLI_BR_P
    8U,	// SLL_P
    0U,	// SPILL_BOOL
    8U,	// SRA_P
    8U,	// SRL_P
    0U,	// WSR_ACCHI_P
    0U,	// WSR_ACCLO_P
    0U,	// WSR_M0_P
    0U,	// WSR_M1_P
    0U,	// WSR_M2_P
    0U,	// WSR_M3_P
    0U,	// XSR_ACCHI_P
    0U,	// XSR_ACCLO_P
    0U,	// XSR_M0_P
    0U,	// XSR_M1_P
    0U,	// XSR_M2_P
    0U,	// XSR_M3_P
    0U,	// mv_QR_P
    0U,	// ABS
    0U,	// ABS_S
    8U,	// ADD
    0U,	// ADDEXPM_S
    0U,	// ADDEXP_S
    8U,	// ADDI
    1U,	// ADDI_N
    1U,	// ADDMI
    8U,	// ADDX2
    8U,	// ADDX4
    8U,	// ADDX8
    8U,	// ADD_N
    8U,	// ADD_S
    0U,	// AE_ABS16S
    0U,	// AE_ABS24S
    0U,	// AE_ABS32
    0U,	// AE_ABS32S
    0U,	// AE_ABS64
    0U,	// AE_ABS64S
    8U,	// AE_ADD16
    8U,	// AE_ADD16S
    8U,	// AE_ADD24S
    8U,	// AE_ADD32
    8U,	// AE_ADD32S
    8U,	// AE_ADD32_HL_LH
    8U,	// AE_ADD64
    8U,	// AE_ADD64S
    8U,	// AE_ADDBRBA32
    8U,	// AE_ADDSUB32
    8U,	// AE_ADDSUB32S
    8U,	// AE_AND
    0U,	// AE_CVT32X2F16_10
    0U,	// AE_CVT32X2F16_32
    0U,	// AE_CVT48A32
    0U,	// AE_CVT64A32
    0U,	// AE_CVT64F32_H
    0U,	// AE_CVTA32F24S_H
    0U,	// AE_CVTA32F24S_L
    0U,	// AE_CVTQ56A32S
    0U,	// AE_CVTQ56P32S_H
    0U,	// AE_CVTQ56P32S_L
    0U,	// AE_DB
    0U,	// AE_DBI
    0U,	// AE_DBI_IC
    0U,	// AE_DBI_IP
    0U,	// AE_DB_IC
    0U,	// AE_DB_IP
    0U,	// AE_DIV64D32_H
    0U,	// AE_DIV64D32_L
    8U,	// AE_EQ16
    8U,	// AE_EQ32
    8U,	// AE_EQ64
    1U,	// AE_L16M_I
    1U,	// AE_L16M_IU
    8U,	// AE_L16M_X
    10U,	// AE_L16M_XC
    10U,	// AE_L16M_XU
    2U,	// AE_L16X2M_I
    2U,	// AE_L16X2M_IU
    8U,	// AE_L16X2M_X
    10U,	// AE_L16X2M_XC
    10U,	// AE_L16X2M_XU
    2U,	// AE_L16X4_I
    2U,	// AE_L16X4_IP
    0U,	// AE_L16X4_RIC
    0U,	// AE_L16X4_RIP
    8U,	// AE_L16X4_X
    10U,	// AE_L16X4_XC
    10U,	// AE_L16X4_XP
    1U,	// AE_L16_I
    1U,	// AE_L16_IP
    8U,	// AE_L16_X
    10U,	// AE_L16_XC
    10U,	// AE_L16_XP
    2U,	// AE_L32F24_I
    2U,	// AE_L32F24_IP
    8U,	// AE_L32F24_X
    10U,	// AE_L32F24_XC
    10U,	// AE_L32F24_XP
    2U,	// AE_L32M_I
    2U,	// AE_L32M_IU
    8U,	// AE_L32M_X
    10U,	// AE_L32M_XC
    10U,	// AE_L32M_XU
    2U,	// AE_L32X2F24_I
    2U,	// AE_L32X2F24_IP
    0U,	// AE_L32X2F24_RIC
    0U,	// AE_L32X2F24_RIP
    8U,	// AE_L32X2F24_X
    10U,	// AE_L32X2F24_XC
    10U,	// AE_L32X2F24_XP
    2U,	// AE_L32X2_I
    2U,	// AE_L32X2_IP
    0U,	// AE_L32X2_RIC
    0U,	// AE_L32X2_RIP
    8U,	// AE_L32X2_X
    10U,	// AE_L32X2_XC
    10U,	// AE_L32X2_XP
    2U,	// AE_L32_I
    2U,	// AE_L32_IP
    8U,	// AE_L32_X
    10U,	// AE_L32_XC
    10U,	// AE_L32_XP
    2U,	// AE_L64_I
    2U,	// AE_L64_IP
    8U,	// AE_L64_X
    10U,	// AE_L64_XC
    10U,	// AE_L64_XP
    0U,	// AE_LA16X4NEG_PC
    0U,	// AE_LA16X4POS_PC
    2U,	// AE_LA16X4_IC
    2U,	// AE_LA16X4_IP
    2U,	// AE_LA16X4_RIC
    2U,	// AE_LA16X4_RIP
    0U,	// AE_LA24NEG_PC
    0U,	// AE_LA24POS_PC
    0U,	// AE_LA24X2NEG_PC
    0U,	// AE_LA24X2POS_PC
    2U,	// AE_LA24X2_IC
    2U,	// AE_LA24X2_IP
    2U,	// AE_LA24X2_RIC
    2U,	// AE_LA24X2_RIP
    2U,	// AE_LA24_IC
    2U,	// AE_LA24_IP
    2U,	// AE_LA24_RIC
    2U,	// AE_LA24_RIP
    2U,	// AE_LA32X2F24_IC
    2U,	// AE_LA32X2F24_IP
    2U,	// AE_LA32X2F24_RIC
    2U,	// AE_LA32X2F24_RIP
    0U,	// AE_LA32X2NEG_PC
    0U,	// AE_LA32X2POS_PC
    2U,	// AE_LA32X2_IC
    2U,	// AE_LA32X2_IP
    2U,	// AE_LA32X2_RIC
    2U,	// AE_LA32X2_RIP
    0U,	// AE_LA64_PP
    2U,	// AE_LALIGN64_I
    0U,	// AE_LB
    0U,	// AE_LBI
    8U,	// AE_LBK
    2U,	// AE_LBKI
    0U,	// AE_LBS
    0U,	// AE_LBSI
    8U,	// AE_LE16
    8U,	// AE_LE32
    8U,	// AE_LE64
    8U,	// AE_LT16
    8U,	// AE_LT32
    8U,	// AE_LT64
    8U,	// AE_MAX32
    8U,	// AE_MAX64
    8U,	// AE_MAXABS32S
    8U,	// AE_MAXABS64S
    8U,	// AE_MIN32
    8U,	// AE_MIN64
    8U,	// AE_MINABS32S
    8U,	// AE_MINABS64S
    0U,	// AE_MOV
    0U,	// AE_MOVAD16_0
    0U,	// AE_MOVAD16_1
    0U,	// AE_MOVAD16_2
    0U,	// AE_MOVAD16_3
    0U,	// AE_MOVAD32_H
    0U,	// AE_MOVAD32_L
    0U,	// AE_MOVALIGN
    0U,	// AE_MOVDA16
    8U,	// AE_MOVDA16X2
    0U,	// AE_MOVDA32
    8U,	// AE_MOVDA32X2
    10U,	// AE_MOVF16X4
    10U,	// AE_MOVF32X2
    10U,	// AE_MOVF64
    0U,	// AE_MOVI
    10U,	// AE_MOVT16X4
    10U,	// AE_MOVT32X2
    10U,	// AE_MOVT64
    0U,	// AE_MUL16X4
    8U,	// AE_MUL32U_LL
    8U,	// AE_MUL32X16_H0
    8U,	// AE_MUL32X16_H0_S2
    8U,	// AE_MUL32X16_H1
    8U,	// AE_MUL32X16_H1_S2
    8U,	// AE_MUL32X16_H2
    8U,	// AE_MUL32X16_H2_S2
    8U,	// AE_MUL32X16_H3
    8U,	// AE_MUL32X16_H3_S2
    8U,	// AE_MUL32X16_L0
    8U,	// AE_MUL32X16_L0_S2
    8U,	// AE_MUL32X16_L1
    8U,	// AE_MUL32X16_L1_S2
    8U,	// AE_MUL32X16_L2
    8U,	// AE_MUL32X16_L2_S2
    8U,	// AE_MUL32X16_L3
    8U,	// AE_MUL32X16_L3_S2
    8U,	// AE_MUL32_HH
    8U,	// AE_MUL32_LH
    8U,	// AE_MUL32_LL
    8U,	// AE_MUL32_LL_S2
    11U,	// AE_MULA16X4
    10U,	// AE_MULA32U_LL
    10U,	// AE_MULA32X16_H0
    10U,	// AE_MULA32X16_H0_S2
    10U,	// AE_MULA32X16_H1
    10U,	// AE_MULA32X16_H1_S2
    10U,	// AE_MULA32X16_H2
    10U,	// AE_MULA32X16_H2_S2
    10U,	// AE_MULA32X16_H3
    10U,	// AE_MULA32X16_H3_S2
    10U,	// AE_MULA32X16_L0
    10U,	// AE_MULA32X16_L0_S2
    10U,	// AE_MULA32X16_L1
    10U,	// AE_MULA32X16_L1_S2
    10U,	// AE_MULA32X16_L2
    10U,	// AE_MULA32X16_L2_S2
    10U,	// AE_MULA32X16_L3
    10U,	// AE_MULA32X16_L3_S2
    10U,	// AE_MULA32_HH
    10U,	// AE_MULA32_LH
    10U,	// AE_MULA32_LL
    10U,	// AE_MULA32_LL_S2
    10U,	// AE_MULAAD24_HH_LL
    10U,	// AE_MULAAD24_HH_LL_S2
    10U,	// AE_MULAAD24_HL_LH
    10U,	// AE_MULAAD24_HL_LH_S2
    10U,	// AE_MULAAD32X16_H0_L1
    10U,	// AE_MULAAD32X16_H0_L1_S2
    10U,	// AE_MULAAD32X16_H1_L0
    10U,	// AE_MULAAD32X16_H1_L0_S2
    10U,	// AE_MULAAD32X16_H2_L3
    10U,	// AE_MULAAD32X16_H2_L3_S2
    10U,	// AE_MULAAD32X16_H3_L2
    10U,	// AE_MULAAD32X16_H3_L2_S2
    10U,	// AE_MULAAFD16SS_11_00
    10U,	// AE_MULAAFD16SS_11_00_S2
    10U,	// AE_MULAAFD16SS_13_02
    10U,	// AE_MULAAFD16SS_13_02_S2
    10U,	// AE_MULAAFD16SS_33_22
    10U,	// AE_MULAAFD16SS_33_22_S2
    10U,	// AE_MULAAFD24_HH_LL
    10U,	// AE_MULAAFD24_HH_LL_S2
    10U,	// AE_MULAAFD24_HL_LH
    10U,	// AE_MULAAFD24_HL_LH_S2
    10U,	// AE_MULAAFD32X16_H0_L1
    10U,	// AE_MULAAFD32X16_H0_L1_S2
    10U,	// AE_MULAAFD32X16_H1_L0
    10U,	// AE_MULAAFD32X16_H1_L0_S2
    10U,	// AE_MULAAFD32X16_H2_L3
    10U,	// AE_MULAAFD32X16_H2_L3_S2
    10U,	// AE_MULAAFD32X16_H3_L2
    10U,	// AE_MULAAFD32X16_H3_L2_S2
    10U,	// AE_MULAC24
    10U,	// AE_MULAC32X16_H
    10U,	// AE_MULAC32X16_L
    10U,	// AE_MULAF16SS_00
    10U,	// AE_MULAF16SS_00_S2
    10U,	// AE_MULAF16SS_10
    10U,	// AE_MULAF16SS_11
    10U,	// AE_MULAF16SS_20
    10U,	// AE_MULAF16SS_21
    10U,	// AE_MULAF16SS_22
    10U,	// AE_MULAF16SS_30
    10U,	// AE_MULAF16SS_31
    10U,	// AE_MULAF16SS_32
    10U,	// AE_MULAF16SS_33
    11U,	// AE_MULAF16X4SS
    10U,	// AE_MULAF32R_HH
    10U,	// AE_MULAF32R_LH
    10U,	// AE_MULAF32R_LL
    10U,	// AE_MULAF32R_LL_S2
    10U,	// AE_MULAF32S_HH
    10U,	// AE_MULAF32S_LH
    10U,	// AE_MULAF32S_LL
    10U,	// AE_MULAF32S_LL_S2
    10U,	// AE_MULAF32X16_H0
    10U,	// AE_MULAF32X16_H0_S2
    10U,	// AE_MULAF32X16_H1
    10U,	// AE_MULAF32X16_H1_S2
    10U,	// AE_MULAF32X16_H2
    10U,	// AE_MULAF32X16_H2_S2
    10U,	// AE_MULAF32X16_H3
    10U,	// AE_MULAF32X16_H3_S2
    10U,	// AE_MULAF32X16_L0
    10U,	// AE_MULAF32X16_L0_S2
    10U,	// AE_MULAF32X16_L1
    10U,	// AE_MULAF32X16_L1_S2
    10U,	// AE_MULAF32X16_L2
    10U,	// AE_MULAF32X16_L2_S2
    10U,	// AE_MULAF32X16_L3
    10U,	// AE_MULAF32X16_L3_S2
    10U,	// AE_MULAF48Q32SP16S_L
    10U,	// AE_MULAF48Q32SP16S_L_S2
    10U,	// AE_MULAF48Q32SP16U_L
    10U,	// AE_MULAF48Q32SP16U_L_S2
    10U,	// AE_MULAFC24RA
    10U,	// AE_MULAFC32X16RAS_H
    10U,	// AE_MULAFC32X16RAS_L
    387U,	// AE_MULAFD24X2_FIR_H
    387U,	// AE_MULAFD24X2_FIR_L
    387U,	// AE_MULAFD32X16X2_FIR_HH
    387U,	// AE_MULAFD32X16X2_FIR_HL
    387U,	// AE_MULAFD32X16X2_FIR_LH
    387U,	// AE_MULAFD32X16X2_FIR_LL
    10U,	// AE_MULAFP24X2R
    10U,	// AE_MULAFP24X2RA
    10U,	// AE_MULAFP24X2RA_S2
    10U,	// AE_MULAFP24X2R_S2
    10U,	// AE_MULAFP32X16X2RAS_H
    10U,	// AE_MULAFP32X16X2RAS_H_S2
    10U,	// AE_MULAFP32X16X2RAS_L
    10U,	// AE_MULAFP32X16X2RAS_L_S2
    10U,	// AE_MULAFP32X16X2RS_H
    10U,	// AE_MULAFP32X16X2RS_H_S2
    10U,	// AE_MULAFP32X16X2RS_L
    10U,	// AE_MULAFP32X16X2RS_L_S2
    10U,	// AE_MULAFP32X2RAS
    10U,	// AE_MULAFP32X2RS
    10U,	// AE_MULAFQ32SP24S_H_S2
    10U,	// AE_MULAFQ32SP24S_L_S2
    10U,	// AE_MULAP24X2
    10U,	// AE_MULAP24X2_S2
    10U,	// AE_MULAP32X16X2_H
    10U,	// AE_MULAP32X16X2_L
    10U,	// AE_MULAP32X2
    10U,	// AE_MULAQ32SP16S_L_S2
    10U,	// AE_MULAQ32SP16U_L_S2
    10U,	// AE_MULARFQ32SP24S_H_S2
    10U,	// AE_MULARFQ32SP24S_L_S2
    10U,	// AE_MULAS32F48P16S_HH
    10U,	// AE_MULAS32F48P16S_HH_S2
    10U,	// AE_MULAS32F48P16S_LH
    10U,	// AE_MULAS32F48P16S_LH_S2
    10U,	// AE_MULAS32F48P16S_LL
    10U,	// AE_MULAS32F48P16S_LL_S2
    10U,	// AE_MULASD24_HH_LL
    10U,	// AE_MULASD24_HH_LL_S2
    10U,	// AE_MULASD24_HL_LH
    10U,	// AE_MULASD24_HL_LH_S2
    10U,	// AE_MULASD32X16_H1_L0
    10U,	// AE_MULASD32X16_H1_L0_S2
    10U,	// AE_MULASD32X16_H3_L2
    10U,	// AE_MULASD32X16_H3_L2_S2
    10U,	// AE_MULASFD24_HH_LL
    10U,	// AE_MULASFD24_HH_LL_S2
    10U,	// AE_MULASFD24_HL_LH
    10U,	// AE_MULASFD24_HL_LH_S2
    10U,	// AE_MULASFD32X16_H1_L0
    10U,	// AE_MULASFD32X16_H1_L0_S2
    10U,	// AE_MULASFD32X16_H3_L2
    10U,	// AE_MULASFD32X16_H3_L2_S2
    8U,	// AE_MULC24
    8U,	// AE_MULC32X16_H
    8U,	// AE_MULC32X16_L
    8U,	// AE_MULF16SS_00
    8U,	// AE_MULF16SS_00_S2
    8U,	// AE_MULF16SS_10
    8U,	// AE_MULF16SS_11
    8U,	// AE_MULF16SS_20
    8U,	// AE_MULF16SS_21
    8U,	// AE_MULF16SS_22
    8U,	// AE_MULF16SS_30
    8U,	// AE_MULF16SS_31
    8U,	// AE_MULF16SS_32
    8U,	// AE_MULF16SS_33
    0U,	// AE_MULF16X4SS
    8U,	// AE_MULF32R_HH
    8U,	// AE_MULF32R_LH
    8U,	// AE_MULF32R_LL
    8U,	// AE_MULF32R_LL_S2
    8U,	// AE_MULF32S_HH
    8U,	// AE_MULF32S_LH
    8U,	// AE_MULF32S_LL
    8U,	// AE_MULF32S_LL_S2
    8U,	// AE_MULF32X16_H0
    8U,	// AE_MULF32X16_H0_S2
    8U,	// AE_MULF32X16_H1
    8U,	// AE_MULF32X16_H1_S2
    8U,	// AE_MULF32X16_H2
    8U,	// AE_MULF32X16_H2_S2
    8U,	// AE_MULF32X16_H3
    8U,	// AE_MULF32X16_H3_S2
    8U,	// AE_MULF32X16_L0
    8U,	// AE_MULF32X16_L0_S2
    8U,	// AE_MULF32X16_L1
    8U,	// AE_MULF32X16_L1_S2
    8U,	// AE_MULF32X16_L2
    8U,	// AE_MULF32X16_L2_S2
    8U,	// AE_MULF32X16_L3
    8U,	// AE_MULF32X16_L3_S2
    8U,	// AE_MULF48Q32SP16S_L
    8U,	// AE_MULF48Q32SP16S_L_S2
    8U,	// AE_MULF48Q32SP16U_L
    8U,	// AE_MULF48Q32SP16U_L_S2
    8U,	// AE_MULFC24RA
    8U,	// AE_MULFC32X16RAS_H
    8U,	// AE_MULFC32X16RAS_L
    35840U,	// AE_MULFD24X2_FIR_H
    35840U,	// AE_MULFD24X2_FIR_L
    35840U,	// AE_MULFD32X16X2_FIR_HH
    35840U,	// AE_MULFD32X16X2_FIR_HL
    35840U,	// AE_MULFD32X16X2_FIR_LH
    35840U,	// AE_MULFD32X16X2_FIR_LL
    8U,	// AE_MULFP16X4RAS
    8U,	// AE_MULFP16X4S
    8U,	// AE_MULFP24X2R
    8U,	// AE_MULFP24X2RA
    8U,	// AE_MULFP24X2RA_S2
    8U,	// AE_MULFP24X2R_S2
    8U,	// AE_MULFP32X16X2RAS_H
    8U,	// AE_MULFP32X16X2RAS_H_S2
    8U,	// AE_MULFP32X16X2RAS_L
    8U,	// AE_MULFP32X16X2RAS_L_S2
    8U,	// AE_MULFP32X16X2RS_H
    8U,	// AE_MULFP32X16X2RS_H_S2
    8U,	// AE_MULFP32X16X2RS_L
    8U,	// AE_MULFP32X16X2RS_L_S2
    8U,	// AE_MULFP32X2RAS
    8U,	// AE_MULFP32X2RS
    8U,	// AE_MULFQ32SP24S_H_S2
    8U,	// AE_MULFQ32SP24S_L_S2
    8U,	// AE_MULP24X2
    8U,	// AE_MULP24X2_S2
    8U,	// AE_MULP32X16X2_H
    8U,	// AE_MULP32X16X2_L
    8U,	// AE_MULP32X2
    8U,	// AE_MULQ32SP16S_L_S2
    8U,	// AE_MULQ32SP16U_L_S2
    8U,	// AE_MULRFQ32SP24S_H_S2
    8U,	// AE_MULRFQ32SP24S_L_S2
    11U,	// AE_MULS16X4
    8U,	// AE_MULS32F48P16S_HH
    8U,	// AE_MULS32F48P16S_HH_S2
    8U,	// AE_MULS32F48P16S_LH
    8U,	// AE_MULS32F48P16S_LH_S2
    8U,	// AE_MULS32F48P16S_LL
    8U,	// AE_MULS32F48P16S_LL_S2
    10U,	// AE_MULS32U_LL
    10U,	// AE_MULS32X16_H0
    10U,	// AE_MULS32X16_H0_S2
    10U,	// AE_MULS32X16_H1
    10U,	// AE_MULS32X16_H1_S2
    10U,	// AE_MULS32X16_H2
    10U,	// AE_MULS32X16_H2_S2
    10U,	// AE_MULS32X16_H3
    10U,	// AE_MULS32X16_H3_S2
    10U,	// AE_MULS32X16_L0
    10U,	// AE_MULS32X16_L0_S2
    10U,	// AE_MULS32X16_L1
    10U,	// AE_MULS32X16_L1_S2
    10U,	// AE_MULS32X16_L2
    10U,	// AE_MULS32X16_L2_S2
    10U,	// AE_MULS32X16_L3
    10U,	// AE_MULS32X16_L3_S2
    10U,	// AE_MULS32_HH
    10U,	// AE_MULS32_LH
    10U,	// AE_MULS32_LL
    10U,	// AE_MULSAD24_HH_LL
    10U,	// AE_MULSAD24_HH_LL_S2
    10U,	// AE_MULSAD32X16_H1_L0
    10U,	// AE_MULSAD32X16_H1_L0_S2
    10U,	// AE_MULSAD32X16_H3_L2
    10U,	// AE_MULSAD32X16_H3_L2_S2
    10U,	// AE_MULSAFD24_HH_LL
    10U,	// AE_MULSAFD24_HH_LL_S2
    10U,	// AE_MULSAFD32X16_H1_L0
    10U,	// AE_MULSAFD32X16_H1_L0_S2
    10U,	// AE_MULSAFD32X16_H3_L2
    10U,	// AE_MULSAFD32X16_H3_L2_S2
    10U,	// AE_MULSF16SS_00
    10U,	// AE_MULSF16SS_00_S2
    10U,	// AE_MULSF16SS_10
    10U,	// AE_MULSF16SS_11
    10U,	// AE_MULSF16SS_20
    10U,	// AE_MULSF16SS_21
    10U,	// AE_MULSF16SS_22
    10U,	// AE_MULSF16SS_30
    10U,	// AE_MULSF16SS_31
    10U,	// AE_MULSF16SS_32
    10U,	// AE_MULSF16SS_33
    11U,	// AE_MULSF16X4SS
    10U,	// AE_MULSF32R_HH
    10U,	// AE_MULSF32R_LH
    10U,	// AE_MULSF32R_LL
    10U,	// AE_MULSF32R_LL_S2
    10U,	// AE_MULSF32S_HH
    10U,	// AE_MULSF32S_LH
    10U,	// AE_MULSF32S_LL
    10U,	// AE_MULSF32X16_H0
    10U,	// AE_MULSF32X16_H0_S2
    10U,	// AE_MULSF32X16_H1
    10U,	// AE_MULSF32X16_H1_S2
    10U,	// AE_MULSF32X16_H2
    10U,	// AE_MULSF32X16_H2_S2
    10U,	// AE_MULSF32X16_H3
    10U,	// AE_MULSF32X16_H3_S2
    10U,	// AE_MULSF32X16_L0
    10U,	// AE_MULSF32X16_L0_S2
    10U,	// AE_MULSF32X16_L1
    10U,	// AE_MULSF32X16_L1_S2
    10U,	// AE_MULSF32X16_L2
    10U,	// AE_MULSF32X16_L2_S2
    10U,	// AE_MULSF32X16_L3
    10U,	// AE_MULSF32X16_L3_S2
    10U,	// AE_MULSF48Q32SP16S_L
    10U,	// AE_MULSF48Q32SP16S_L_S2
    10U,	// AE_MULSF48Q32SP16U_L
    10U,	// AE_MULSF48Q32SP16U_L_S2
    10U,	// AE_MULSFP24X2R
    10U,	// AE_MULSFP24X2RA
    10U,	// AE_MULSFP24X2RA_S2
    10U,	// AE_MULSFP24X2R_S2
    10U,	// AE_MULSFP32X16X2RAS_H
    10U,	// AE_MULSFP32X16X2RAS_H_S2
    10U,	// AE_MULSFP32X16X2RAS_L
    10U,	// AE_MULSFP32X16X2RAS_L_S2
    10U,	// AE_MULSFP32X16X2RS_H
    10U,	// AE_MULSFP32X16X2RS_H_S2
    10U,	// AE_MULSFP32X16X2RS_L
    10U,	// AE_MULSFP32X16X2RS_L_S2
    10U,	// AE_MULSFP32X2RAS
    10U,	// AE_MULSFP32X2RS
    10U,	// AE_MULSFQ32SP24S_H_S2
    10U,	// AE_MULSFQ32SP24S_L_S2
    10U,	// AE_MULSP24X2
    10U,	// AE_MULSP24X2_S2
    10U,	// AE_MULSP32X16X2_H
    10U,	// AE_MULSP32X16X2_L
    10U,	// AE_MULSP32X2
    10U,	// AE_MULSQ32SP16S_L_S2
    10U,	// AE_MULSQ32SP16U_L_S2
    10U,	// AE_MULSRFQ32SP24S_H_S2
    10U,	// AE_MULSRFQ32SP24S_L_S2
    10U,	// AE_MULSS32F48P16S_HH
    10U,	// AE_MULSS32F48P16S_HH_S2
    10U,	// AE_MULSS32F48P16S_LH
    10U,	// AE_MULSS32F48P16S_LH_S2
    10U,	// AE_MULSS32F48P16S_LL
    10U,	// AE_MULSS32F48P16S_LL_S2
    10U,	// AE_MULSSD24_HH_LL
    10U,	// AE_MULSSD24_HH_LL_S2
    10U,	// AE_MULSSD24_HL_LH
    10U,	// AE_MULSSD24_HL_LH_S2
    10U,	// AE_MULSSD32X16_H1_L0
    10U,	// AE_MULSSD32X16_H1_L0_S2
    10U,	// AE_MULSSD32X16_H3_L2
    10U,	// AE_MULSSD32X16_H3_L2_S2
    10U,	// AE_MULSSFD16SS_11_00
    10U,	// AE_MULSSFD16SS_11_00_S2
    10U,	// AE_MULSSFD16SS_13_02
    10U,	// AE_MULSSFD16SS_13_02_S2
    10U,	// AE_MULSSFD16SS_33_22
    10U,	// AE_MULSSFD16SS_33_22_S2
    10U,	// AE_MULSSFD24_HH_LL
    10U,	// AE_MULSSFD24_HH_LL_S2
    10U,	// AE_MULSSFD24_HL_LH
    10U,	// AE_MULSSFD24_HL_LH_S2
    10U,	// AE_MULSSFD32X16_H1_L0
    10U,	// AE_MULSSFD32X16_H1_L0_S2
    10U,	// AE_MULSSFD32X16_H3_L2
    10U,	// AE_MULSSFD32X16_H3_L2_S2
    8U,	// AE_MULZAAD24_HH_LL
    8U,	// AE_MULZAAD24_HH_LL_S2
    8U,	// AE_MULZAAD24_HL_LH
    8U,	// AE_MULZAAD24_HL_LH_S2
    8U,	// AE_MULZAAD32X16_H0_L1
    8U,	// AE_MULZAAD32X16_H0_L1_S2
    8U,	// AE_MULZAAD32X16_H1_L0
    8U,	// AE_MULZAAD32X16_H1_L0_S2
    8U,	// AE_MULZAAD32X16_H2_L3
    8U,	// AE_MULZAAD32X16_H2_L3_S2
    8U,	// AE_MULZAAD32X16_H3_L2
    8U,	// AE_MULZAAD32X16_H3_L2_S2
    8U,	// AE_MULZAAFD16SS_11_00
    8U,	// AE_MULZAAFD16SS_11_00_S2
    8U,	// AE_MULZAAFD16SS_13_02
    8U,	// AE_MULZAAFD16SS_13_02_S2
    8U,	// AE_MULZAAFD16SS_33_22
    8U,	// AE_MULZAAFD16SS_33_22_S2
    8U,	// AE_MULZAAFD24_HH_LL
    8U,	// AE_MULZAAFD24_HH_LL_S2
    8U,	// AE_MULZAAFD24_HL_LH
    8U,	// AE_MULZAAFD24_HL_LH_S2
    8U,	// AE_MULZAAFD32X16_H0_L1
    8U,	// AE_MULZAAFD32X16_H0_L1_S2
    8U,	// AE_MULZAAFD32X16_H1_L0
    8U,	// AE_MULZAAFD32X16_H1_L0_S2
    8U,	// AE_MULZAAFD32X16_H2_L3
    8U,	// AE_MULZAAFD32X16_H2_L3_S2
    8U,	// AE_MULZAAFD32X16_H3_L2
    8U,	// AE_MULZAAFD32X16_H3_L2_S2
    8U,	// AE_MULZASD24_HH_LL
    8U,	// AE_MULZASD24_HH_LL_S2
    8U,	// AE_MULZASD24_HL_LH
    8U,	// AE_MULZASD24_HL_LH_S2
    8U,	// AE_MULZASD32X16_H1_L0
    8U,	// AE_MULZASD32X16_H1_L0_S2
    8U,	// AE_MULZASD32X16_H3_L2
    8U,	// AE_MULZASD32X16_H3_L2_S2
    8U,	// AE_MULZASFD24_HH_LL
    8U,	// AE_MULZASFD24_HH_LL_S2
    8U,	// AE_MULZASFD24_HL_LH
    8U,	// AE_MULZASFD24_HL_LH_S2
    8U,	// AE_MULZASFD32X16_H1_L0
    8U,	// AE_MULZASFD32X16_H1_L0_S2
    8U,	// AE_MULZASFD32X16_H3_L2
    8U,	// AE_MULZASFD32X16_H3_L2_S2
    8U,	// AE_MULZSAD24_HH_LL
    8U,	// AE_MULZSAD24_HH_LL_S2
    8U,	// AE_MULZSAD32X16_H1_L0
    8U,	// AE_MULZSAD32X16_H1_L0_S2
    8U,	// AE_MULZSAD32X16_H3_L2
    8U,	// AE_MULZSAD32X16_H3_L2_S2
    8U,	// AE_MULZSAFD24_HH_LL
    8U,	// AE_MULZSAFD24_HH_LL_S2
    8U,	// AE_MULZSAFD32X16_H1_L0
    8U,	// AE_MULZSAFD32X16_H1_L0_S2
    8U,	// AE_MULZSAFD32X16_H3_L2
    8U,	// AE_MULZSAFD32X16_H3_L2_S2
    8U,	// AE_MULZSSD24_HH_LL
    8U,	// AE_MULZSSD24_HH_LL_S2
    8U,	// AE_MULZSSD24_HL_LH
    8U,	// AE_MULZSSD24_HL_LH_S2
    8U,	// AE_MULZSSD32X16_H1_L0
    8U,	// AE_MULZSSD32X16_H1_L0_S2
    8U,	// AE_MULZSSD32X16_H3_L2
    8U,	// AE_MULZSSD32X16_H3_L2_S2
    8U,	// AE_MULZSSFD16SS_11_00
    8U,	// AE_MULZSSFD16SS_11_00_S2
    8U,	// AE_MULZSSFD16SS_13_02
    8U,	// AE_MULZSSFD16SS_13_02_S2
    8U,	// AE_MULZSSFD16SS_33_22
    8U,	// AE_MULZSSFD16SS_33_22_S2
    8U,	// AE_MULZSSFD24_HH_LL
    8U,	// AE_MULZSSFD24_HH_LL_S2
    8U,	// AE_MULZSSFD24_HL_LH
    8U,	// AE_MULZSSFD24_HL_LH_S2
    8U,	// AE_MULZSSFD32X16_H1_L0
    8U,	// AE_MULZSSFD32X16_H1_L0_S2
    8U,	// AE_MULZSSFD32X16_H3_L2
    8U,	// AE_MULZSSFD32X16_H3_L2_S2
    8U,	// AE_NAND
    0U,	// AE_NEG16S
    0U,	// AE_NEG24S
    0U,	// AE_NEG32
    0U,	// AE_NEG32S
    0U,	// AE_NEG64
    0U,	// AE_NEG64S
    0U,	// AE_NSA64
    0U,	// AE_NSAZ16_0
    0U,	// AE_NSAZ32_L
    8U,	// AE_OR
    3U,	// AE_PKSR24
    3U,	// AE_PKSR32
    8U,	// AE_ROUND16X4F32SASYM
    8U,	// AE_ROUND16X4F32SSYM
    8U,	// AE_ROUND24X2F48SASYM
    8U,	// AE_ROUND24X2F48SSYM
    8U,	// AE_ROUND32X2F48SASYM
    8U,	// AE_ROUND32X2F48SSYM
    8U,	// AE_ROUND32X2F64SASYM
    8U,	// AE_ROUND32X2F64SSYM
    0U,	// AE_ROUNDSP16F24ASYM
    0U,	// AE_ROUNDSP16F24SYM
    8U,	// AE_ROUNDSP16Q48X2ASYM
    8U,	// AE_ROUNDSP16Q48X2SYM
    0U,	// AE_ROUNDSQ32F48ASYM
    0U,	// AE_ROUNDSQ32F48SYM
    1U,	// AE_S16M_L_I
    1U,	// AE_S16M_L_IU
    8U,	// AE_S16M_L_X
    10U,	// AE_S16M_L_XC
    10U,	// AE_S16M_L_XU
    2U,	// AE_S16X2M_I
    2U,	// AE_S16X2M_IU
    8U,	// AE_S16X2M_X
    10U,	// AE_S16X2M_XC
    10U,	// AE_S16X2M_XU
    2U,	// AE_S16X4_I
    2U,	// AE_S16X4_IP
    0U,	// AE_S16X4_RIC
    0U,	// AE_S16X4_RIP
    8U,	// AE_S16X4_X
    10U,	// AE_S16X4_XC
    10U,	// AE_S16X4_XP
    1U,	// AE_S16_0_I
    1U,	// AE_S16_0_IP
    8U,	// AE_S16_0_X
    10U,	// AE_S16_0_XC
    10U,	// AE_S16_0_XP
    2U,	// AE_S24RA64S_I
    2U,	// AE_S24RA64S_IP
    8U,	// AE_S24RA64S_X
    10U,	// AE_S24RA64S_XC
    10U,	// AE_S24RA64S_XP
    10U,	// AE_S24X2RA64S_IP
    2U,	// AE_S32F24_L_I
    2U,	// AE_S32F24_L_IP
    8U,	// AE_S32F24_L_X
    10U,	// AE_S32F24_L_XC
    10U,	// AE_S32F24_L_XP
    2U,	// AE_S32M_I
    2U,	// AE_S32M_IU
    8U,	// AE_S32M_X
    10U,	// AE_S32M_XC
    10U,	// AE_S32M_XU
    2U,	// AE_S32RA64S_I
    2U,	// AE_S32RA64S_IP
    8U,	// AE_S32RA64S_X
    10U,	// AE_S32RA64S_XC
    10U,	// AE_S32RA64S_XP
    2U,	// AE_S32X2F24_I
    2U,	// AE_S32X2F24_IP
    0U,	// AE_S32X2F24_RIC
    0U,	// AE_S32X2F24_RIP
    8U,	// AE_S32X2F24_X
    10U,	// AE_S32X2F24_XC
    10U,	// AE_S32X2F24_XP
    10U,	// AE_S32X2RA64S_IP
    2U,	// AE_S32X2_I
    2U,	// AE_S32X2_IP
    0U,	// AE_S32X2_RIC
    0U,	// AE_S32X2_RIP
    8U,	// AE_S32X2_X
    10U,	// AE_S32X2_XC
    10U,	// AE_S32X2_XP
    2U,	// AE_S32_L_I
    2U,	// AE_S32_L_IP
    8U,	// AE_S32_L_X
    10U,	// AE_S32_L_XC
    10U,	// AE_S32_L_XP
    2U,	// AE_S64_I
    2U,	// AE_S64_IP
    8U,	// AE_S64_X
    10U,	// AE_S64_XC
    10U,	// AE_S64_XP
    0U,	// AE_SA16X4_IC
    0U,	// AE_SA16X4_IP
    0U,	// AE_SA16X4_RIC
    0U,	// AE_SA16X4_RIP
    0U,	// AE_SA24X2_IC
    0U,	// AE_SA24X2_IP
    0U,	// AE_SA24X2_RIC
    0U,	// AE_SA24X2_RIP
    0U,	// AE_SA24_L_IC
    0U,	// AE_SA24_L_IP
    0U,	// AE_SA24_L_RIC
    0U,	// AE_SA24_L_RIP
    0U,	// AE_SA32X2F24_IC
    0U,	// AE_SA32X2F24_IP
    0U,	// AE_SA32X2F24_RIC
    0U,	// AE_SA32X2F24_RIP
    0U,	// AE_SA32X2_IC
    0U,	// AE_SA32X2_IP
    0U,	// AE_SA32X2_RIC
    0U,	// AE_SA32X2_RIP
    0U,	// AE_SA64NEG_FP
    0U,	// AE_SA64POS_FP
    2U,	// AE_SALIGN64_I
    8U,	// AE_SAT16X4
    0U,	// AE_SAT24S
    0U,	// AE_SAT48S
    0U,	// AE_SATQ56S
    0U,	// AE_SB
    0U,	// AE_SBF
    0U,	// AE_SBF_IC
    0U,	// AE_SBF_IP
    3U,	// AE_SBI
    3U,	// AE_SBI_IC
    3U,	// AE_SBI_IP
    0U,	// AE_SB_IC
    0U,	// AE_SB_IP
    448U,	// AE_SEL16I
    512U,	// AE_SEL16I_N
    3U,	// AE_SEXT32
    0U,	// AE_SEXT32X2D16_10
    0U,	// AE_SEXT32X2D16_32
    0U,	// AE_SHA32
    0U,	// AE_SHORTSWAP
    8U,	// AE_SLAA16S
    8U,	// AE_SLAA32
    8U,	// AE_SLAA32S
    8U,	// AE_SLAA64
    8U,	// AE_SLAA64S
    8U,	// AE_SLAAQ56
    3U,	// AE_SLAI16S
    11U,	// AE_SLAI24
    11U,	// AE_SLAI24S
    11U,	// AE_SLAI32
    11U,	// AE_SLAI32S
    3U,	// AE_SLAI64
    3U,	// AE_SLAI64S
    3U,	// AE_SLAISQ56S
    0U,	// AE_SLAS24
    0U,	// AE_SLAS24S
    0U,	// AE_SLAS32
    0U,	// AE_SLAS32S
    0U,	// AE_SLAS64
    0U,	// AE_SLAS64S
    0U,	// AE_SLASQ56
    0U,	// AE_SLASSQ56S
    8U,	// AE_SRA64_32
    8U,	// AE_SRAA16RS
    8U,	// AE_SRAA16S
    8U,	// AE_SRAA32
    8U,	// AE_SRAA32RS
    8U,	// AE_SRAA32S
    8U,	// AE_SRAA64
    3U,	// AE_SRAI16
    3U,	// AE_SRAI16R
    11U,	// AE_SRAI24
    11U,	// AE_SRAI32
    11U,	// AE_SRAI32R
    3U,	// AE_SRAI64
    0U,	// AE_SRAS24
    0U,	// AE_SRAS32
    0U,	// AE_SRAS64
    8U,	// AE_SRLA32
    8U,	// AE_SRLA64
    11U,	// AE_SRLI24
    11U,	// AE_SRLI32
    3U,	// AE_SRLI64
    0U,	// AE_SRLS24
    0U,	// AE_SRLS32
    0U,	// AE_SRLS64
    8U,	// AE_SUB16
    8U,	// AE_SUB16S
    8U,	// AE_SUB24S
    8U,	// AE_SUB32
    8U,	// AE_SUB32S
    8U,	// AE_SUB64
    8U,	// AE_SUB64S
    8U,	// AE_SUBADD32
    8U,	// AE_SUBADD32S
    0U,	// AE_TRUNCA32F64S_L
    0U,	// AE_TRUNCA32X2F64S
    448U,	// AE_TRUNCI32F64S_L
    448U,	// AE_TRUNCI32X2F64S
    0U,	// AE_VLDL16C
    0U,	// AE_VLDL16C_IC
    0U,	// AE_VLDL16C_IP
    8U,	// AE_VLDL16T
    8U,	// AE_VLDL32T
    0U,	// AE_VLDSHT
    10U,	// AE_VLEL16T
    10U,	// AE_VLEL32T
    0U,	// AE_VLES16C
    0U,	// AE_VLES16C_IC
    0U,	// AE_VLES16C_IP
    8U,	// AE_XOR
    0U,	// AE_ZALIGN64
    0U,	// ALL4
    0U,	// ALL8
    8U,	// AND
    8U,	// ANDB
    8U,	// ANDBC
    0U,	// ANY4
    0U,	// ANY8
    3U,	// BALL
    3U,	// BANY
    3U,	// BBC
    0U,	// BBCI
    3U,	// BBS
    0U,	// BBSI
    3U,	// BEQ
    0U,	// BEQI
    0U,	// BEQZ
    0U,	// BF
    3U,	// BGE
    0U,	// BGEI
    3U,	// BGEU
    0U,	// BGEUI
    0U,	// BGEZ
    3U,	// BLT
    0U,	// BLTI
    3U,	// BLTU
    0U,	// BLTUI
    0U,	// BLTZ
    3U,	// BNALL
    3U,	// BNE
    0U,	// BNEI
    0U,	// BNEZ
    3U,	// BNONE
    0U,	// BREAK
    0U,	// BREAK_N
    0U,	// BT
    0U,	// CALL0
    0U,	// CALL12
    0U,	// CALL4
    0U,	// CALL8
    0U,	// CALLX0
    0U,	// CALLX12
    0U,	// CALLX4
    0U,	// CALLX8
    3U,	// CEIL_S
    3U,	// CLAMPS
    0U,	// CLR_BIT_GPIO_OUT
    0U,	// CONST_S
    0U,	// DIV0_S
    10U,	// DIVN_S
    0U,	// DSYNC
    8U,	// EE_ANDQ
    0U,	// EE_BITREV
    0U,	// EE_CLR_BIT_GPIO_OUT
    192U,	// EE_CMUL_S16
    20U,	// EE_CMUL_S16_LD_INCP
    580U,	// EE_CMUL_S16_ST_INCP
    13312U,	// EE_FFT_AMS_S16_LD_INCP
    13312U,	// EE_FFT_AMS_S16_LD_INCP_UAUP
    13312U,	// EE_FFT_AMS_S16_LD_R32_DECP
    0U,	// EE_FFT_AMS_S16_ST_INCP
    28U,	// EE_FFT_CMUL_S16_LD_XP
    13954U,	// EE_FFT_CMUL_S16_ST_XP
    5120U,	// EE_FFT_R2BF_S16
    16002U,	// EE_FFT_R2BF_S16_ST_INCP
    4U,	// EE_FFT_VST_R32_DECP
    0U,	// EE_GET_GPIO_IN
    13312U,	// EE_LDF_128_IP
    13312U,	// EE_LDF_128_XP
    706U,	// EE_LDF_64_IP
    642U,	// EE_LDF_64_XP
    0U,	// EE_LDQA_S16_128_IP
    0U,	// EE_LDQA_S16_128_XP
    0U,	// EE_LDQA_S8_128_IP
    0U,	// EE_LDQA_S8_128_XP
    0U,	// EE_LDQA_U16_128_IP
    0U,	// EE_LDQA_U16_128_XP
    0U,	// EE_LDQA_U8_128_IP
    0U,	// EE_LDQA_U8_128_XP
    9408U,	// EE_LDXQ_32
    4U,	// EE_LD_128_USAR_IP
    10U,	// EE_LD_128_USAR_XP
    0U,	// EE_LD_ACCX_IP
    0U,	// EE_LD_QACC_H_H_32_IP
    0U,	// EE_LD_QACC_H_L_128_IP
    0U,	// EE_LD_QACC_L_H_32_IP
    0U,	// EE_LD_QACC_L_L_128_IP
    0U,	// EE_LD_UA_STATE_IP
    0U,	// EE_MOVI_32_A
    0U,	// EE_MOVI_32_Q
    0U,	// EE_MOV_S16_QACC
    0U,	// EE_MOV_S8_QACC
    0U,	// EE_MOV_U16_QACC
    0U,	// EE_MOV_U8_QACC
    0U,	// EE_NOTQ
    8U,	// EE_ORQ
    0U,	// EE_SET_BIT_GPIO_OUT
    0U,	// EE_SLCI_2Q
    0U,	// EE_SLCXXP_2Q
    0U,	// EE_SRCI_2Q
    0U,	// EE_SRCMB_S16_QACC
    0U,	// EE_SRCMB_S8_QACC
    10U,	// EE_SRCQ_128_ST_INCP
    0U,	// EE_SRCXXP_2Q
    8U,	// EE_SRC_Q
    0U,	// EE_SRC_Q_LD_IP
    804U,	// EE_SRC_Q_LD_XP
    10U,	// EE_SRC_Q_QUP
    0U,	// EE_SRS_ACCX
    13954U,	// EE_STF_128_IP
    13954U,	// EE_STF_128_XP
    706U,	// EE_STF_64_IP
    642U,	// EE_STF_64_XP
    9408U,	// EE_STXQ_32
    0U,	// EE_ST_ACCX_IP
    0U,	// EE_ST_QACC_H_H_32_IP
    0U,	// EE_ST_QACC_H_L_128_IP
    0U,	// EE_ST_QACC_L_H_32_IP
    0U,	// EE_ST_QACC_L_L_128_IP
    0U,	// EE_ST_UA_STATE_IP
    8U,	// EE_VADDS_S16
    2U,	// EE_VADDS_S16_LD_INCP
    12U,	// EE_VADDS_S16_ST_INCP
    8U,	// EE_VADDS_S32
    2U,	// EE_VADDS_S32_LD_INCP
    12U,	// EE_VADDS_S32_ST_INCP
    8U,	// EE_VADDS_S8
    2U,	// EE_VADDS_S8_LD_INCP
    12U,	// EE_VADDS_S8_ST_INCP
    8U,	// EE_VCMP_EQ_S16
    8U,	// EE_VCMP_EQ_S32
    8U,	// EE_VCMP_EQ_S8
    8U,	// EE_VCMP_GT_S16
    8U,	// EE_VCMP_GT_S32
    8U,	// EE_VCMP_GT_S8
    8U,	// EE_VCMP_LT_S16
    8U,	// EE_VCMP_LT_S32
    8U,	// EE_VCMP_LT_S8
    0U,	// EE_VLDBC_16
    4U,	// EE_VLDBC_16_IP
    10U,	// EE_VLDBC_16_XP
    0U,	// EE_VLDBC_32
    4U,	// EE_VLDBC_32_IP
    10U,	// EE_VLDBC_32_XP
    0U,	// EE_VLDBC_8
    4U,	// EE_VLDBC_8_IP
    10U,	// EE_VLDBC_8_XP
    10U,	// EE_VLDHBC_16_INCP
    4U,	// EE_VLD_128_IP
    10U,	// EE_VLD_128_XP
    4U,	// EE_VLD_H_64_IP
    10U,	// EE_VLD_H_64_XP
    4U,	// EE_VLD_L_64_IP
    10U,	// EE_VLD_L_64_XP
    8U,	// EE_VMAX_S16
    2U,	// EE_VMAX_S16_LD_INCP
    12U,	// EE_VMAX_S16_ST_INCP
    8U,	// EE_VMAX_S32
    2U,	// EE_VMAX_S32_LD_INCP
    12U,	// EE_VMAX_S32_ST_INCP
    8U,	// EE_VMAX_S8
    2U,	// EE_VMAX_S8_LD_INCP
    12U,	// EE_VMAX_S8_ST_INCP
    8U,	// EE_VMIN_S16
    2U,	// EE_VMIN_S16_LD_INCP
    12U,	// EE_VMIN_S16_ST_INCP
    8U,	// EE_VMIN_S32
    2U,	// EE_VMIN_S32_LD_INCP
    12U,	// EE_VMIN_S32_ST_INCP
    8U,	// EE_VMIN_S8
    2U,	// EE_VMIN_S8_LD_INCP
    12U,	// EE_VMIN_S8_ST_INCP
    0U,	// EE_VMULAS_S16_ACCX
    5U,	// EE_VMULAS_S16_ACCX_LD_IP
    0U,	// EE_VMULAS_S16_ACCX_LD_IP_QUP
    46722U,	// EE_VMULAS_S16_ACCX_LD_XP
    18276U,	// EE_VMULAS_S16_ACCX_LD_XP_QUP
    0U,	// EE_VMULAS_S16_QACC
    642U,	// EE_VMULAS_S16_QACC_LDBC_INCP
    868U,	// EE_VMULAS_S16_QACC_LDBC_INCP_QUP
    5U,	// EE_VMULAS_S16_QACC_LD_IP
    0U,	// EE_VMULAS_S16_QACC_LD_IP_QUP
    46722U,	// EE_VMULAS_S16_QACC_LD_XP
    18276U,	// EE_VMULAS_S16_QACC_LD_XP_QUP
    0U,	// EE_VMULAS_S8_ACCX
    5U,	// EE_VMULAS_S8_ACCX_LD_IP
    0U,	// EE_VMULAS_S8_ACCX_LD_IP_QUP
    46722U,	// EE_VMULAS_S8_ACCX_LD_XP
    18276U,	// EE_VMULAS_S8_ACCX_LD_XP_QUP
    0U,	// EE_VMULAS_S8_QACC
    642U,	// EE_VMULAS_S8_QACC_LDBC_INCP
    868U,	// EE_VMULAS_S8_QACC_LDBC_INCP_QUP
    5U,	// EE_VMULAS_S8_QACC_LD_IP
    0U,	// EE_VMULAS_S8_QACC_LD_IP_QUP
    46722U,	// EE_VMULAS_S8_QACC_LD_XP
    18276U,	// EE_VMULAS_S8_QACC_LD_XP_QUP
    0U,	// EE_VMULAS_U16_ACCX
    5U,	// EE_VMULAS_U16_ACCX_LD_IP
    0U,	// EE_VMULAS_U16_ACCX_LD_IP_QUP
    46722U,	// EE_VMULAS_U16_ACCX_LD_XP
    18276U,	// EE_VMULAS_U16_ACCX_LD_XP_QUP
    0U,	// EE_VMULAS_U16_QACC
    642U,	// EE_VMULAS_U16_QACC_LDBC_INCP
    868U,	// EE_VMULAS_U16_QACC_LDBC_INCP_QUP
    5U,	// EE_VMULAS_U16_QACC_LD_IP
    0U,	// EE_VMULAS_U16_QACC_LD_IP_QUP
    46722U,	// EE_VMULAS_U16_QACC_LD_XP
    18276U,	// EE_VMULAS_U16_QACC_LD_XP_QUP
    0U,	// EE_VMULAS_U8_ACCX
    5U,	// EE_VMULAS_U8_ACCX_LD_IP
    0U,	// EE_VMULAS_U8_ACCX_LD_IP_QUP
    46722U,	// EE_VMULAS_U8_ACCX_LD_XP
    18276U,	// EE_VMULAS_U8_ACCX_LD_XP_QUP
    0U,	// EE_VMULAS_U8_QACC
    642U,	// EE_VMULAS_U8_QACC_LDBC_INCP
    868U,	// EE_VMULAS_U8_QACC_LDBC_INCP_QUP
    5U,	// EE_VMULAS_U8_QACC_LD_IP
    0U,	// EE_VMULAS_U8_QACC_LD_IP_QUP
    46722U,	// EE_VMULAS_U8_QACC_LD_XP
    18276U,	// EE_VMULAS_U8_QACC_LD_XP_QUP
    8U,	// EE_VMUL_S16
    2U,	// EE_VMUL_S16_LD_INCP
    12U,	// EE_VMUL_S16_ST_INCP
    8U,	// EE_VMUL_S8
    2U,	// EE_VMUL_S8_LD_INCP
    12U,	// EE_VMUL_S8_ST_INCP
    8U,	// EE_VMUL_U16
    2U,	// EE_VMUL_U16_LD_INCP
    12U,	// EE_VMUL_U16_ST_INCP
    8U,	// EE_VMUL_U8
    2U,	// EE_VMUL_U8_LD_INCP
    12U,	// EE_VMUL_U8_ST_INCP
    0U,	// EE_VPRELU_S16
    0U,	// EE_VPRELU_S8
    10U,	// EE_VRELU_S16
    10U,	// EE_VRELU_S8
    0U,	// EE_VSL_32
    1U,	// EE_VSMULAS_S16_QACC
    20098U,	// EE_VSMULAS_S16_QACC_LD_INCP
    0U,	// EE_VSMULAS_S8_QACC
    22146U,	// EE_VSMULAS_S8_QACC_LD_INCP
    0U,	// EE_VSR_32
    4U,	// EE_VST_128_IP
    10U,	// EE_VST_128_XP
    4U,	// EE_VST_H_64_IP
    10U,	// EE_VST_H_64_XP
    4U,	// EE_VST_L_64_IP
    10U,	// EE_VST_L_64_XP
    8U,	// EE_VSUBS_S16
    2U,	// EE_VSUBS_S16_LD_INCP
    12U,	// EE_VSUBS_S16_ST_INCP
    8U,	// EE_VSUBS_S32
    2U,	// EE_VSUBS_S32_LD_INCP
    12U,	// EE_VSUBS_S32_ST_INCP
    8U,	// EE_VSUBS_S8
    2U,	// EE_VSUBS_S8_LD_INCP
    12U,	// EE_VSUBS_S8_ST_INCP
    0U,	// EE_VUNZIP_16
    0U,	// EE_VUNZIP_32
    0U,	// EE_VUNZIP_8
    0U,	// EE_VZIP_16
    0U,	// EE_VZIP_32
    0U,	// EE_VZIP_8
    0U,	// EE_WR_MASK_GPIO_OUT
    8U,	// EE_XORQ
    0U,	// EE_ZERO_ACCX
    0U,	// EE_ZERO_Q
    0U,	// EE_ZERO_QACC
    0U,	// ENTRY
    0U,	// ESYNC
    0U,	// EXCW
    899U,	// EXTUI
    0U,	// EXTW
    3U,	// FLOAT_S
    3U,	// FLOOR_S
    0U,	// GET_GPIO_IN
    0U,	// ILL
    0U,	// ILL_N
    0U,	// ISYNC
    0U,	// J
    0U,	// JX
    0U,	// L16SI
    0U,	// L16UI
    5U,	// L32E
    0U,	// L32I
    0U,	// L32I_N
    0U,	// L32R
    0U,	// L8UI
    0U,	// LDDEC
    0U,	// LDINC
    0U,	// LEA_ADD
    0U,	// LOOP
    0U,	// LOOPGTZ
    0U,	// LOOPNEZ
    0U,	// LSI
    5U,	// LSIP
    8U,	// LSX
    10U,	// LSXP
    10U,	// MADDN_S
    10U,	// MADD_S
    8U,	// MAX
    8U,	// MAXU
    0U,	// MEMW
    8U,	// MIN
    8U,	// MINU
    0U,	// MKDADJ_S
    0U,	// MKSADJ_S
    8U,	// MOVEQZ
    10U,	// MOVEQZ_S
    10U,	// MOVF
    10U,	// MOVF_S
    8U,	// MOVGEZ
    10U,	// MOVGEZ_S
    0U,	// MOVI
    0U,	// MOVI_N
    8U,	// MOVLTZ
    10U,	// MOVLTZ_S
    8U,	// MOVNEZ
    10U,	// MOVNEZ_S
    0U,	// MOVSP
    10U,	// MOVT
    10U,	// MOVT_S
    0U,	// MOV_N
    0U,	// MOV_S
    10U,	// MSUB_S
    8U,	// MUL16S
    8U,	// MUL16U
    0U,	// MULA_AA_HH
    0U,	// MULA_AA_HL
    0U,	// MULA_AA_LH
    0U,	// MULA_AA_LL
    0U,	// MULA_AD_HH
    0U,	// MULA_AD_HL
    0U,	// MULA_AD_LH
    0U,	// MULA_AD_LL
    0U,	// MULA_DA_HH
    642U,	// MULA_DA_HH_LDDEC
    642U,	// MULA_DA_HH_LDINC
    0U,	// MULA_DA_HL
    642U,	// MULA_DA_HL_LDDEC
    642U,	// MULA_DA_HL_LDINC
    0U,	// MULA_DA_LH
    642U,	// MULA_DA_LH_LDDEC
    642U,	// MULA_DA_LH_LDINC
    0U,	// MULA_DA_LL
    642U,	// MULA_DA_LL_LDDEC
    642U,	// MULA_DA_LL_LDINC
    0U,	// MULA_DD_HH
    642U,	// MULA_DD_HH_LDDEC
    642U,	// MULA_DD_HH_LDINC
    0U,	// MULA_DD_HL
    642U,	// MULA_DD_HL_LDDEC
    642U,	// MULA_DD_HL_LDINC
    0U,	// MULA_DD_LH
    642U,	// MULA_DD_LH_LDDEC
    642U,	// MULA_DD_LH_LDINC
    0U,	// MULA_DD_LL
    642U,	// MULA_DD_LL_LDDEC
    642U,	// MULA_DD_LL_LDINC
    8U,	// MULL
    8U,	// MULSH
    0U,	// MULS_AA_HH
    0U,	// MULS_AA_HL
    0U,	// MULS_AA_LH
    0U,	// MULS_AA_LL
    0U,	// MULS_AD_HH
    0U,	// MULS_AD_HL
    0U,	// MULS_AD_LH
    0U,	// MULS_AD_LL
    0U,	// MULS_DA_HH
    0U,	// MULS_DA_HL
    0U,	// MULS_DA_LH
    0U,	// MULS_DA_LL
    0U,	// MULS_DD_HH
    0U,	// MULS_DD_HL
    0U,	// MULS_DD_LH
    0U,	// MULS_DD_LL
    8U,	// MULUH
    0U,	// MUL_AA_HH
    0U,	// MUL_AA_HL
    0U,	// MUL_AA_LH
    0U,	// MUL_AA_LL
    0U,	// MUL_AD_HH
    0U,	// MUL_AD_HL
    0U,	// MUL_AD_LH
    0U,	// MUL_AD_LL
    0U,	// MUL_DA_HH
    0U,	// MUL_DA_HL
    0U,	// MUL_DA_LH
    0U,	// MUL_DA_LL
    0U,	// MUL_DD_HH
    0U,	// MUL_DD_HL
    0U,	// MUL_DD_LH
    0U,	// MUL_DD_LL
    8U,	// MUL_S
    0U,	// NEG
    0U,	// NEG_S
    0U,	// NEXP01_S
    0U,	// NOP
    0U,	// NSA
    0U,	// NSAU
    8U,	// OEQ_S
    8U,	// OLE_S
    8U,	// OLT_S
    8U,	// OR
    8U,	// ORB
    8U,	// ORBC
    8U,	// QUOS
    8U,	// QUOU
    0U,	// RECIP0_S
    8U,	// REMS
    8U,	// REMU
    0U,	// RER
    0U,	// RET
    0U,	// RETW
    0U,	// RETW_N
    0U,	// RET_N
    0U,	// RFDE
    0U,	// RFE
    0U,	// RFI
    0U,	// RFR
    0U,	// RFWO
    0U,	// RFWU
    0U,	// ROTW
    3U,	// ROUND_S
    0U,	// RSIL
    0U,	// RSQRT0_S
    0U,	// RSR
    0U,	// RSYNC
    0U,	// RUR
    0U,	// RUR_ACCX_0
    0U,	// RUR_ACCX_1
    0U,	// RUR_AE_BITHEAD
    0U,	// RUR_AE_BITPTR
    0U,	// RUR_AE_BITSUSED
    0U,	// RUR_AE_CBEGIN0
    0U,	// RUR_AE_CEND0
    0U,	// RUR_AE_CWRAP
    0U,	// RUR_AE_CW_SD_NO
    0U,	// RUR_AE_FIRST_TS
    0U,	// RUR_AE_NEXTOFFSET
    0U,	// RUR_AE_OVERFLOW
    0U,	// RUR_AE_OVF_SAR
    0U,	// RUR_AE_SAR
    0U,	// RUR_AE_SEARCHDONE
    0U,	// RUR_AE_TABLESIZE
    0U,	// RUR_AE_TS_FTS_BU_BP
    0U,	// RUR_FFT_BIT_WIDTH
    0U,	// RUR_GPIO_OUT
    0U,	// RUR_QACC_H_0
    0U,	// RUR_QACC_H_1
    0U,	// RUR_QACC_H_2
    0U,	// RUR_QACC_H_3
    0U,	// RUR_QACC_H_4
    0U,	// RUR_QACC_L_0
    0U,	// RUR_QACC_L_1
    0U,	// RUR_QACC_L_2
    0U,	// RUR_QACC_L_3
    0U,	// RUR_QACC_L_4
    0U,	// RUR_SAR_BYTE
    0U,	// RUR_UA_STATE_0
    0U,	// RUR_UA_STATE_1
    0U,	// RUR_UA_STATE_2
    0U,	// RUR_UA_STATE_3
    0U,	// S16I
    0U,	// S32C1I
    5U,	// S32E
    0U,	// S32I
    0U,	// S32I_N
    0U,	// S8I
    0U,	// SET_BIT_GPIO_OUT
    3U,	// SEXT
    0U,	// SIMCALL
    0U,	// SLL
    5U,	// SLLI
    0U,	// SQRT0_S
    0U,	// SRA
    11U,	// SRAI
    8U,	// SRC
    0U,	// SRL
    11U,	// SRLI
    0U,	// SSA8L
    0U,	// SSAI
    0U,	// SSI
    5U,	// SSIP
    0U,	// SSL
    0U,	// SSR
    8U,	// SSX
    10U,	// SSXP
    8U,	// SUB
    8U,	// SUBX2
    8U,	// SUBX4
    8U,	// SUBX8
    8U,	// SUB_S
    0U,	// SYSCALL
    3U,	// TRUNC_S
    8U,	// UEQ_S
    3U,	// UFLOAT_S
    8U,	// ULE_S
    8U,	// ULT_S
    0U,	// UMUL_AA_HH
    0U,	// UMUL_AA_HL
    0U,	// UMUL_AA_LH
    0U,	// UMUL_AA_LL
    8U,	// UN_S
    3U,	// UTRUNC_S
    0U,	// WAITI
    0U,	// WDTLB
    0U,	// WER
    0U,	// WFR
    0U,	// WITLB
    0U,	// WR_MASK_GPIO_OUT
    0U,	// WSR
    0U,	// WUR
    0U,	// WUR_ACCX_0
    0U,	// WUR_ACCX_1
    0U,	// WUR_AE_BITHEAD
    0U,	// WUR_AE_BITPTR
    0U,	// WUR_AE_BITSUSED
    0U,	// WUR_AE_CBEGIN0
    0U,	// WUR_AE_CEND0
    0U,	// WUR_AE_CWRAP
    0U,	// WUR_AE_CW_SD_NO
    0U,	// WUR_AE_FIRST_TS
    0U,	// WUR_AE_NEXTOFFSET
    0U,	// WUR_AE_OVERFLOW
    0U,	// WUR_AE_OVF_SAR
    0U,	// WUR_AE_SAR
    0U,	// WUR_AE_SEARCHDONE
    0U,	// WUR_AE_TABLESIZE
    0U,	// WUR_AE_TS_FTS_BU_BP
    0U,	// WUR_FCR
    0U,	// WUR_FFT_BIT_WIDTH
    0U,	// WUR_FSR
    0U,	// WUR_GPIO_OUT
    0U,	// WUR_QACC_H_0
    0U,	// WUR_QACC_H_1
    0U,	// WUR_QACC_H_2
    0U,	// WUR_QACC_H_3
    0U,	// WUR_QACC_H_4
    0U,	// WUR_QACC_L_0
    0U,	// WUR_QACC_L_1
    0U,	// WUR_QACC_L_2
    0U,	// WUR_QACC_L_3
    0U,	// WUR_QACC_L_4
    0U,	// WUR_SAR_BYTE
    0U,	// WUR_UA_STATE_0
    0U,	// WUR_UA_STATE_1
    0U,	// WUR_UA_STATE_2
    0U,	// WUR_UA_STATE_3
    8U,	// XOR
    8U,	// XORB
    0U,	// XSR
    0U,	// _L32I
    0U,	// _L32I_N
    0U,	// _MOVI
    0U,	// _S32I
    0U,	// _S32I_N
    5U,	// _SLLI
    3U,	// _SRLI
    0U,	// mv_QR
  };

  static const uint8_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_VALUE_LIST
    0U,	// DBG_INSTR_REF
    0U,	// DBG_PHI
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// ARITH_FENCE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// MEMBARRIER
    0U,	// JUMP_TABLE_DEBUG_INFO
    0U,	// G_ASSERT_SEXT
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ASSERT_ALIGN
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_SDIVREM
    0U,	// G_UDIVREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_CONSTANT_POOL
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_CONSTANT_FOLD_BARRIER
    0U,	// G_INTRINSIC_FPTRUNC_ROUND
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_ATOMICRMW_FMAX
    0U,	// G_ATOMICRMW_FMIN
    0U,	// G_ATOMICRMW_UINC_WRAP
    0U,	// G_ATOMICRMW_UDEC_WRAP
    0U,	// G_FENCE
    0U,	// G_PREFETCH
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INVOKE_REGION_START
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_INTRINSIC_CONVERGENT
    0U,	// G_INTRINSIC_CONVERGENT_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ROTR
    0U,	// G_ROTL
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FEXP10
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FLDEXP
    0U,	// G_FFREXP
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_IS_FPCLASS
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_GET_FPENV
    0U,	// G_SET_FPENV
    0U,	// G_RESET_FPENV
    0U,	// G_GET_FPMODE
    0U,	// G_SET_FPMODE
    0U,	// G_RESET_FPMODE
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_LROUND
    0U,	// G_LLROUND
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STACKSAVE
    0U,	// G_STACKRESTORE
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_STRICT_FLDEXP
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMCPY_INLINE
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_BZERO
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_FMAXIMUM
    0U,	// G_VECREDUCE_FMINIMUM
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// G_SBFX
    0U,	// G_UBFX
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ATOMIC_CMP_SWAP_16_P
    0U,	// ATOMIC_CMP_SWAP_32_P
    0U,	// ATOMIC_CMP_SWAP_8_P
    0U,	// ATOMIC_LOAD_ADD_16_P
    0U,	// ATOMIC_LOAD_ADD_32_P
    0U,	// ATOMIC_LOAD_ADD_8_P
    0U,	// ATOMIC_LOAD_AND_16_P
    0U,	// ATOMIC_LOAD_AND_32_P
    0U,	// ATOMIC_LOAD_AND_8_P
    0U,	// ATOMIC_LOAD_MAX_16_P
    0U,	// ATOMIC_LOAD_MAX_32_P
    0U,	// ATOMIC_LOAD_MAX_8_P
    0U,	// ATOMIC_LOAD_MIN_16_P
    0U,	// ATOMIC_LOAD_MIN_32_P
    0U,	// ATOMIC_LOAD_MIN_8_P
    0U,	// ATOMIC_LOAD_NAND_16_P
    0U,	// ATOMIC_LOAD_NAND_32_P
    0U,	// ATOMIC_LOAD_NAND_8_P
    0U,	// ATOMIC_LOAD_OR_16_P
    0U,	// ATOMIC_LOAD_OR_32_P
    0U,	// ATOMIC_LOAD_OR_8_P
    0U,	// ATOMIC_LOAD_SUB_16_P
    0U,	// ATOMIC_LOAD_SUB_32_P
    0U,	// ATOMIC_LOAD_SUB_8_P
    0U,	// ATOMIC_LOAD_UMAX_16_P
    0U,	// ATOMIC_LOAD_UMAX_32_P
    0U,	// ATOMIC_LOAD_UMAX_8_P
    0U,	// ATOMIC_LOAD_UMIN_16_P
    0U,	// ATOMIC_LOAD_UMIN_32_P
    0U,	// ATOMIC_LOAD_UMIN_8_P
    0U,	// ATOMIC_LOAD_XOR_16_P
    0U,	// ATOMIC_LOAD_XOR_32_P
    0U,	// ATOMIC_LOAD_XOR_8_P
    0U,	// ATOMIC_SWAP_16_P
    0U,	// ATOMIC_SWAP_32_P
    0U,	// ATOMIC_SWAP_8_P
    0U,	// BRCC_FP
    0U,	// BR_JT
    0U,	// CONSTPOOL_ENTRY
    0U,	// EE_ANDQ_P
    0U,	// EE_BITREV_P
    0U,	// EE_CMUL_S16_LD_INCP_P
    0U,	// EE_CMUL_S16_P
    0U,	// EE_CMUL_S16_ST_INCP_P
    1U,	// EE_FFT_AMS_S16_LD_INCP_P
    1U,	// EE_FFT_AMS_S16_LD_INCP_UAUP_P
    1U,	// EE_FFT_AMS_S16_LD_R32_DECP_P
    1U,	// EE_FFT_AMS_S16_ST_INCP_P
    17U,	// EE_FFT_CMUL_S16_LD_XP_P
    2U,	// EE_FFT_CMUL_S16_ST_XP_P
    0U,	// EE_FFT_R2BF_S16_P
    0U,	// EE_FFT_R2BF_S16_ST_INCP_P
    0U,	// EE_FFT_VST_R32_DECP_P
    3U,	// EE_LDF_128_IP_P
    4U,	// EE_LDF_128_XP_P
    0U,	// EE_LDF_64_IP_P
    0U,	// EE_LDF_64_XP_P
    0U,	// EE_LDQA_S16_128_IP_P
    0U,	// EE_LDQA_S16_128_XP_P
    0U,	// EE_LDQA_S8_128_IP_P
    0U,	// EE_LDQA_S8_128_XP_P
    0U,	// EE_LDQA_U16_128_IP_P
    0U,	// EE_LDQA_U16_128_XP_P
    0U,	// EE_LDQA_U8_128_IP_P
    0U,	// EE_LDQA_U8_128_XP_P
    0U,	// EE_LDXQ_32_P
    0U,	// EE_LD_128_USAR_IP_P
    0U,	// EE_LD_128_USAR_XP_P
    0U,	// EE_LD_ACCX_IP_P
    0U,	// EE_LD_QACC_H_H_32_IP_P
    0U,	// EE_LD_QACC_H_L_128_IP_P
    0U,	// EE_LD_QACC_L_H_32_IP_P
    0U,	// EE_LD_QACC_L_L_128_IP_P
    0U,	// EE_LD_UA_STATE_IP_P
    0U,	// EE_MOVI_32_A_P
    0U,	// EE_MOVI_32_Q_P
    0U,	// EE_MOV_S16_QACC_P
    0U,	// EE_MOV_S8_QACC_P
    0U,	// EE_MOV_U16_QACC_P
    0U,	// EE_MOV_U8_QACC_P
    0U,	// EE_NOTQ_P
    0U,	// EE_ORQ_P
    0U,	// EE_SLCI_2Q_P
    0U,	// EE_SLCXXP_2Q_P
    0U,	// EE_SRCI_2Q_P
    0U,	// EE_SRCMB_S16_QACC_P
    0U,	// EE_SRCMB_S8_QACC_P
    0U,	// EE_SRCQ_128_ST_INCP_P
    0U,	// EE_SRCXXP_2Q_P
    0U,	// EE_SRC_Q_LD_IP_P
    0U,	// EE_SRC_Q_LD_XP_P
    0U,	// EE_SRC_Q_P
    0U,	// EE_SRC_Q_QUP_P
    0U,	// EE_SRS_ACCX_P
    3U,	// EE_STF_128_IP_P
    4U,	// EE_STF_128_XP_P
    0U,	// EE_STF_64_IP_P
    0U,	// EE_STF_64_XP_P
    0U,	// EE_STXQ_32_P
    0U,	// EE_ST_ACCX_IP_P
    0U,	// EE_ST_QACC_H_H_32_IP_P
    0U,	// EE_ST_QACC_H_L_128_IP_P
    0U,	// EE_ST_QACC_L_H_32_IP_P
    0U,	// EE_ST_QACC_L_L_128_IP_P
    0U,	// EE_ST_UA_STATE_IP_P
    0U,	// EE_VADDS_S16_LD_INCP_P
    0U,	// EE_VADDS_S16_P
    0U,	// EE_VADDS_S16_ST_INCP_P
    0U,	// EE_VADDS_S32_LD_INCP_P
    0U,	// EE_VADDS_S32_P
    0U,	// EE_VADDS_S32_ST_INCP_P
    0U,	// EE_VADDS_S8_LD_INCP_P
    0U,	// EE_VADDS_S8_P
    0U,	// EE_VADDS_S8_ST_INCP_P
    0U,	// EE_VCMP_EQ_S16_P
    0U,	// EE_VCMP_EQ_S32_P
    0U,	// EE_VCMP_EQ_S8_P
    0U,	// EE_VCMP_GT_S16_P
    0U,	// EE_VCMP_GT_S32_P
    0U,	// EE_VCMP_GT_S8_P
    0U,	// EE_VCMP_LT_S16_P
    0U,	// EE_VCMP_LT_S32_P
    0U,	// EE_VCMP_LT_S8_P
    0U,	// EE_VLDBC_16_IP_P
    0U,	// EE_VLDBC_16_P
    0U,	// EE_VLDBC_16_XP_P
    0U,	// EE_VLDBC_32_IP_P
    0U,	// EE_VLDBC_32_P
    0U,	// EE_VLDBC_32_XP_P
    0U,	// EE_VLDBC_8_IP_P
    0U,	// EE_VLDBC_8_P
    0U,	// EE_VLDBC_8_XP_P
    0U,	// EE_VLDHBC_16_INCP_P
    0U,	// EE_VLD_128_IP_P
    0U,	// EE_VLD_128_XP_P
    0U,	// EE_VLD_H_64_IP_P
    0U,	// EE_VLD_H_64_XP_P
    0U,	// EE_VLD_L_64_IP_P
    0U,	// EE_VLD_L_64_XP_P
    0U,	// EE_VMAX_S16_LD_INCP_P
    0U,	// EE_VMAX_S16_P
    0U,	// EE_VMAX_S16_ST_INCP_P
    0U,	// EE_VMAX_S32_LD_INCP_P
    0U,	// EE_VMAX_S32_P
    0U,	// EE_VMAX_S32_ST_INCP_P
    0U,	// EE_VMAX_S8_LD_INCP_P
    0U,	// EE_VMAX_S8_P
    0U,	// EE_VMAX_S8_ST_INCP_P
    0U,	// EE_VMIN_S16_LD_INCP_P
    0U,	// EE_VMIN_S16_P
    0U,	// EE_VMIN_S16_ST_INCP_P
    0U,	// EE_VMIN_S32_LD_INCP_P
    0U,	// EE_VMIN_S32_P
    0U,	// EE_VMIN_S32_ST_INCP_P
    0U,	// EE_VMIN_S8_LD_INCP_P
    0U,	// EE_VMIN_S8_P
    0U,	// EE_VMIN_S8_ST_INCP_P
    0U,	// EE_VMULAS_S16_ACCX_LD_IP_P
    0U,	// EE_VMULAS_S16_ACCX_LD_IP_QUP_P
    0U,	// EE_VMULAS_S16_ACCX_LD_XP_P
    65U,	// EE_VMULAS_S16_ACCX_LD_XP_QUP_P
    0U,	// EE_VMULAS_S16_ACCX_P
    0U,	// EE_VMULAS_S16_QACC_LDBC_INCP_P
    9U,	// EE_VMULAS_S16_QACC_LDBC_INCP_QUP_P
    0U,	// EE_VMULAS_S16_QACC_LD_IP_P
    0U,	// EE_VMULAS_S16_QACC_LD_IP_QUP_P
    0U,	// EE_VMULAS_S16_QACC_LD_XP_P
    65U,	// EE_VMULAS_S16_QACC_LD_XP_QUP_P
    0U,	// EE_VMULAS_S16_QACC_P
    0U,	// EE_VMULAS_S8_ACCX_LD_IP_P
    0U,	// EE_VMULAS_S8_ACCX_LD_IP_QUP_P
    0U,	// EE_VMULAS_S8_ACCX_LD_XP_P
    65U,	// EE_VMULAS_S8_ACCX_LD_XP_QUP_P
    0U,	// EE_VMULAS_S8_ACCX_P
    0U,	// EE_VMULAS_S8_QACC_LDBC_INCP_P
    9U,	// EE_VMULAS_S8_QACC_LDBC_INCP_QUP_P
    0U,	// EE_VMULAS_S8_QACC_LD_IP_P
    0U,	// EE_VMULAS_S8_QACC_LD_IP_QUP_P
    0U,	// EE_VMULAS_S8_QACC_LD_XP_P
    65U,	// EE_VMULAS_S8_QACC_LD_XP_QUP_P
    0U,	// EE_VMULAS_S8_QACC_P
    0U,	// EE_VMULAS_U16_ACCX_LD_IP_P
    0U,	// EE_VMULAS_U16_ACCX_LD_IP_QUP_P
    0U,	// EE_VMULAS_U16_ACCX_LD_XP_P
    65U,	// EE_VMULAS_U16_ACCX_LD_XP_QUP_P
    0U,	// EE_VMULAS_U16_ACCX_P
    0U,	// EE_VMULAS_U16_QACC_LDBC_INCP_P
    9U,	// EE_VMULAS_U16_QACC_LDBC_INCP_QUP_P
    0U,	// EE_VMULAS_U16_QACC_LD_IP_P
    0U,	// EE_VMULAS_U16_QACC_LD_IP_QUP_P
    0U,	// EE_VMULAS_U16_QACC_LD_XP_P
    65U,	// EE_VMULAS_U16_QACC_LD_XP_QUP_P
    0U,	// EE_VMULAS_U16_QACC_P
    0U,	// EE_VMULAS_U8_ACCX_LD_IP_P
    0U,	// EE_VMULAS_U8_ACCX_LD_IP_QUP_P
    0U,	// EE_VMULAS_U8_ACCX_LD_XP_P
    65U,	// EE_VMULAS_U8_ACCX_LD_XP_QUP_P
    0U,	// EE_VMULAS_U8_ACCX_P
    0U,	// EE_VMULAS_U8_QACC_LDBC_INCP_P
    9U,	// EE_VMULAS_U8_QACC_LDBC_INCP_QUP_P
    0U,	// EE_VMULAS_U8_QACC_LD_IP_P
    0U,	// EE_VMULAS_U8_QACC_LD_IP_QUP_P
    0U,	// EE_VMULAS_U8_QACC_LD_XP_P
    65U,	// EE_VMULAS_U8_QACC_LD_XP_QUP_P
    0U,	// EE_VMULAS_U8_QACC_P
    0U,	// EE_VMUL_S16_LD_INCP_P
    0U,	// EE_VMUL_S16_P
    0U,	// EE_VMUL_S16_ST_INCP_P
    0U,	// EE_VMUL_S8_LD_INCP_P
    0U,	// EE_VMUL_S8_P
    0U,	// EE_VMUL_S8_ST_INCP_P
    0U,	// EE_VMUL_U16_LD_INCP_P
    0U,	// EE_VMUL_U16_P
    0U,	// EE_VMUL_U16_ST_INCP_P
    0U,	// EE_VMUL_U8_LD_INCP_P
    0U,	// EE_VMUL_U8_P
    0U,	// EE_VMUL_U8_ST_INCP_P
    0U,	// EE_VPRELU_S16_P
    0U,	// EE_VPRELU_S8_P
    0U,	// EE_VRELU_S16_P
    0U,	// EE_VRELU_S8_P
    0U,	// EE_VSL_32_P
    0U,	// EE_VSMULAS_S16_QACC_LD_INCP_P
    0U,	// EE_VSMULAS_S16_QACC_P
    0U,	// EE_VSMULAS_S8_QACC_LD_INCP_P
    0U,	// EE_VSMULAS_S8_QACC_P
    0U,	// EE_VSR_32_P
    0U,	// EE_VST_128_IP_P
    0U,	// EE_VST_128_XP_P
    0U,	// EE_VST_H_64_IP_P
    0U,	// EE_VST_H_64_XP_P
    0U,	// EE_VST_L_64_IP_P
    0U,	// EE_VST_L_64_XP_P
    0U,	// EE_VSUBS_S16_LD_INCP_P
    0U,	// EE_VSUBS_S16_P
    0U,	// EE_VSUBS_S16_ST_INCP_P
    0U,	// EE_VSUBS_S32_LD_INCP_P
    0U,	// EE_VSUBS_S32_P
    0U,	// EE_VSUBS_S32_ST_INCP_P
    0U,	// EE_VSUBS_S8_LD_INCP_P
    0U,	// EE_VSUBS_S8_P
    0U,	// EE_VSUBS_S8_ST_INCP_P
    0U,	// EE_VUNZIP_16_P
    0U,	// EE_VUNZIP_32_P
    0U,	// EE_VUNZIP_8_P
    0U,	// EE_VZIP_16_P
    0U,	// EE_VZIP_32_P
    0U,	// EE_VZIP_8_P
    0U,	// EE_XORQ_P
    0U,	// EE_ZERO_ACCX_P
    0U,	// EE_ZERO_QACC_P
    0U,	// EE_ZERO_Q_P
    0U,	// EXTUI_BR2_P
    0U,	// EXTUI_BR4_P
    0U,	// EXTUI_BR_P
    0U,	// L8I_P
    0U,	// LDDEC_P
    0U,	// LDINC_P
    0U,	// LOOPBR
    0U,	// LOOPDEC
    0U,	// LOOPEND
    0U,	// LOOPINIT
    0U,	// LOOPSTART
    0U,	// MOVBA2_P
    0U,	// MOVBA2_P2
    0U,	// MOVBA4_P
    0U,	// MOVBA4_P2
    0U,	// MOVBA_P
    0U,	// MOVBA_P2
    0U,	// MULA_DA_HH_LDDEC_P
    0U,	// MULA_DA_HH_LDINC_P
    0U,	// MULA_DA_HL_LDDEC_P
    0U,	// MULA_DA_HL_LDINC_P
    0U,	// MULA_DA_LH_LDDEC_P
    0U,	// MULA_DA_LH_LDINC_P
    0U,	// MULA_DA_LL_LDDEC_P
    0U,	// MULA_DA_LL_LDINC_P
    0U,	// MULA_DD_HH_LDDEC_P
    0U,	// MULA_DD_HH_LDINC_P
    0U,	// MULA_DD_HL_LDDEC_P
    0U,	// MULA_DD_HL_LDINC_P
    0U,	// MULA_DD_LH_LDDEC_P
    0U,	// MULA_DD_LH_LDINC_P
    0U,	// MULA_DD_LL_LDDEC_P
    0U,	// MULA_DD_LL_LDINC_P
    0U,	// RESTORE_BOOL
    4U,	// SELECT
    4U,	// SELECT_CC_FP_FP
    4U,	// SELECT_CC_FP_INT
    4U,	// SELECT_CC_INT_FP
    0U,	// SLLI_BR_P
    0U,	// SLL_P
    0U,	// SPILL_BOOL
    0U,	// SRA_P
    0U,	// SRL_P
    0U,	// WSR_ACCHI_P
    0U,	// WSR_ACCLO_P
    0U,	// WSR_M0_P
    0U,	// WSR_M1_P
    0U,	// WSR_M2_P
    0U,	// WSR_M3_P
    0U,	// XSR_ACCHI_P
    0U,	// XSR_ACCLO_P
    0U,	// XSR_M0_P
    0U,	// XSR_M1_P
    0U,	// XSR_M2_P
    0U,	// XSR_M3_P
    0U,	// mv_QR_P
    0U,	// ABS
    0U,	// ABS_S
    0U,	// ADD
    0U,	// ADDEXPM_S
    0U,	// ADDEXP_S
    0U,	// ADDI
    0U,	// ADDI_N
    0U,	// ADDMI
    0U,	// ADDX2
    0U,	// ADDX4
    0U,	// ADDX8
    0U,	// ADD_N
    0U,	// ADD_S
    0U,	// AE_ABS16S
    0U,	// AE_ABS24S
    0U,	// AE_ABS32
    0U,	// AE_ABS32S
    0U,	// AE_ABS64
    0U,	// AE_ABS64S
    0U,	// AE_ADD16
    0U,	// AE_ADD16S
    0U,	// AE_ADD24S
    0U,	// AE_ADD32
    0U,	// AE_ADD32S
    0U,	// AE_ADD32_HL_LH
    0U,	// AE_ADD64
    0U,	// AE_ADD64S
    0U,	// AE_ADDBRBA32
    0U,	// AE_ADDSUB32
    0U,	// AE_ADDSUB32S
    0U,	// AE_AND
    0U,	// AE_CVT32X2F16_10
    0U,	// AE_CVT32X2F16_32
    0U,	// AE_CVT48A32
    0U,	// AE_CVT64A32
    0U,	// AE_CVT64F32_H
    0U,	// AE_CVTA32F24S_H
    0U,	// AE_CVTA32F24S_L
    0U,	// AE_CVTQ56A32S
    0U,	// AE_CVTQ56P32S_H
    0U,	// AE_CVTQ56P32S_L
    0U,	// AE_DB
    0U,	// AE_DBI
    0U,	// AE_DBI_IC
    0U,	// AE_DBI_IP
    0U,	// AE_DB_IC
    0U,	// AE_DB_IP
    0U,	// AE_DIV64D32_H
    0U,	// AE_DIV64D32_L
    0U,	// AE_EQ16
    0U,	// AE_EQ32
    0U,	// AE_EQ64
    0U,	// AE_L16M_I
    0U,	// AE_L16M_IU
    0U,	// AE_L16M_X
    0U,	// AE_L16M_XC
    0U,	// AE_L16M_XU
    0U,	// AE_L16X2M_I
    0U,	// AE_L16X2M_IU
    0U,	// AE_L16X2M_X
    0U,	// AE_L16X2M_XC
    0U,	// AE_L16X2M_XU
    0U,	// AE_L16X4_I
    0U,	// AE_L16X4_IP
    0U,	// AE_L16X4_RIC
    0U,	// AE_L16X4_RIP
    0U,	// AE_L16X4_X
    0U,	// AE_L16X4_XC
    0U,	// AE_L16X4_XP
    0U,	// AE_L16_I
    0U,	// AE_L16_IP
    0U,	// AE_L16_X
    0U,	// AE_L16_XC
    0U,	// AE_L16_XP
    0U,	// AE_L32F24_I
    0U,	// AE_L32F24_IP
    0U,	// AE_L32F24_X
    0U,	// AE_L32F24_XC
    0U,	// AE_L32F24_XP
    0U,	// AE_L32M_I
    0U,	// AE_L32M_IU
    0U,	// AE_L32M_X
    0U,	// AE_L32M_XC
    0U,	// AE_L32M_XU
    0U,	// AE_L32X2F24_I
    0U,	// AE_L32X2F24_IP
    0U,	// AE_L32X2F24_RIC
    0U,	// AE_L32X2F24_RIP
    0U,	// AE_L32X2F24_X
    0U,	// AE_L32X2F24_XC
    0U,	// AE_L32X2F24_XP
    0U,	// AE_L32X2_I
    0U,	// AE_L32X2_IP
    0U,	// AE_L32X2_RIC
    0U,	// AE_L32X2_RIP
    0U,	// AE_L32X2_X
    0U,	// AE_L32X2_XC
    0U,	// AE_L32X2_XP
    0U,	// AE_L32_I
    0U,	// AE_L32_IP
    0U,	// AE_L32_X
    0U,	// AE_L32_XC
    0U,	// AE_L32_XP
    0U,	// AE_L64_I
    0U,	// AE_L64_IP
    0U,	// AE_L64_X
    0U,	// AE_L64_XC
    0U,	// AE_L64_XP
    0U,	// AE_LA16X4NEG_PC
    0U,	// AE_LA16X4POS_PC
    0U,	// AE_LA16X4_IC
    0U,	// AE_LA16X4_IP
    0U,	// AE_LA16X4_RIC
    0U,	// AE_LA16X4_RIP
    0U,	// AE_LA24NEG_PC
    0U,	// AE_LA24POS_PC
    0U,	// AE_LA24X2NEG_PC
    0U,	// AE_LA24X2POS_PC
    0U,	// AE_LA24X2_IC
    0U,	// AE_LA24X2_IP
    0U,	// AE_LA24X2_RIC
    0U,	// AE_LA24X2_RIP
    0U,	// AE_LA24_IC
    0U,	// AE_LA24_IP
    0U,	// AE_LA24_RIC
    0U,	// AE_LA24_RIP
    0U,	// AE_LA32X2F24_IC
    0U,	// AE_LA32X2F24_IP
    0U,	// AE_LA32X2F24_RIC
    0U,	// AE_LA32X2F24_RIP
    0U,	// AE_LA32X2NEG_PC
    0U,	// AE_LA32X2POS_PC
    0U,	// AE_LA32X2_IC
    0U,	// AE_LA32X2_IP
    0U,	// AE_LA32X2_RIC
    0U,	// AE_LA32X2_RIP
    0U,	// AE_LA64_PP
    0U,	// AE_LALIGN64_I
    0U,	// AE_LB
    0U,	// AE_LBI
    0U,	// AE_LBK
    0U,	// AE_LBKI
    0U,	// AE_LBS
    0U,	// AE_LBSI
    0U,	// AE_LE16
    0U,	// AE_LE32
    0U,	// AE_LE64
    0U,	// AE_LT16
    0U,	// AE_LT32
    0U,	// AE_LT64
    0U,	// AE_MAX32
    0U,	// AE_MAX64
    0U,	// AE_MAXABS32S
    0U,	// AE_MAXABS64S
    0U,	// AE_MIN32
    0U,	// AE_MIN64
    0U,	// AE_MINABS32S
    0U,	// AE_MINABS64S
    0U,	// AE_MOV
    0U,	// AE_MOVAD16_0
    0U,	// AE_MOVAD16_1
    0U,	// AE_MOVAD16_2
    0U,	// AE_MOVAD16_3
    0U,	// AE_MOVAD32_H
    0U,	// AE_MOVAD32_L
    0U,	// AE_MOVALIGN
    0U,	// AE_MOVDA16
    0U,	// AE_MOVDA16X2
    0U,	// AE_MOVDA32
    0U,	// AE_MOVDA32X2
    0U,	// AE_MOVF16X4
    0U,	// AE_MOVF32X2
    0U,	// AE_MOVF64
    0U,	// AE_MOVI
    0U,	// AE_MOVT16X4
    0U,	// AE_MOVT32X2
    0U,	// AE_MOVT64
    0U,	// AE_MUL16X4
    0U,	// AE_MUL32U_LL
    0U,	// AE_MUL32X16_H0
    0U,	// AE_MUL32X16_H0_S2
    0U,	// AE_MUL32X16_H1
    0U,	// AE_MUL32X16_H1_S2
    0U,	// AE_MUL32X16_H2
    0U,	// AE_MUL32X16_H2_S2
    0U,	// AE_MUL32X16_H3
    0U,	// AE_MUL32X16_H3_S2
    0U,	// AE_MUL32X16_L0
    0U,	// AE_MUL32X16_L0_S2
    0U,	// AE_MUL32X16_L1
    0U,	// AE_MUL32X16_L1_S2
    0U,	// AE_MUL32X16_L2
    0U,	// AE_MUL32X16_L2_S2
    0U,	// AE_MUL32X16_L3
    0U,	// AE_MUL32X16_L3_S2
    0U,	// AE_MUL32_HH
    0U,	// AE_MUL32_LH
    0U,	// AE_MUL32_LL
    0U,	// AE_MUL32_LL_S2
    0U,	// AE_MULA16X4
    0U,	// AE_MULA32U_LL
    0U,	// AE_MULA32X16_H0
    0U,	// AE_MULA32X16_H0_S2
    0U,	// AE_MULA32X16_H1
    0U,	// AE_MULA32X16_H1_S2
    0U,	// AE_MULA32X16_H2
    0U,	// AE_MULA32X16_H2_S2
    0U,	// AE_MULA32X16_H3
    0U,	// AE_MULA32X16_H3_S2
    0U,	// AE_MULA32X16_L0
    0U,	// AE_MULA32X16_L0_S2
    0U,	// AE_MULA32X16_L1
    0U,	// AE_MULA32X16_L1_S2
    0U,	// AE_MULA32X16_L2
    0U,	// AE_MULA32X16_L2_S2
    0U,	// AE_MULA32X16_L3
    0U,	// AE_MULA32X16_L3_S2
    0U,	// AE_MULA32_HH
    0U,	// AE_MULA32_LH
    0U,	// AE_MULA32_LL
    0U,	// AE_MULA32_LL_S2
    0U,	// AE_MULAAD24_HH_LL
    0U,	// AE_MULAAD24_HH_LL_S2
    0U,	// AE_MULAAD24_HL_LH
    0U,	// AE_MULAAD24_HL_LH_S2
    0U,	// AE_MULAAD32X16_H0_L1
    0U,	// AE_MULAAD32X16_H0_L1_S2
    0U,	// AE_MULAAD32X16_H1_L0
    0U,	// AE_MULAAD32X16_H1_L0_S2
    0U,	// AE_MULAAD32X16_H2_L3
    0U,	// AE_MULAAD32X16_H2_L3_S2
    0U,	// AE_MULAAD32X16_H3_L2
    0U,	// AE_MULAAD32X16_H3_L2_S2
    0U,	// AE_MULAAFD16SS_11_00
    0U,	// AE_MULAAFD16SS_11_00_S2
    0U,	// AE_MULAAFD16SS_13_02
    0U,	// AE_MULAAFD16SS_13_02_S2
    0U,	// AE_MULAAFD16SS_33_22
    0U,	// AE_MULAAFD16SS_33_22_S2
    0U,	// AE_MULAAFD24_HH_LL
    0U,	// AE_MULAAFD24_HH_LL_S2
    0U,	// AE_MULAAFD24_HL_LH
    0U,	// AE_MULAAFD24_HL_LH_S2
    0U,	// AE_MULAAFD32X16_H0_L1
    0U,	// AE_MULAAFD32X16_H0_L1_S2
    0U,	// AE_MULAAFD32X16_H1_L0
    0U,	// AE_MULAAFD32X16_H1_L0_S2
    0U,	// AE_MULAAFD32X16_H2_L3
    0U,	// AE_MULAAFD32X16_H2_L3_S2
    0U,	// AE_MULAAFD32X16_H3_L2
    0U,	// AE_MULAAFD32X16_H3_L2_S2
    0U,	// AE_MULAC24
    0U,	// AE_MULAC32X16_H
    0U,	// AE_MULAC32X16_L
    0U,	// AE_MULAF16SS_00
    0U,	// AE_MULAF16SS_00_S2
    0U,	// AE_MULAF16SS_10
    0U,	// AE_MULAF16SS_11
    0U,	// AE_MULAF16SS_20
    0U,	// AE_MULAF16SS_21
    0U,	// AE_MULAF16SS_22
    0U,	// AE_MULAF16SS_30
    0U,	// AE_MULAF16SS_31
    0U,	// AE_MULAF16SS_32
    0U,	// AE_MULAF16SS_33
    0U,	// AE_MULAF16X4SS
    0U,	// AE_MULAF32R_HH
    0U,	// AE_MULAF32R_LH
    0U,	// AE_MULAF32R_LL
    0U,	// AE_MULAF32R_LL_S2
    0U,	// AE_MULAF32S_HH
    0U,	// AE_MULAF32S_LH
    0U,	// AE_MULAF32S_LL
    0U,	// AE_MULAF32S_LL_S2
    0U,	// AE_MULAF32X16_H0
    0U,	// AE_MULAF32X16_H0_S2
    0U,	// AE_MULAF32X16_H1
    0U,	// AE_MULAF32X16_H1_S2
    0U,	// AE_MULAF32X16_H2
    0U,	// AE_MULAF32X16_H2_S2
    0U,	// AE_MULAF32X16_H3
    0U,	// AE_MULAF32X16_H3_S2
    0U,	// AE_MULAF32X16_L0
    0U,	// AE_MULAF32X16_L0_S2
    0U,	// AE_MULAF32X16_L1
    0U,	// AE_MULAF32X16_L1_S2
    0U,	// AE_MULAF32X16_L2
    0U,	// AE_MULAF32X16_L2_S2
    0U,	// AE_MULAF32X16_L3
    0U,	// AE_MULAF32X16_L3_S2
    0U,	// AE_MULAF48Q32SP16S_L
    0U,	// AE_MULAF48Q32SP16S_L_S2
    0U,	// AE_MULAF48Q32SP16U_L
    0U,	// AE_MULAF48Q32SP16U_L_S2
    0U,	// AE_MULAFC24RA
    0U,	// AE_MULAFC32X16RAS_H
    0U,	// AE_MULAFC32X16RAS_L
    0U,	// AE_MULAFD24X2_FIR_H
    0U,	// AE_MULAFD24X2_FIR_L
    0U,	// AE_MULAFD32X16X2_FIR_HH
    0U,	// AE_MULAFD32X16X2_FIR_HL
    0U,	// AE_MULAFD32X16X2_FIR_LH
    0U,	// AE_MULAFD32X16X2_FIR_LL
    0U,	// AE_MULAFP24X2R
    0U,	// AE_MULAFP24X2RA
    0U,	// AE_MULAFP24X2RA_S2
    0U,	// AE_MULAFP24X2R_S2
    0U,	// AE_MULAFP32X16X2RAS_H
    0U,	// AE_MULAFP32X16X2RAS_H_S2
    0U,	// AE_MULAFP32X16X2RAS_L
    0U,	// AE_MULAFP32X16X2RAS_L_S2
    0U,	// AE_MULAFP32X16X2RS_H
    0U,	// AE_MULAFP32X16X2RS_H_S2
    0U,	// AE_MULAFP32X16X2RS_L
    0U,	// AE_MULAFP32X16X2RS_L_S2
    0U,	// AE_MULAFP32X2RAS
    0U,	// AE_MULAFP32X2RS
    0U,	// AE_MULAFQ32SP24S_H_S2
    0U,	// AE_MULAFQ32SP24S_L_S2
    0U,	// AE_MULAP24X2
    0U,	// AE_MULAP24X2_S2
    0U,	// AE_MULAP32X16X2_H
    0U,	// AE_MULAP32X16X2_L
    0U,	// AE_MULAP32X2
    0U,	// AE_MULAQ32SP16S_L_S2
    0U,	// AE_MULAQ32SP16U_L_S2
    0U,	// AE_MULARFQ32SP24S_H_S2
    0U,	// AE_MULARFQ32SP24S_L_S2
    0U,	// AE_MULAS32F48P16S_HH
    0U,	// AE_MULAS32F48P16S_HH_S2
    0U,	// AE_MULAS32F48P16S_LH
    0U,	// AE_MULAS32F48P16S_LH_S2
    0U,	// AE_MULAS32F48P16S_LL
    0U,	// AE_MULAS32F48P16S_LL_S2
    0U,	// AE_MULASD24_HH_LL
    0U,	// AE_MULASD24_HH_LL_S2
    0U,	// AE_MULASD24_HL_LH
    0U,	// AE_MULASD24_HL_LH_S2
    0U,	// AE_MULASD32X16_H1_L0
    0U,	// AE_MULASD32X16_H1_L0_S2
    0U,	// AE_MULASD32X16_H3_L2
    0U,	// AE_MULASD32X16_H3_L2_S2
    0U,	// AE_MULASFD24_HH_LL
    0U,	// AE_MULASFD24_HH_LL_S2
    0U,	// AE_MULASFD24_HL_LH
    0U,	// AE_MULASFD24_HL_LH_S2
    0U,	// AE_MULASFD32X16_H1_L0
    0U,	// AE_MULASFD32X16_H1_L0_S2
    0U,	// AE_MULASFD32X16_H3_L2
    0U,	// AE_MULASFD32X16_H3_L2_S2
    0U,	// AE_MULC24
    0U,	// AE_MULC32X16_H
    0U,	// AE_MULC32X16_L
    0U,	// AE_MULF16SS_00
    0U,	// AE_MULF16SS_00_S2
    0U,	// AE_MULF16SS_10
    0U,	// AE_MULF16SS_11
    0U,	// AE_MULF16SS_20
    0U,	// AE_MULF16SS_21
    0U,	// AE_MULF16SS_22
    0U,	// AE_MULF16SS_30
    0U,	// AE_MULF16SS_31
    0U,	// AE_MULF16SS_32
    0U,	// AE_MULF16SS_33
    0U,	// AE_MULF16X4SS
    0U,	// AE_MULF32R_HH
    0U,	// AE_MULF32R_LH
    0U,	// AE_MULF32R_LL
    0U,	// AE_MULF32R_LL_S2
    0U,	// AE_MULF32S_HH
    0U,	// AE_MULF32S_LH
    0U,	// AE_MULF32S_LL
    0U,	// AE_MULF32S_LL_S2
    0U,	// AE_MULF32X16_H0
    0U,	// AE_MULF32X16_H0_S2
    0U,	// AE_MULF32X16_H1
    0U,	// AE_MULF32X16_H1_S2
    0U,	// AE_MULF32X16_H2
    0U,	// AE_MULF32X16_H2_S2
    0U,	// AE_MULF32X16_H3
    0U,	// AE_MULF32X16_H3_S2
    0U,	// AE_MULF32X16_L0
    0U,	// AE_MULF32X16_L0_S2
    0U,	// AE_MULF32X16_L1
    0U,	// AE_MULF32X16_L1_S2
    0U,	// AE_MULF32X16_L2
    0U,	// AE_MULF32X16_L2_S2
    0U,	// AE_MULF32X16_L3
    0U,	// AE_MULF32X16_L3_S2
    0U,	// AE_MULF48Q32SP16S_L
    0U,	// AE_MULF48Q32SP16S_L_S2
    0U,	// AE_MULF48Q32SP16U_L
    0U,	// AE_MULF48Q32SP16U_L_S2
    0U,	// AE_MULFC24RA
    0U,	// AE_MULFC32X16RAS_H
    0U,	// AE_MULFC32X16RAS_L
    0U,	// AE_MULFD24X2_FIR_H
    0U,	// AE_MULFD24X2_FIR_L
    0U,	// AE_MULFD32X16X2_FIR_HH
    0U,	// AE_MULFD32X16X2_FIR_HL
    0U,	// AE_MULFD32X16X2_FIR_LH
    0U,	// AE_MULFD32X16X2_FIR_LL
    0U,	// AE_MULFP16X4RAS
    0U,	// AE_MULFP16X4S
    0U,	// AE_MULFP24X2R
    0U,	// AE_MULFP24X2RA
    0U,	// AE_MULFP24X2RA_S2
    0U,	// AE_MULFP24X2R_S2
    0U,	// AE_MULFP32X16X2RAS_H
    0U,	// AE_MULFP32X16X2RAS_H_S2
    0U,	// AE_MULFP32X16X2RAS_L
    0U,	// AE_MULFP32X16X2RAS_L_S2
    0U,	// AE_MULFP32X16X2RS_H
    0U,	// AE_MULFP32X16X2RS_H_S2
    0U,	// AE_MULFP32X16X2RS_L
    0U,	// AE_MULFP32X16X2RS_L_S2
    0U,	// AE_MULFP32X2RAS
    0U,	// AE_MULFP32X2RS
    0U,	// AE_MULFQ32SP24S_H_S2
    0U,	// AE_MULFQ32SP24S_L_S2
    0U,	// AE_MULP24X2
    0U,	// AE_MULP24X2_S2
    0U,	// AE_MULP32X16X2_H
    0U,	// AE_MULP32X16X2_L
    0U,	// AE_MULP32X2
    0U,	// AE_MULQ32SP16S_L_S2
    0U,	// AE_MULQ32SP16U_L_S2
    0U,	// AE_MULRFQ32SP24S_H_S2
    0U,	// AE_MULRFQ32SP24S_L_S2
    0U,	// AE_MULS16X4
    0U,	// AE_MULS32F48P16S_HH
    0U,	// AE_MULS32F48P16S_HH_S2
    0U,	// AE_MULS32F48P16S_LH
    0U,	// AE_MULS32F48P16S_LH_S2
    0U,	// AE_MULS32F48P16S_LL
    0U,	// AE_MULS32F48P16S_LL_S2
    0U,	// AE_MULS32U_LL
    0U,	// AE_MULS32X16_H0
    0U,	// AE_MULS32X16_H0_S2
    0U,	// AE_MULS32X16_H1
    0U,	// AE_MULS32X16_H1_S2
    0U,	// AE_MULS32X16_H2
    0U,	// AE_MULS32X16_H2_S2
    0U,	// AE_MULS32X16_H3
    0U,	// AE_MULS32X16_H3_S2
    0U,	// AE_MULS32X16_L0
    0U,	// AE_MULS32X16_L0_S2
    0U,	// AE_MULS32X16_L1
    0U,	// AE_MULS32X16_L1_S2
    0U,	// AE_MULS32X16_L2
    0U,	// AE_MULS32X16_L2_S2
    0U,	// AE_MULS32X16_L3
    0U,	// AE_MULS32X16_L3_S2
    0U,	// AE_MULS32_HH
    0U,	// AE_MULS32_LH
    0U,	// AE_MULS32_LL
    0U,	// AE_MULSAD24_HH_LL
    0U,	// AE_MULSAD24_HH_LL_S2
    0U,	// AE_MULSAD32X16_H1_L0
    0U,	// AE_MULSAD32X16_H1_L0_S2
    0U,	// AE_MULSAD32X16_H3_L2
    0U,	// AE_MULSAD32X16_H3_L2_S2
    0U,	// AE_MULSAFD24_HH_LL
    0U,	// AE_MULSAFD24_HH_LL_S2
    0U,	// AE_MULSAFD32X16_H1_L0
    0U,	// AE_MULSAFD32X16_H1_L0_S2
    0U,	// AE_MULSAFD32X16_H3_L2
    0U,	// AE_MULSAFD32X16_H3_L2_S2
    0U,	// AE_MULSF16SS_00
    0U,	// AE_MULSF16SS_00_S2
    0U,	// AE_MULSF16SS_10
    0U,	// AE_MULSF16SS_11
    0U,	// AE_MULSF16SS_20
    0U,	// AE_MULSF16SS_21
    0U,	// AE_MULSF16SS_22
    0U,	// AE_MULSF16SS_30
    0U,	// AE_MULSF16SS_31
    0U,	// AE_MULSF16SS_32
    0U,	// AE_MULSF16SS_33
    0U,	// AE_MULSF16X4SS
    0U,	// AE_MULSF32R_HH
    0U,	// AE_MULSF32R_LH
    0U,	// AE_MULSF32R_LL
    0U,	// AE_MULSF32R_LL_S2
    0U,	// AE_MULSF32S_HH
    0U,	// AE_MULSF32S_LH
    0U,	// AE_MULSF32S_LL
    0U,	// AE_MULSF32X16_H0
    0U,	// AE_MULSF32X16_H0_S2
    0U,	// AE_MULSF32X16_H1
    0U,	// AE_MULSF32X16_H1_S2
    0U,	// AE_MULSF32X16_H2
    0U,	// AE_MULSF32X16_H2_S2
    0U,	// AE_MULSF32X16_H3
    0U,	// AE_MULSF32X16_H3_S2
    0U,	// AE_MULSF32X16_L0
    0U,	// AE_MULSF32X16_L0_S2
    0U,	// AE_MULSF32X16_L1
    0U,	// AE_MULSF32X16_L1_S2
    0U,	// AE_MULSF32X16_L2
    0U,	// AE_MULSF32X16_L2_S2
    0U,	// AE_MULSF32X16_L3
    0U,	// AE_MULSF32X16_L3_S2
    0U,	// AE_MULSF48Q32SP16S_L
    0U,	// AE_MULSF48Q32SP16S_L_S2
    0U,	// AE_MULSF48Q32SP16U_L
    0U,	// AE_MULSF48Q32SP16U_L_S2
    0U,	// AE_MULSFP24X2R
    0U,	// AE_MULSFP24X2RA
    0U,	// AE_MULSFP24X2RA_S2
    0U,	// AE_MULSFP24X2R_S2
    0U,	// AE_MULSFP32X16X2RAS_H
    0U,	// AE_MULSFP32X16X2RAS_H_S2
    0U,	// AE_MULSFP32X16X2RAS_L
    0U,	// AE_MULSFP32X16X2RAS_L_S2
    0U,	// AE_MULSFP32X16X2RS_H
    0U,	// AE_MULSFP32X16X2RS_H_S2
    0U,	// AE_MULSFP32X16X2RS_L
    0U,	// AE_MULSFP32X16X2RS_L_S2
    0U,	// AE_MULSFP32X2RAS
    0U,	// AE_MULSFP32X2RS
    0U,	// AE_MULSFQ32SP24S_H_S2
    0U,	// AE_MULSFQ32SP24S_L_S2
    0U,	// AE_MULSP24X2
    0U,	// AE_MULSP24X2_S2
    0U,	// AE_MULSP32X16X2_H
    0U,	// AE_MULSP32X16X2_L
    0U,	// AE_MULSP32X2
    0U,	// AE_MULSQ32SP16S_L_S2
    0U,	// AE_MULSQ32SP16U_L_S2
    0U,	// AE_MULSRFQ32SP24S_H_S2
    0U,	// AE_MULSRFQ32SP24S_L_S2
    0U,	// AE_MULSS32F48P16S_HH
    0U,	// AE_MULSS32F48P16S_HH_S2
    0U,	// AE_MULSS32F48P16S_LH
    0U,	// AE_MULSS32F48P16S_LH_S2
    0U,	// AE_MULSS32F48P16S_LL
    0U,	// AE_MULSS32F48P16S_LL_S2
    0U,	// AE_MULSSD24_HH_LL
    0U,	// AE_MULSSD24_HH_LL_S2
    0U,	// AE_MULSSD24_HL_LH
    0U,	// AE_MULSSD24_HL_LH_S2
    0U,	// AE_MULSSD32X16_H1_L0
    0U,	// AE_MULSSD32X16_H1_L0_S2
    0U,	// AE_MULSSD32X16_H3_L2
    0U,	// AE_MULSSD32X16_H3_L2_S2
    0U,	// AE_MULSSFD16SS_11_00
    0U,	// AE_MULSSFD16SS_11_00_S2
    0U,	// AE_MULSSFD16SS_13_02
    0U,	// AE_MULSSFD16SS_13_02_S2
    0U,	// AE_MULSSFD16SS_33_22
    0U,	// AE_MULSSFD16SS_33_22_S2
    0U,	// AE_MULSSFD24_HH_LL
    0U,	// AE_MULSSFD24_HH_LL_S2
    0U,	// AE_MULSSFD24_HL_LH
    0U,	// AE_MULSSFD24_HL_LH_S2
    0U,	// AE_MULSSFD32X16_H1_L0
    0U,	// AE_MULSSFD32X16_H1_L0_S2
    0U,	// AE_MULSSFD32X16_H3_L2
    0U,	// AE_MULSSFD32X16_H3_L2_S2
    0U,	// AE_MULZAAD24_HH_LL
    0U,	// AE_MULZAAD24_HH_LL_S2
    0U,	// AE_MULZAAD24_HL_LH
    0U,	// AE_MULZAAD24_HL_LH_S2
    0U,	// AE_MULZAAD32X16_H0_L1
    0U,	// AE_MULZAAD32X16_H0_L1_S2
    0U,	// AE_MULZAAD32X16_H1_L0
    0U,	// AE_MULZAAD32X16_H1_L0_S2
    0U,	// AE_MULZAAD32X16_H2_L3
    0U,	// AE_MULZAAD32X16_H2_L3_S2
    0U,	// AE_MULZAAD32X16_H3_L2
    0U,	// AE_MULZAAD32X16_H3_L2_S2
    0U,	// AE_MULZAAFD16SS_11_00
    0U,	// AE_MULZAAFD16SS_11_00_S2
    0U,	// AE_MULZAAFD16SS_13_02
    0U,	// AE_MULZAAFD16SS_13_02_S2
    0U,	// AE_MULZAAFD16SS_33_22
    0U,	// AE_MULZAAFD16SS_33_22_S2
    0U,	// AE_MULZAAFD24_HH_LL
    0U,	// AE_MULZAAFD24_HH_LL_S2
    0U,	// AE_MULZAAFD24_HL_LH
    0U,	// AE_MULZAAFD24_HL_LH_S2
    0U,	// AE_MULZAAFD32X16_H0_L1
    0U,	// AE_MULZAAFD32X16_H0_L1_S2
    0U,	// AE_MULZAAFD32X16_H1_L0
    0U,	// AE_MULZAAFD32X16_H1_L0_S2
    0U,	// AE_MULZAAFD32X16_H2_L3
    0U,	// AE_MULZAAFD32X16_H2_L3_S2
    0U,	// AE_MULZAAFD32X16_H3_L2
    0U,	// AE_MULZAAFD32X16_H3_L2_S2
    0U,	// AE_MULZASD24_HH_LL
    0U,	// AE_MULZASD24_HH_LL_S2
    0U,	// AE_MULZASD24_HL_LH
    0U,	// AE_MULZASD24_HL_LH_S2
    0U,	// AE_MULZASD32X16_H1_L0
    0U,	// AE_MULZASD32X16_H1_L0_S2
    0U,	// AE_MULZASD32X16_H3_L2
    0U,	// AE_MULZASD32X16_H3_L2_S2
    0U,	// AE_MULZASFD24_HH_LL
    0U,	// AE_MULZASFD24_HH_LL_S2
    0U,	// AE_MULZASFD24_HL_LH
    0U,	// AE_MULZASFD24_HL_LH_S2
    0U,	// AE_MULZASFD32X16_H1_L0
    0U,	// AE_MULZASFD32X16_H1_L0_S2
    0U,	// AE_MULZASFD32X16_H3_L2
    0U,	// AE_MULZASFD32X16_H3_L2_S2
    0U,	// AE_MULZSAD24_HH_LL
    0U,	// AE_MULZSAD24_HH_LL_S2
    0U,	// AE_MULZSAD32X16_H1_L0
    0U,	// AE_MULZSAD32X16_H1_L0_S2
    0U,	// AE_MULZSAD32X16_H3_L2
    0U,	// AE_MULZSAD32X16_H3_L2_S2
    0U,	// AE_MULZSAFD24_HH_LL
    0U,	// AE_MULZSAFD24_HH_LL_S2
    0U,	// AE_MULZSAFD32X16_H1_L0
    0U,	// AE_MULZSAFD32X16_H1_L0_S2
    0U,	// AE_MULZSAFD32X16_H3_L2
    0U,	// AE_MULZSAFD32X16_H3_L2_S2
    0U,	// AE_MULZSSD24_HH_LL
    0U,	// AE_MULZSSD24_HH_LL_S2
    0U,	// AE_MULZSSD24_HL_LH
    0U,	// AE_MULZSSD24_HL_LH_S2
    0U,	// AE_MULZSSD32X16_H1_L0
    0U,	// AE_MULZSSD32X16_H1_L0_S2
    0U,	// AE_MULZSSD32X16_H3_L2
    0U,	// AE_MULZSSD32X16_H3_L2_S2
    0U,	// AE_MULZSSFD16SS_11_00
    0U,	// AE_MULZSSFD16SS_11_00_S2
    0U,	// AE_MULZSSFD16SS_13_02
    0U,	// AE_MULZSSFD16SS_13_02_S2
    0U,	// AE_MULZSSFD16SS_33_22
    0U,	// AE_MULZSSFD16SS_33_22_S2
    0U,	// AE_MULZSSFD24_HH_LL
    0U,	// AE_MULZSSFD24_HH_LL_S2
    0U,	// AE_MULZSSFD24_HL_LH
    0U,	// AE_MULZSSFD24_HL_LH_S2
    0U,	// AE_MULZSSFD32X16_H1_L0
    0U,	// AE_MULZSSFD32X16_H1_L0_S2
    0U,	// AE_MULZSSFD32X16_H3_L2
    0U,	// AE_MULZSSFD32X16_H3_L2_S2
    0U,	// AE_NAND
    0U,	// AE_NEG16S
    0U,	// AE_NEG24S
    0U,	// AE_NEG32
    0U,	// AE_NEG32S
    0U,	// AE_NEG64
    0U,	// AE_NEG64S
    0U,	// AE_NSA64
    0U,	// AE_NSAZ16_0
    0U,	// AE_NSAZ32_L
    0U,	// AE_OR
    0U,	// AE_PKSR24
    0U,	// AE_PKSR32
    0U,	// AE_ROUND16X4F32SASYM
    0U,	// AE_ROUND16X4F32SSYM
    0U,	// AE_ROUND24X2F48SASYM
    0U,	// AE_ROUND24X2F48SSYM
    0U,	// AE_ROUND32X2F48SASYM
    0U,	// AE_ROUND32X2F48SSYM
    0U,	// AE_ROUND32X2F64SASYM
    0U,	// AE_ROUND32X2F64SSYM
    0U,	// AE_ROUNDSP16F24ASYM
    0U,	// AE_ROUNDSP16F24SYM
    0U,	// AE_ROUNDSP16Q48X2ASYM
    0U,	// AE_ROUNDSP16Q48X2SYM
    0U,	// AE_ROUNDSQ32F48ASYM
    0U,	// AE_ROUNDSQ32F48SYM
    0U,	// AE_S16M_L_I
    0U,	// AE_S16M_L_IU
    0U,	// AE_S16M_L_X
    0U,	// AE_S16M_L_XC
    0U,	// AE_S16M_L_XU
    0U,	// AE_S16X2M_I
    0U,	// AE_S16X2M_IU
    0U,	// AE_S16X2M_X
    0U,	// AE_S16X2M_XC
    0U,	// AE_S16X2M_XU
    0U,	// AE_S16X4_I
    0U,	// AE_S16X4_IP
    0U,	// AE_S16X4_RIC
    0U,	// AE_S16X4_RIP
    0U,	// AE_S16X4_X
    0U,	// AE_S16X4_XC
    0U,	// AE_S16X4_XP
    0U,	// AE_S16_0_I
    0U,	// AE_S16_0_IP
    0U,	// AE_S16_0_X
    0U,	// AE_S16_0_XC
    0U,	// AE_S16_0_XP
    0U,	// AE_S24RA64S_I
    0U,	// AE_S24RA64S_IP
    0U,	// AE_S24RA64S_X
    0U,	// AE_S24RA64S_XC
    0U,	// AE_S24RA64S_XP
    0U,	// AE_S24X2RA64S_IP
    0U,	// AE_S32F24_L_I
    0U,	// AE_S32F24_L_IP
    0U,	// AE_S32F24_L_X
    0U,	// AE_S32F24_L_XC
    0U,	// AE_S32F24_L_XP
    0U,	// AE_S32M_I
    0U,	// AE_S32M_IU
    0U,	// AE_S32M_X
    0U,	// AE_S32M_XC
    0U,	// AE_S32M_XU
    0U,	// AE_S32RA64S_I
    0U,	// AE_S32RA64S_IP
    0U,	// AE_S32RA64S_X
    0U,	// AE_S32RA64S_XC
    0U,	// AE_S32RA64S_XP
    0U,	// AE_S32X2F24_I
    0U,	// AE_S32X2F24_IP
    0U,	// AE_S32X2F24_RIC
    0U,	// AE_S32X2F24_RIP
    0U,	// AE_S32X2F24_X
    0U,	// AE_S32X2F24_XC
    0U,	// AE_S32X2F24_XP
    0U,	// AE_S32X2RA64S_IP
    0U,	// AE_S32X2_I
    0U,	// AE_S32X2_IP
    0U,	// AE_S32X2_RIC
    0U,	// AE_S32X2_RIP
    0U,	// AE_S32X2_X
    0U,	// AE_S32X2_XC
    0U,	// AE_S32X2_XP
    0U,	// AE_S32_L_I
    0U,	// AE_S32_L_IP
    0U,	// AE_S32_L_X
    0U,	// AE_S32_L_XC
    0U,	// AE_S32_L_XP
    0U,	// AE_S64_I
    0U,	// AE_S64_IP
    0U,	// AE_S64_X
    0U,	// AE_S64_XC
    0U,	// AE_S64_XP
    0U,	// AE_SA16X4_IC
    0U,	// AE_SA16X4_IP
    0U,	// AE_SA16X4_RIC
    0U,	// AE_SA16X4_RIP
    0U,	// AE_SA24X2_IC
    0U,	// AE_SA24X2_IP
    0U,	// AE_SA24X2_RIC
    0U,	// AE_SA24X2_RIP
    0U,	// AE_SA24_L_IC
    0U,	// AE_SA24_L_IP
    0U,	// AE_SA24_L_RIC
    0U,	// AE_SA24_L_RIP
    0U,	// AE_SA32X2F24_IC
    0U,	// AE_SA32X2F24_IP
    0U,	// AE_SA32X2F24_RIC
    0U,	// AE_SA32X2F24_RIP
    0U,	// AE_SA32X2_IC
    0U,	// AE_SA32X2_IP
    0U,	// AE_SA32X2_RIC
    0U,	// AE_SA32X2_RIP
    0U,	// AE_SA64NEG_FP
    0U,	// AE_SA64POS_FP
    0U,	// AE_SALIGN64_I
    0U,	// AE_SAT16X4
    0U,	// AE_SAT24S
    0U,	// AE_SAT48S
    0U,	// AE_SATQ56S
    0U,	// AE_SB
    0U,	// AE_SBF
    0U,	// AE_SBF_IC
    0U,	// AE_SBF_IP
    0U,	// AE_SBI
    0U,	// AE_SBI_IC
    0U,	// AE_SBI_IP
    0U,	// AE_SB_IC
    0U,	// AE_SB_IP
    0U,	// AE_SEL16I
    0U,	// AE_SEL16I_N
    0U,	// AE_SEXT32
    0U,	// AE_SEXT32X2D16_10
    0U,	// AE_SEXT32X2D16_32
    0U,	// AE_SHA32
    0U,	// AE_SHORTSWAP
    0U,	// AE_SLAA16S
    0U,	// AE_SLAA32
    0U,	// AE_SLAA32S
    0U,	// AE_SLAA64
    0U,	// AE_SLAA64S
    0U,	// AE_SLAAQ56
    0U,	// AE_SLAI16S
    0U,	// AE_SLAI24
    0U,	// AE_SLAI24S
    0U,	// AE_SLAI32
    0U,	// AE_SLAI32S
    0U,	// AE_SLAI64
    0U,	// AE_SLAI64S
    0U,	// AE_SLAISQ56S
    0U,	// AE_SLAS24
    0U,	// AE_SLAS24S
    0U,	// AE_SLAS32
    0U,	// AE_SLAS32S
    0U,	// AE_SLAS64
    0U,	// AE_SLAS64S
    0U,	// AE_SLASQ56
    0U,	// AE_SLASSQ56S
    0U,	// AE_SRA64_32
    0U,	// AE_SRAA16RS
    0U,	// AE_SRAA16S
    0U,	// AE_SRAA32
    0U,	// AE_SRAA32RS
    0U,	// AE_SRAA32S
    0U,	// AE_SRAA64
    0U,	// AE_SRAI16
    0U,	// AE_SRAI16R
    0U,	// AE_SRAI24
    0U,	// AE_SRAI32
    0U,	// AE_SRAI32R
    0U,	// AE_SRAI64
    0U,	// AE_SRAS24
    0U,	// AE_SRAS32
    0U,	// AE_SRAS64
    0U,	// AE_SRLA32
    0U,	// AE_SRLA64
    0U,	// AE_SRLI24
    0U,	// AE_SRLI32
    0U,	// AE_SRLI64
    0U,	// AE_SRLS24
    0U,	// AE_SRLS32
    0U,	// AE_SRLS64
    0U,	// AE_SUB16
    0U,	// AE_SUB16S
    0U,	// AE_SUB24S
    0U,	// AE_SUB32
    0U,	// AE_SUB32S
    0U,	// AE_SUB64
    0U,	// AE_SUB64S
    0U,	// AE_SUBADD32
    0U,	// AE_SUBADD32S
    0U,	// AE_TRUNCA32F64S_L
    0U,	// AE_TRUNCA32X2F64S
    0U,	// AE_TRUNCI32F64S_L
    0U,	// AE_TRUNCI32X2F64S
    0U,	// AE_VLDL16C
    0U,	// AE_VLDL16C_IC
    0U,	// AE_VLDL16C_IP
    0U,	// AE_VLDL16T
    0U,	// AE_VLDL32T
    0U,	// AE_VLDSHT
    0U,	// AE_VLEL16T
    0U,	// AE_VLEL32T
    0U,	// AE_VLES16C
    0U,	// AE_VLES16C_IC
    0U,	// AE_VLES16C_IP
    0U,	// AE_XOR
    0U,	// AE_ZALIGN64
    0U,	// ALL4
    0U,	// ALL8
    0U,	// AND
    0U,	// ANDB
    0U,	// ANDBC
    0U,	// ANY4
    0U,	// ANY8
    0U,	// BALL
    0U,	// BANY
    0U,	// BBC
    0U,	// BBCI
    0U,	// BBS
    0U,	// BBSI
    0U,	// BEQ
    0U,	// BEQI
    0U,	// BEQZ
    0U,	// BF
    0U,	// BGE
    0U,	// BGEI
    0U,	// BGEU
    0U,	// BGEUI
    0U,	// BGEZ
    0U,	// BLT
    0U,	// BLTI
    0U,	// BLTU
    0U,	// BLTUI
    0U,	// BLTZ
    0U,	// BNALL
    0U,	// BNE
    0U,	// BNEI
    0U,	// BNEZ
    0U,	// BNONE
    0U,	// BREAK
    0U,	// BREAK_N
    0U,	// BT
    0U,	// CALL0
    0U,	// CALL12
    0U,	// CALL4
    0U,	// CALL8
    0U,	// CALLX0
    0U,	// CALLX12
    0U,	// CALLX4
    0U,	// CALLX8
    0U,	// CEIL_S
    0U,	// CLAMPS
    0U,	// CLR_BIT_GPIO_OUT
    0U,	// CONST_S
    0U,	// DIV0_S
    0U,	// DIVN_S
    0U,	// DSYNC
    0U,	// EE_ANDQ
    0U,	// EE_BITREV
    0U,	// EE_CLR_BIT_GPIO_OUT
    0U,	// EE_CMUL_S16
    0U,	// EE_CMUL_S16_LD_INCP
    0U,	// EE_CMUL_S16_ST_INCP
    37U,	// EE_FFT_AMS_S16_LD_INCP
    37U,	// EE_FFT_AMS_S16_LD_INCP_UAUP
    37U,	// EE_FFT_AMS_S16_LD_R32_DECP
    0U,	// EE_FFT_AMS_S16_ST_INCP
    0U,	// EE_FFT_CMUL_S16_LD_XP
    6U,	// EE_FFT_CMUL_S16_ST_XP
    0U,	// EE_FFT_R2BF_S16
    0U,	// EE_FFT_R2BF_S16_ST_INCP
    0U,	// EE_FFT_VST_R32_DECP
    0U,	// EE_GET_GPIO_IN
    7U,	// EE_LDF_128_IP
    13U,	// EE_LDF_128_XP
    0U,	// EE_LDF_64_IP
    0U,	// EE_LDF_64_XP
    0U,	// EE_LDQA_S16_128_IP
    0U,	// EE_LDQA_S16_128_XP
    0U,	// EE_LDQA_S8_128_IP
    0U,	// EE_LDQA_S8_128_XP
    0U,	// EE_LDQA_U16_128_IP
    0U,	// EE_LDQA_U16_128_XP
    0U,	// EE_LDQA_U8_128_IP
    0U,	// EE_LDQA_U8_128_XP
    0U,	// EE_LDXQ_32
    0U,	// EE_LD_128_USAR_IP
    0U,	// EE_LD_128_USAR_XP
    0U,	// EE_LD_ACCX_IP
    0U,	// EE_LD_QACC_H_H_32_IP
    0U,	// EE_LD_QACC_H_L_128_IP
    0U,	// EE_LD_QACC_L_H_32_IP
    0U,	// EE_LD_QACC_L_L_128_IP
    0U,	// EE_LD_UA_STATE_IP
    0U,	// EE_MOVI_32_A
    0U,	// EE_MOVI_32_Q
    0U,	// EE_MOV_S16_QACC
    0U,	// EE_MOV_S8_QACC
    0U,	// EE_MOV_U16_QACC
    0U,	// EE_MOV_U8_QACC
    0U,	// EE_NOTQ
    0U,	// EE_ORQ
    0U,	// EE_SET_BIT_GPIO_OUT
    0U,	// EE_SLCI_2Q
    0U,	// EE_SLCXXP_2Q
    0U,	// EE_SRCI_2Q
    0U,	// EE_SRCMB_S16_QACC
    0U,	// EE_SRCMB_S8_QACC
    0U,	// EE_SRCQ_128_ST_INCP
    0U,	// EE_SRCXXP_2Q
    0U,	// EE_SRC_Q
    0U,	// EE_SRC_Q_LD_IP
    0U,	// EE_SRC_Q_LD_XP
    0U,	// EE_SRC_Q_QUP
    0U,	// EE_SRS_ACCX
    7U,	// EE_STF_128_IP
    13U,	// EE_STF_128_XP
    0U,	// EE_STF_64_IP
    0U,	// EE_STF_64_XP
    0U,	// EE_STXQ_32
    0U,	// EE_ST_ACCX_IP
    0U,	// EE_ST_QACC_H_H_32_IP
    0U,	// EE_ST_QACC_H_L_128_IP
    0U,	// EE_ST_QACC_L_H_32_IP
    0U,	// EE_ST_QACC_L_L_128_IP
    0U,	// EE_ST_UA_STATE_IP
    0U,	// EE_VADDS_S16
    0U,	// EE_VADDS_S16_LD_INCP
    0U,	// EE_VADDS_S16_ST_INCP
    0U,	// EE_VADDS_S32
    0U,	// EE_VADDS_S32_LD_INCP
    0U,	// EE_VADDS_S32_ST_INCP
    0U,	// EE_VADDS_S8
    0U,	// EE_VADDS_S8_LD_INCP
    0U,	// EE_VADDS_S8_ST_INCP
    0U,	// EE_VCMP_EQ_S16
    0U,	// EE_VCMP_EQ_S32
    0U,	// EE_VCMP_EQ_S8
    0U,	// EE_VCMP_GT_S16
    0U,	// EE_VCMP_GT_S32
    0U,	// EE_VCMP_GT_S8
    0U,	// EE_VCMP_LT_S16
    0U,	// EE_VCMP_LT_S32
    0U,	// EE_VCMP_LT_S8
    0U,	// EE_VLDBC_16
    0U,	// EE_VLDBC_16_IP
    0U,	// EE_VLDBC_16_XP
    0U,	// EE_VLDBC_32
    0U,	// EE_VLDBC_32_IP
    0U,	// EE_VLDBC_32_XP
    0U,	// EE_VLDBC_8
    0U,	// EE_VLDBC_8_IP
    0U,	// EE_VLDBC_8_XP
    0U,	// EE_VLDHBC_16_INCP
    0U,	// EE_VLD_128_IP
    0U,	// EE_VLD_128_XP
    0U,	// EE_VLD_H_64_IP
    0U,	// EE_VLD_H_64_XP
    0U,	// EE_VLD_L_64_IP
    0U,	// EE_VLD_L_64_XP
    0U,	// EE_VMAX_S16
    0U,	// EE_VMAX_S16_LD_INCP
    0U,	// EE_VMAX_S16_ST_INCP
    0U,	// EE_VMAX_S32
    0U,	// EE_VMAX_S32_LD_INCP
    0U,	// EE_VMAX_S32_ST_INCP
    0U,	// EE_VMAX_S8
    0U,	// EE_VMAX_S8_LD_INCP
    0U,	// EE_VMAX_S8_ST_INCP
    0U,	// EE_VMIN_S16
    0U,	// EE_VMIN_S16_LD_INCP
    0U,	// EE_VMIN_S16_ST_INCP
    0U,	// EE_VMIN_S32
    0U,	// EE_VMIN_S32_LD_INCP
    0U,	// EE_VMIN_S32_ST_INCP
    0U,	// EE_VMIN_S8
    0U,	// EE_VMIN_S8_LD_INCP
    0U,	// EE_VMIN_S8_ST_INCP
    0U,	// EE_VMULAS_S16_ACCX
    0U,	// EE_VMULAS_S16_ACCX_LD_IP
    0U,	// EE_VMULAS_S16_ACCX_LD_IP_QUP
    0U,	// EE_VMULAS_S16_ACCX_LD_XP
    0U,	// EE_VMULAS_S16_ACCX_LD_XP_QUP
    0U,	// EE_VMULAS_S16_QACC
    0U,	// EE_VMULAS_S16_QACC_LDBC_INCP
    0U,	// EE_VMULAS_S16_QACC_LDBC_INCP_QUP
    0U,	// EE_VMULAS_S16_QACC_LD_IP
    0U,	// EE_VMULAS_S16_QACC_LD_IP_QUP
    0U,	// EE_VMULAS_S16_QACC_LD_XP
    0U,	// EE_VMULAS_S16_QACC_LD_XP_QUP
    0U,	// EE_VMULAS_S8_ACCX
    0U,	// EE_VMULAS_S8_ACCX_LD_IP
    0U,	// EE_VMULAS_S8_ACCX_LD_IP_QUP
    0U,	// EE_VMULAS_S8_ACCX_LD_XP
    0U,	// EE_VMULAS_S8_ACCX_LD_XP_QUP
    0U,	// EE_VMULAS_S8_QACC
    0U,	// EE_VMULAS_S8_QACC_LDBC_INCP
    0U,	// EE_VMULAS_S8_QACC_LDBC_INCP_QUP
    0U,	// EE_VMULAS_S8_QACC_LD_IP
    0U,	// EE_VMULAS_S8_QACC_LD_IP_QUP
    0U,	// EE_VMULAS_S8_QACC_LD_XP
    0U,	// EE_VMULAS_S8_QACC_LD_XP_QUP
    0U,	// EE_VMULAS_U16_ACCX
    0U,	// EE_VMULAS_U16_ACCX_LD_IP
    0U,	// EE_VMULAS_U16_ACCX_LD_IP_QUP
    0U,	// EE_VMULAS_U16_ACCX_LD_XP
    0U,	// EE_VMULAS_U16_ACCX_LD_XP_QUP
    0U,	// EE_VMULAS_U16_QACC
    0U,	// EE_VMULAS_U16_QACC_LDBC_INCP
    0U,	// EE_VMULAS_U16_QACC_LDBC_INCP_QUP
    0U,	// EE_VMULAS_U16_QACC_LD_IP
    0U,	// EE_VMULAS_U16_QACC_LD_IP_QUP
    0U,	// EE_VMULAS_U16_QACC_LD_XP
    0U,	// EE_VMULAS_U16_QACC_LD_XP_QUP
    0U,	// EE_VMULAS_U8_ACCX
    0U,	// EE_VMULAS_U8_ACCX_LD_IP
    0U,	// EE_VMULAS_U8_ACCX_LD_IP_QUP
    0U,	// EE_VMULAS_U8_ACCX_LD_XP
    0U,	// EE_VMULAS_U8_ACCX_LD_XP_QUP
    0U,	// EE_VMULAS_U8_QACC
    0U,	// EE_VMULAS_U8_QACC_LDBC_INCP
    0U,	// EE_VMULAS_U8_QACC_LDBC_INCP_QUP
    0U,	// EE_VMULAS_U8_QACC_LD_IP
    0U,	// EE_VMULAS_U8_QACC_LD_IP_QUP
    0U,	// EE_VMULAS_U8_QACC_LD_XP
    0U,	// EE_VMULAS_U8_QACC_LD_XP_QUP
    0U,	// EE_VMUL_S16
    0U,	// EE_VMUL_S16_LD_INCP
    0U,	// EE_VMUL_S16_ST_INCP
    0U,	// EE_VMUL_S8
    0U,	// EE_VMUL_S8_LD_INCP
    0U,	// EE_VMUL_S8_ST_INCP
    0U,	// EE_VMUL_U16
    0U,	// EE_VMUL_U16_LD_INCP
    0U,	// EE_VMUL_U16_ST_INCP
    0U,	// EE_VMUL_U8
    0U,	// EE_VMUL_U8_LD_INCP
    0U,	// EE_VMUL_U8_ST_INCP
    0U,	// EE_VPRELU_S16
    0U,	// EE_VPRELU_S8
    0U,	// EE_VRELU_S16
    0U,	// EE_VRELU_S8
    0U,	// EE_VSL_32
    0U,	// EE_VSMULAS_S16_QACC
    0U,	// EE_VSMULAS_S16_QACC_LD_INCP
    0U,	// EE_VSMULAS_S8_QACC
    0U,	// EE_VSMULAS_S8_QACC_LD_INCP
    0U,	// EE_VSR_32
    0U,	// EE_VST_128_IP
    0U,	// EE_VST_128_XP
    0U,	// EE_VST_H_64_IP
    0U,	// EE_VST_H_64_XP
    0U,	// EE_VST_L_64_IP
    0U,	// EE_VST_L_64_XP
    0U,	// EE_VSUBS_S16
    0U,	// EE_VSUBS_S16_LD_INCP
    0U,	// EE_VSUBS_S16_ST_INCP
    0U,	// EE_VSUBS_S32
    0U,	// EE_VSUBS_S32_LD_INCP
    0U,	// EE_VSUBS_S32_ST_INCP
    0U,	// EE_VSUBS_S8
    0U,	// EE_VSUBS_S8_LD_INCP
    0U,	// EE_VSUBS_S8_ST_INCP
    0U,	// EE_VUNZIP_16
    0U,	// EE_VUNZIP_32
    0U,	// EE_VUNZIP_8
    0U,	// EE_VZIP_16
    0U,	// EE_VZIP_32
    0U,	// EE_VZIP_8
    0U,	// EE_WR_MASK_GPIO_OUT
    0U,	// EE_XORQ
    0U,	// EE_ZERO_ACCX
    0U,	// EE_ZERO_Q
    0U,	// EE_ZERO_QACC
    0U,	// ENTRY
    0U,	// ESYNC
    0U,	// EXCW
    0U,	// EXTUI
    0U,	// EXTW
    0U,	// FLOAT_S
    0U,	// FLOOR_S
    0U,	// GET_GPIO_IN
    0U,	// ILL
    0U,	// ILL_N
    0U,	// ISYNC
    0U,	// J
    0U,	// JX
    0U,	// L16SI
    0U,	// L16UI
    0U,	// L32E
    0U,	// L32I
    0U,	// L32I_N
    0U,	// L32R
    0U,	// L8UI
    0U,	// LDDEC
    0U,	// LDINC
    0U,	// LEA_ADD
    0U,	// LOOP
    0U,	// LOOPGTZ
    0U,	// LOOPNEZ
    0U,	// LSI
    0U,	// LSIP
    0U,	// LSX
    0U,	// LSXP
    0U,	// MADDN_S
    0U,	// MADD_S
    0U,	// MAX
    0U,	// MAXU
    0U,	// MEMW
    0U,	// MIN
    0U,	// MINU
    0U,	// MKDADJ_S
    0U,	// MKSADJ_S
    0U,	// MOVEQZ
    0U,	// MOVEQZ_S
    0U,	// MOVF
    0U,	// MOVF_S
    0U,	// MOVGEZ
    0U,	// MOVGEZ_S
    0U,	// MOVI
    0U,	// MOVI_N
    0U,	// MOVLTZ
    0U,	// MOVLTZ_S
    0U,	// MOVNEZ
    0U,	// MOVNEZ_S
    0U,	// MOVSP
    0U,	// MOVT
    0U,	// MOVT_S
    0U,	// MOV_N
    0U,	// MOV_S
    0U,	// MSUB_S
    0U,	// MUL16S
    0U,	// MUL16U
    0U,	// MULA_AA_HH
    0U,	// MULA_AA_HL
    0U,	// MULA_AA_LH
    0U,	// MULA_AA_LL
    0U,	// MULA_AD_HH
    0U,	// MULA_AD_HL
    0U,	// MULA_AD_LH
    0U,	// MULA_AD_LL
    0U,	// MULA_DA_HH
    0U,	// MULA_DA_HH_LDDEC
    0U,	// MULA_DA_HH_LDINC
    0U,	// MULA_DA_HL
    0U,	// MULA_DA_HL_LDDEC
    0U,	// MULA_DA_HL_LDINC
    0U,	// MULA_DA_LH
    0U,	// MULA_DA_LH_LDDEC
    0U,	// MULA_DA_LH_LDINC
    0U,	// MULA_DA_LL
    0U,	// MULA_DA_LL_LDDEC
    0U,	// MULA_DA_LL_LDINC
    0U,	// MULA_DD_HH
    0U,	// MULA_DD_HH_LDDEC
    0U,	// MULA_DD_HH_LDINC
    0U,	// MULA_DD_HL
    0U,	// MULA_DD_HL_LDDEC
    0U,	// MULA_DD_HL_LDINC
    0U,	// MULA_DD_LH
    0U,	// MULA_DD_LH_LDDEC
    0U,	// MULA_DD_LH_LDINC
    0U,	// MULA_DD_LL
    0U,	// MULA_DD_LL_LDDEC
    0U,	// MULA_DD_LL_LDINC
    0U,	// MULL
    0U,	// MULSH
    0U,	// MULS_AA_HH
    0U,	// MULS_AA_HL
    0U,	// MULS_AA_LH
    0U,	// MULS_AA_LL
    0U,	// MULS_AD_HH
    0U,	// MULS_AD_HL
    0U,	// MULS_AD_LH
    0U,	// MULS_AD_LL
    0U,	// MULS_DA_HH
    0U,	// MULS_DA_HL
    0U,	// MULS_DA_LH
    0U,	// MULS_DA_LL
    0U,	// MULS_DD_HH
    0U,	// MULS_DD_HL
    0U,	// MULS_DD_LH
    0U,	// MULS_DD_LL
    0U,	// MULUH
    0U,	// MUL_AA_HH
    0U,	// MUL_AA_HL
    0U,	// MUL_AA_LH
    0U,	// MUL_AA_LL
    0U,	// MUL_AD_HH
    0U,	// MUL_AD_HL
    0U,	// MUL_AD_LH
    0U,	// MUL_AD_LL
    0U,	// MUL_DA_HH
    0U,	// MUL_DA_HL
    0U,	// MUL_DA_LH
    0U,	// MUL_DA_LL
    0U,	// MUL_DD_HH
    0U,	// MUL_DD_HL
    0U,	// MUL_DD_LH
    0U,	// MUL_DD_LL
    0U,	// MUL_S
    0U,	// NEG
    0U,	// NEG_S
    0U,	// NEXP01_S
    0U,	// NOP
    0U,	// NSA
    0U,	// NSAU
    0U,	// OEQ_S
    0U,	// OLE_S
    0U,	// OLT_S
    0U,	// OR
    0U,	// ORB
    0U,	// ORBC
    0U,	// QUOS
    0U,	// QUOU
    0U,	// RECIP0_S
    0U,	// REMS
    0U,	// REMU
    0U,	// RER
    0U,	// RET
    0U,	// RETW
    0U,	// RETW_N
    0U,	// RET_N
    0U,	// RFDE
    0U,	// RFE
    0U,	// RFI
    0U,	// RFR
    0U,	// RFWO
    0U,	// RFWU
    0U,	// ROTW
    0U,	// ROUND_S
    0U,	// RSIL
    0U,	// RSQRT0_S
    0U,	// RSR
    0U,	// RSYNC
    0U,	// RUR
    0U,	// RUR_ACCX_0
    0U,	// RUR_ACCX_1
    0U,	// RUR_AE_BITHEAD
    0U,	// RUR_AE_BITPTR
    0U,	// RUR_AE_BITSUSED
    0U,	// RUR_AE_CBEGIN0
    0U,	// RUR_AE_CEND0
    0U,	// RUR_AE_CWRAP
    0U,	// RUR_AE_CW_SD_NO
    0U,	// RUR_AE_FIRST_TS
    0U,	// RUR_AE_NEXTOFFSET
    0U,	// RUR_AE_OVERFLOW
    0U,	// RUR_AE_OVF_SAR
    0U,	// RUR_AE_SAR
    0U,	// RUR_AE_SEARCHDONE
    0U,	// RUR_AE_TABLESIZE
    0U,	// RUR_AE_TS_FTS_BU_BP
    0U,	// RUR_FFT_BIT_WIDTH
    0U,	// RUR_GPIO_OUT
    0U,	// RUR_QACC_H_0
    0U,	// RUR_QACC_H_1
    0U,	// RUR_QACC_H_2
    0U,	// RUR_QACC_H_3
    0U,	// RUR_QACC_H_4
    0U,	// RUR_QACC_L_0
    0U,	// RUR_QACC_L_1
    0U,	// RUR_QACC_L_2
    0U,	// RUR_QACC_L_3
    0U,	// RUR_QACC_L_4
    0U,	// RUR_SAR_BYTE
    0U,	// RUR_UA_STATE_0
    0U,	// RUR_UA_STATE_1
    0U,	// RUR_UA_STATE_2
    0U,	// RUR_UA_STATE_3
    0U,	// S16I
    0U,	// S32C1I
    0U,	// S32E
    0U,	// S32I
    0U,	// S32I_N
    0U,	// S8I
    0U,	// SET_BIT_GPIO_OUT
    0U,	// SEXT
    0U,	// SIMCALL
    0U,	// SLL
    0U,	// SLLI
    0U,	// SQRT0_S
    0U,	// SRA
    0U,	// SRAI
    0U,	// SRC
    0U,	// SRL
    0U,	// SRLI
    0U,	// SSA8L
    0U,	// SSAI
    0U,	// SSI
    0U,	// SSIP
    0U,	// SSL
    0U,	// SSR
    0U,	// SSX
    0U,	// SSXP
    0U,	// SUB
    0U,	// SUBX2
    0U,	// SUBX4
    0U,	// SUBX8
    0U,	// SUB_S
    0U,	// SYSCALL
    0U,	// TRUNC_S
    0U,	// UEQ_S
    0U,	// UFLOAT_S
    0U,	// ULE_S
    0U,	// ULT_S
    0U,	// UMUL_AA_HH
    0U,	// UMUL_AA_HL
    0U,	// UMUL_AA_LH
    0U,	// UMUL_AA_LL
    0U,	// UN_S
    0U,	// UTRUNC_S
    0U,	// WAITI
    0U,	// WDTLB
    0U,	// WER
    0U,	// WFR
    0U,	// WITLB
    0U,	// WR_MASK_GPIO_OUT
    0U,	// WSR
    0U,	// WUR
    0U,	// WUR_ACCX_0
    0U,	// WUR_ACCX_1
    0U,	// WUR_AE_BITHEAD
    0U,	// WUR_AE_BITPTR
    0U,	// WUR_AE_BITSUSED
    0U,	// WUR_AE_CBEGIN0
    0U,	// WUR_AE_CEND0
    0U,	// WUR_AE_CWRAP
    0U,	// WUR_AE_CW_SD_NO
    0U,	// WUR_AE_FIRST_TS
    0U,	// WUR_AE_NEXTOFFSET
    0U,	// WUR_AE_OVERFLOW
    0U,	// WUR_AE_OVF_SAR
    0U,	// WUR_AE_SAR
    0U,	// WUR_AE_SEARCHDONE
    0U,	// WUR_AE_TABLESIZE
    0U,	// WUR_AE_TS_FTS_BU_BP
    0U,	// WUR_FCR
    0U,	// WUR_FFT_BIT_WIDTH
    0U,	// WUR_FSR
    0U,	// WUR_GPIO_OUT
    0U,	// WUR_QACC_H_0
    0U,	// WUR_QACC_H_1
    0U,	// WUR_QACC_H_2
    0U,	// WUR_QACC_H_3
    0U,	// WUR_QACC_H_4
    0U,	// WUR_QACC_L_0
    0U,	// WUR_QACC_L_1
    0U,	// WUR_QACC_L_2
    0U,	// WUR_QACC_L_3
    0U,	// WUR_QACC_L_4
    0U,	// WUR_SAR_BYTE
    0U,	// WUR_UA_STATE_0
    0U,	// WUR_UA_STATE_1
    0U,	// WUR_UA_STATE_2
    0U,	// WUR_UA_STATE_3
    0U,	// XOR
    0U,	// XORB
    0U,	// XSR
    0U,	// _L32I
    0U,	// _L32I_N
    0U,	// _MOVI
    0U,	// _S32I
    0U,	// _S32I_N
    0U,	// _SLLI
    0U,	// _SRLI
    0U,	// mv_QR
  };

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MCInst_getOpcode(MI)] << 0;
  Bits |= (uint64_t)OpInfo1[MCInst_getOpcode(MI)] << 32;
  Bits |= (uint64_t)OpInfo2[MCInst_getOpcode(MI)] << 48;
  MnemonicBitsInfo MBI = {
#ifndef CAPSTONE_DIET
    AsmStrs+(Bits & 32767)-1,
#else
    NULL,
#endif // CAPSTONE_DIET
    Bits
  };
  return MBI;
}

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
static void printInstruction(MCInst *MI, uint64_t Address, SStream *O) {
  SStream_concat0(O, "");
  MnemonicBitsInfo MnemonicInfo = getMnemonic(MI, O);

  SStream_concat0(O, MnemonicInfo.first);

  uint64_t Bits = MnemonicInfo.second;
  CS_ASSERT_RET(Bits != 0 && "Cannot print this instruction.");

  // Fragment 0 encoded into 4 bits for 13 unique commands.
  switch ((Bits >> 15) & 15) {
  default: CS_ASSERT_RET(0 && "Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_VALUE_LIST, DBG_INSTR_REF, DBG_PHI, DBG_LABEL, BUNDLE, ...
    return;
    break;
  case 1:
    // ATOMIC_CMP_SWAP_16_P, ATOMIC_CMP_SWAP_32_P, ATOMIC_CMP_SWAP_8_P, ATOMI...
    printOperand(MI, 0, O);
    break;
  case 2:
    // EE_ANDQ_P, EE_BITREV_P, EE_CMUL_S16_LD_INCP_P, EE_CMUL_S16_P, EE_CMUL_...
    printImm8_AsmOperand(MI, 0, O);
    break;
  case 3:
    // LOOPEND
    printBranchTarget(MI, 0, O);
    return;
    break;
  case 4:
    // ADDEXPM_S, ADDEXP_S, AE_DB, AE_DBI, AE_DBI_IC, AE_DBI_IP, AE_DB_IC, AE...
    printOperand(MI, 1, O);
    break;
  case 5:
    // AE_MULA16X4, AE_MULAF16X4SS, AE_MULAFD24X2_FIR_H, AE_MULAFD24X2_FIR_L,...
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    break;
  case 6:
    // BREAK, BREAK_N, RFI, WAITI
    printUimm4_AsmOperand(MI, 0, O);
    break;
  case 7:
    // CALL0, CALL12, CALL4, CALL8
    printCallOperand(MI, 0, O);
    return;
    break;
  case 8:
    // CLR_BIT_GPIO_OUT, EE_CLR_BIT_GPIO_OUT, EE_SET_BIT_GPIO_OUT, SET_BIT_GP...
    printSelect_256_AsmOperand(MI, 0, O);
    return;
    break;
  case 9:
    // EE_FFT_AMS_S16_ST_INCP, EE_SLCXXP_2Q, EE_SRCXXP_2Q
    printOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    break;
  case 10:
    // J
    printJumpTarget(MI, 0, O);
    return;
    break;
  case 11:
    // ROTW
    printImm8n_7_AsmOperand(MI, 0, O);
    return;
    break;
  case 12:
    // SSAI
    printUimm5_AsmOperand(MI, 0, O);
    return;
    break;
  }


  // Fragment 1 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 19) & 3) {
  default: CS_ASSERT_RET(0 && "Invalid command number.");
  case 0:
    // ATOMIC_CMP_SWAP_16_P, ATOMIC_CMP_SWAP_32_P, ATOMIC_CMP_SWAP_8_P, ATOMI...
    SStream_concat0(O, ", ");
    break;
  case 1:
    // EE_MOV_S16_QACC_P, EE_MOV_S8_QACC_P, EE_MOV_U16_QACC_P, EE_MOV_U8_QACC...
    return;
    break;
  case 2:
    // EE_FFT_AMS_S16_ST_INCP
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 6, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 7, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 8, O);
    SStream_concat0(O, ", ");
    printSelect_2_AsmOperand(MI, 9, O);
    return;
    break;
  case 3:
    // EE_SLCXXP_2Q, EE_SRCXXP_2Q
    printOperand(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 6, O);
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 29 unique commands.
  switch ((Bits >> 21) & 31) {
  default: CS_ASSERT_RET(0 && "Invalid command number.");
  case 0:
    // ATOMIC_CMP_SWAP_16_P, ATOMIC_CMP_SWAP_32_P, ATOMIC_CMP_SWAP_8_P, ATOMI...
    printOperand(MI, 1, O);
    break;
  case 1:
    // EE_ANDQ_P, EE_CMUL_S16_P, EE_FFT_AMS_S16_ST_INCP_P, EE_FFT_CMUL_S16_ST...
    printImm8_AsmOperand(MI, 1, O);
    break;
  case 2:
    // EE_LDQA_S16_128_IP_P, EE_LDQA_S8_128_IP_P, EE_LDQA_U16_128_IP_P, EE_LD...
    printOffset_256_16_AsmOperand(MI, 1, O);
    return;
    break;
  case 3:
    // EE_LD_ACCX_IP_P, EE_ST_ACCX_IP_P
    printOffset_256_8_AsmOperand(MI, 1, O);
    return;
    break;
  case 4:
    // EE_LD_QACC_H_H_32_IP_P, EE_LD_QACC_L_H_32_IP_P, EE_ST_QACC_H_H_32_IP_P...
    printOffset_256_4_AsmOperand(MI, 1, O);
    return;
    break;
  case 5:
    // L8I_P, RESTORE_BOOL, SPILL_BOOL, L16SI, L16UI, L32I, L32I_N, L8UI, LEA...
    printMemOperand(MI, 1, O);
    return;
    break;
  case 6:
    // LOOPBR, LOOPSTART, BEQZ, BF, BGEZ, BLTZ, BNEZ, BT
    printBranchTarget(MI, 1, O);
    return;
    break;
  case 7:
    // ADDEXPM_S, ADDEXP_S, AE_DB, AE_DB_IC, AE_DB_IP, AE_DIV64D32_H, AE_DIV6...
    printOperand(MI, 2, O);
    break;
  case 8:
    // AE_DBI, AE_DBI_IC, AE_DBI_IP
    printImm1_16_AsmOperand(MI, 2, O);
    return;
    break;
  case 9:
    // AE_LA16X4_IC, AE_LA16X4_IP, AE_LA16X4_RIC, AE_LA16X4_RIP, AE_LA24X2_IC...
    printOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    break;
  case 10:
    // AE_LBI, AE_LBSI
    printImm1_16_AsmOperand(MI, 1, O);
    return;
    break;
  case 11:
    // AE_MOVI
    printImmOperand_minus16_47_1(MI, 1, O);
    return;
    break;
  case 12:
    // AE_MULA16X4, AE_MULAF16X4SS, AE_MULAFD24X2_FIR_H, AE_MULAFD24X2_FIR_L,...
    printOperand(MI, 4, O);
    break;
  case 13:
    // BBCI, BBSI
    printUimm5_AsmOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printBranchTarget(MI, 2, O);
    return;
    break;
  case 14:
    // BEQI, BGEI, BLTI, BNEI
    printB4const_AsmOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printBranchTarget(MI, 2, O);
    return;
    break;
  case 15:
    // BGEUI, BLTUI
    printB4constu_AsmOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printBranchTarget(MI, 2, O);
    return;
    break;
  case 16:
    // BREAK, CONST_S, RSIL
    printUimm4_AsmOperand(MI, 1, O);
    return;
    break;
  case 17:
    // EE_LDQA_S16_128_IP, EE_LDQA_S8_128_IP, EE_LDQA_U16_128_IP, EE_LDQA_U8_...
    printOffset_256_16_AsmOperand(MI, 2, O);
    return;
    break;
  case 18:
    // EE_LD_ACCX_IP, EE_ST_ACCX_IP
    printOffset_256_8_AsmOperand(MI, 2, O);
    return;
    break;
  case 19:
    // EE_LD_QACC_H_H_32_IP, EE_LD_QACC_L_H_32_IP, EE_ST_QACC_H_H_32_IP, EE_S...
    printOffset_256_4_AsmOperand(MI, 2, O);
    return;
    break;
  case 20:
    // EE_MOVI_32_A, WSR, WUR
    printOperand(MI, 0, O);
    break;
  case 21:
    // EE_SLCI_2Q, EE_SRCI_2Q
    printSelect_16_AsmOperand(MI, 4, O);
    return;
    break;
  case 22:
    // ENTRY
    printEntry_Imm12_AsmOperand(MI, 1, O);
    return;
    break;
  case 23:
    // L32R
    printL32RTarget(MI, 1, O);
    return;
    break;
  case 24:
    // LOOP, LOOPGTZ, LOOPNEZ
    printLoopTarget(MI, 1, O);
    return;
    break;
  case 25:
    // MOVI
    printImm12m_AsmOperand(MI, 1, O);
    return;
    break;
  case 26:
    // MOVI_N
    printImm32n_95_AsmOperand(MI, 1, O);
    return;
    break;
  case 27:
    // S32C1I
    printMemOperand(MI, 2, O);
    return;
    break;
  case 28:
    // _MOVI
    printImm12_AsmOperand(MI, 1, O);
    return;
    break;
  }


  // Fragment 3 encoded into 3 bits for 6 unique commands.
  switch ((Bits >> 26) & 7) {
  default: CS_ASSERT_RET(0 && "Invalid command number.");
  case 0:
    // ATOMIC_CMP_SWAP_16_P, ATOMIC_CMP_SWAP_32_P, ATOMIC_CMP_SWAP_8_P, ATOMI...
    SStream_concat0(O, ", ");
    break;
  case 1:
    // BR_JT, EE_BITREV_P, EE_LDQA_S16_128_XP_P, EE_LDQA_S8_128_XP_P, EE_LDQA...
    return;
    break;
  case 2:
    // AE_LA16X4_IC, AE_LA16X4_IP, AE_LA16X4_RIC, AE_LA16X4_RIP, AE_LA24X2_IC...
    printOperand(MI, 4, O);
    break;
  case 3:
    // EE_CMUL_S16_LD_INCP, EE_VADDS_S16_LD_INCP, EE_VADDS_S32_LD_INCP, EE_VA...
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    break;
  case 4:
    // EE_SRC_Q_LD_IP
    printOffset_256_16_AsmOperand(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 6, O);
    return;
    break;
  case 5:
    // EE_VMULAS_S16_ACCX_LD_IP_QUP, EE_VMULAS_S16_QACC_LD_IP_QUP, EE_VMULAS_...
    printOffset_64_16_AsmOperand(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 6, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 7, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 8, O);
    return;
    break;
  }


  // Fragment 4 encoded into 6 bits for 45 unique commands.
  switch ((Bits >> 29) & 63) {
  default: CS_ASSERT_RET(0 && "Invalid command number.");
  case 0:
    // ATOMIC_CMP_SWAP_16_P, ATOMIC_CMP_SWAP_32_P, ATOMIC_CMP_SWAP_8_P, ATOMI...
    printOperand(MI, 2, O);
    break;
  case 1:
    // EE_ANDQ_P, EE_CMUL_S16_LD_INCP_P, EE_CMUL_S16_P, EE_CMUL_S16_ST_INCP_P...
    printImm8_AsmOperand(MI, 2, O);
    break;
  case 2:
    // EE_FFT_VST_R32_DECP_P, EE_SRCMB_S16_QACC_P, EE_SRCMB_S8_QACC_P, EE_SRS...
    printSelect_2_AsmOperand(MI, 2, O);
    return;
    break;
  case 3:
    // EE_LD_128_USAR_IP_P, EE_SRC_Q_LD_IP_P, EE_VLD_128_IP_P, EE_VST_128_IP_...
    printOffset_256_16_AsmOperand(MI, 2, O);
    break;
  case 4:
    // EE_MOVI_32_A_P, EE_MOVI_32_Q_P, EE_MOVI_32_A, EE_MOVI_32_Q
    printSelect_4_AsmOperand(MI, 2, O);
    return;
    break;
  case 5:
    // EE_SLCI_2Q_P, EE_SRCI_2Q_P, EE_VSMULAS_S8_QACC_P, EE_VSMULAS_S8_QACC
    printSelect_16_AsmOperand(MI, 2, O);
    return;
    break;
  case 6:
    // EE_VLDBC_16_IP_P
    printOffset_128_2_AsmOperand(MI, 2, O);
    return;
    break;
  case 7:
    // EE_VLDBC_32_IP_P
    printOffset_256_4_AsmOperand(MI, 2, O);
    return;
    break;
  case 8:
    // EE_VLDBC_8_IP_P
    printOffset_128_1_AsmOperand(MI, 2, O);
    return;
    break;
  case 9:
    // EE_VLD_H_64_IP_P, EE_VLD_L_64_IP_P, EE_VST_H_64_IP_P, EE_VST_L_64_IP_P
    printOffset_256_8_AsmOperand(MI, 2, O);
    return;
    break;
  case 10:
    // EE_VMULAS_S16_ACCX_LD_IP_P, EE_VMULAS_S16_ACCX_LD_IP_QUP_P, EE_VMULAS_...
    printOffset_64_16_AsmOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printImm8_AsmOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printImm8_AsmOperand(MI, 4, O);
    break;
  case 11:
    // EE_VSMULAS_S16_QACC_P, EE_VSMULAS_S16_QACC
    printSelect_8_AsmOperand(MI, 2, O);
    return;
    break;
  case 12:
    // ADDI_N
    printImm1n_15_AsmOperand(MI, 2, O);
    return;
    break;
  case 13:
    // ADDMI
    printImm8_sh8_AsmOperand(MI, 2, O);
    return;
    break;
  case 14:
    // AE_L16M_I, AE_L16_I, AE_S16M_L_I, AE_S16_0_I
    printImmOperand_minus16_14_2(MI, 2, O);
    return;
    break;
  case 15:
    // AE_L16M_IU, AE_L16_IP, AE_S16M_L_IU, AE_S16_0_IP
    printImmOperand_minus16_14_2(MI, 3, O);
    return;
    break;
  case 16:
    // AE_L16M_XC, AE_L16M_XU, AE_L16X2M_XC, AE_L16X2M_XU, AE_L16X4_XC, AE_L1...
    printOperand(MI, 3, O);
    break;
  case 17:
    // AE_L16X2M_I, AE_L32F24_I, AE_L32M_I, AE_L32_I, AE_S16X2M_I, AE_S24RA64...
    printImmOperand_minus32_28_4(MI, 2, O);
    return;
    break;
  case 18:
    // AE_L16X2M_IU, AE_L32F24_IP, AE_L32M_IU, AE_L32_IP, AE_S16X2M_IU, AE_S2...
    printImmOperand_minus32_28_4(MI, 3, O);
    return;
    break;
  case 19:
    // AE_L16X4_I, AE_L32X2F24_I, AE_L32X2_I, AE_L64_I, AE_LALIGN64_I, AE_S16...
    printImmOperand_minus64_56_8(MI, 2, O);
    return;
    break;
  case 20:
    // AE_L16X4_IP, AE_L32X2F24_IP, AE_L32X2_IP, AE_S16X4_IP, AE_S32X2F24_IP,...
    printImmOperand_0_56_8(MI, 3, O);
    return;
    break;
  case 21:
    // AE_L64_IP, AE_S64_IP
    printImmOperand_minus64_56_8(MI, 3, O);
    return;
    break;
  case 22:
    // AE_LA16X4_IC, AE_LA16X4_IP, AE_LA16X4_RIC, AE_LA16X4_RIP, AE_LA24X2_IC...
    return;
    break;
  case 23:
    // AE_LBKI
    printImm1_16_AsmOperand(MI, 2, O);
    return;
    break;
  case 24:
    // AE_MULA16X4, AE_MULAF16X4SS, AE_MULAFD24X2_FIR_H, AE_MULAFD24X2_FIR_L,...
    printOperand(MI, 5, O);
    break;
  case 25:
    // AE_PKSR24, AE_PKSR32
    printImmOperand_0_3_1(MI, 3, O);
    return;
    break;
  case 26:
    // AE_SBI, AE_SBI_IC, AE_SBI_IP
    printImm1_16_AsmOperand(MI, 3, O);
    return;
    break;
  case 27:
    // AE_SEXT32, CLAMPS, SEXT
    printImm7_22_AsmOperand(MI, 2, O);
    return;
    break;
  case 28:
    // AE_SLAI16S, AE_SRAI16, AE_SRAI16R, CEIL_S, FLOAT_S, FLOOR_S, ROUND_S, ...
    printUimm4_AsmOperand(MI, 2, O);
    return;
    break;
  case 29:
    // AE_SLAI24, AE_SLAI24S, AE_SLAI32, AE_SLAI32S, AE_SRAI24, AE_SRAI32, AE...
    printUimm5_AsmOperand(MI, 2, O);
    break;
  case 30:
    // AE_SLAI64, AE_SLAI64S, AE_SLAISQ56S, AE_SRAI64, AE_SRLI64
    printImmOperand_0_63_1(MI, 2, O);
    return;
    break;
  case 31:
    // BALL, BANY, BBC, BBS, BEQ, BGE, BGEU, BLT, BLTU, BNALL, BNE, BNONE
    printBranchTarget(MI, 2, O);
    return;
    break;
  case 32:
    // EE_CMUL_S16_LD_INCP, EE_FFT_CMUL_S16_LD_XP, EE_SRC_Q_LD_XP, EE_VMULAS_...
    SStream_concat0(O, ", ");
    break;
  case 33:
    // EE_CMUL_S16_ST_INCP, EE_VADDS_S16_ST_INCP, EE_VADDS_S32_ST_INCP, EE_VA...
    printOperand(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    break;
  case 34:
    // EE_FFT_VST_R32_DECP
    printSelect_2_AsmOperand(MI, 3, O);
    return;
    break;
  case 35:
    // EE_LD_128_USAR_IP, EE_VLD_128_IP, EE_VST_128_IP
    printOffset_256_16_AsmOperand(MI, 3, O);
    return;
    break;
  case 36:
    // EE_VLDBC_16_IP
    printOffset_128_2_AsmOperand(MI, 3, O);
    return;
    break;
  case 37:
    // EE_VLDBC_32_IP
    printOffset_256_4_AsmOperand(MI, 3, O);
    return;
    break;
  case 38:
    // EE_VLDBC_8_IP
    printOffset_128_1_AsmOperand(MI, 3, O);
    return;
    break;
  case 39:
    // EE_VLD_H_64_IP, EE_VLD_L_64_IP, EE_VST_H_64_IP, EE_VST_L_64_IP
    printOffset_256_8_AsmOperand(MI, 3, O);
    return;
    break;
  case 40:
    // EE_VMULAS_S16_ACCX_LD_IP, EE_VMULAS_S16_QACC_LD_IP, EE_VMULAS_S8_ACCX_...
    printOffset_64_16_AsmOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    return;
    break;
  case 41:
    // L32E, S32E
    printImm64n_4n_AsmOperand(MI, 2, O);
    return;
    break;
  case 42:
    // LSIP, SSIP
    printOffset8m32_AsmOperand(MI, 3, O);
    return;
    break;
  case 43:
    // SLLI
    printShimm0_31_AsmOperand(MI, 2, O);
    return;
    break;
  case 44:
    // _SLLI
    printShimm1_31_AsmOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 5 encoded into 3 bits for 5 unique commands.
  switch ((Bits >> 35) & 7) {
  default: CS_ASSERT_RET(0 && "Invalid command number.");
  case 0:
    // ATOMIC_CMP_SWAP_16_P, ATOMIC_CMP_SWAP_32_P, ATOMIC_CMP_SWAP_8_P, BRCC_...
    SStream_concat0(O, ", ");
    break;
  case 1:
    // ATOMIC_LOAD_ADD_16_P, ATOMIC_LOAD_ADD_32_P, ATOMIC_LOAD_ADD_8_P, ATOMI...
    return;
    break;
  case 2:
    // EE_CMUL_S16_LD_INCP
    printSelect_4_AsmOperand(MI, 6, O);
    return;
    break;
  case 3:
    // EE_FFT_CMUL_S16_LD_XP
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 6, O);
    SStream_concat0(O, ", ");
    printSelect_8_AsmOperand(MI, 7, O);
    return;
    break;
  case 4:
    // EE_SRC_Q_LD_XP, EE_VMULAS_S16_ACCX_LD_XP_QUP, EE_VMULAS_S16_QACC_LDBC_...
    printOperand(MI, 5, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 6, O);
    break;
  }


  // Fragment 6 encoded into 4 bits for 15 unique commands.
  switch ((Bits >> 38) & 15) {
  default: CS_ASSERT_RET(0 && "Invalid command number.");
  case 0:
    // ATOMIC_CMP_SWAP_16_P, ATOMIC_CMP_SWAP_32_P, ATOMIC_CMP_SWAP_8_P, EE_FF...
    printOperand(MI, 3, O);
    break;
  case 1:
    // BRCC_FP
    printBranchTarget(MI, 3, O);
    return;
    break;
  case 2:
    // EE_CMUL_S16_LD_INCP_P, EE_CMUL_S16_ST_INCP_P, EE_FFT_AMS_S16_LD_INCP_P...
    printImm8_AsmOperand(MI, 3, O);
    break;
  case 3:
    // EE_CMUL_S16_P, EE_LDXQ_32_P, EE_STXQ_32_P, EE_CMUL_S16, EE_LDXQ_32, EE...
    printSelect_4_AsmOperand(MI, 3, O);
    break;
  case 4:
    // EE_LDF_64_IP_P, EE_STF_64_IP_P
    printOffset_256_8_AsmOperand(MI, 3, O);
    return;
    break;
  case 5:
    // EE_VMULAS_S16_ACCX_LD_IP_QUP_P, EE_VMULAS_S16_QACC_LD_IP_QUP_P, EE_VMU...
    printImm8_AsmOperand(MI, 5, O);
    SStream_concat0(O, ", ");
    printImm8_AsmOperand(MI, 6, O);
    return;
    break;
  case 6:
    // AE_MULAFD24X2_FIR_H, AE_MULAFD24X2_FIR_L, AE_MULAFD32X16X2_FIR_HH, AE_...
    printOperand(MI, 6, O);
    return;
    break;
  case 7:
    // AE_SEL16I, AE_TRUNCI32F64S_L, AE_TRUNCI32X2F64S
    printUimm4_AsmOperand(MI, 3, O);
    return;
    break;
  case 8:
    // AE_SEL16I_N
    printImmOperand_0_3_1(MI, 3, O);
    return;
    break;
  case 9:
    // EE_CMUL_S16_ST_INCP
    printSelect_4_AsmOperand(MI, 6, O);
    return;
    break;
  case 10:
    // EE_FFT_CMUL_S16_ST_XP, EE_FFT_R2BF_S16_ST_INCP, EE_LDF_64_XP, EE_STF_1...
    printOperand(MI, 4, O);
    break;
  case 11:
    // EE_LDF_64_IP, EE_STF_64_IP
    printOffset_256_8_AsmOperand(MI, 4, O);
    return;
    break;
  case 12:
    // EE_SRC_Q_LD_XP
    return;
    break;
  case 13:
    // EE_VMULAS_S16_ACCX_LD_XP_QUP, EE_VMULAS_S16_QACC_LDBC_INCP_QUP, EE_VMU...
    SStream_concat0(O, ", ");
    printOperand(MI, 7, O);
    break;
  case 14:
    // EXTUI
    printImm1_16_AsmOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 7 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 42) & 1) {
    // EE_CMUL_S16_LD_INCP_P, EE_CMUL_S16_ST_INCP_P, EE_FFT_AMS_S16_LD_INCP_P...
    SStream_concat0(O, ", ");
  } else {
    // ATOMIC_CMP_SWAP_16_P, ATOMIC_CMP_SWAP_32_P, ATOMIC_CMP_SWAP_8_P, EE_CM...
    return;
  }


  // Fragment 8 encoded into 4 bits for 11 unique commands.
  switch ((Bits >> 43) & 15) {
  default: CS_ASSERT_RET(0 && "Invalid command number.");
  case 0:
    // EE_CMUL_S16_LD_INCP_P, EE_CMUL_S16_ST_INCP_P, EE_FFT_AMS_S16_LD_INCP_P...
    printImm8_AsmOperand(MI, 4, O);
    break;
  case 1:
    // EE_FFT_CMUL_S16_ST_XP_P, EE_LDF_128_IP_P, EE_LDF_128_XP_P, EE_STF_128_...
    printOperand(MI, 4, O);
    break;
  case 2:
    // EE_FFT_R2BF_S16_P, EE_FFT_R2BF_S16
    printSelect_2_AsmOperand(MI, 4, O);
    return;
    break;
  case 3:
    // EE_FFT_R2BF_S16_ST_INCP_P
    printSelect_4_AsmOperand(MI, 4, O);
    return;
    break;
  case 4:
    // EE_LDXQ_32_P, EE_STXQ_32_P, EE_VSMULAS_S16_QACC_LD_INCP_P, EE_LDXQ_32,...
    printSelect_8_AsmOperand(MI, 4, O);
    return;
    break;
  case 5:
    // EE_VSMULAS_S8_QACC_LD_INCP_P
    printSelect_16_AsmOperand(MI, 4, O);
    return;
    break;
  case 6:
    // EE_FFT_AMS_S16_LD_INCP, EE_FFT_AMS_S16_LD_INCP_UAUP, EE_FFT_AMS_S16_LD...
    printOperand(MI, 5, O);
    break;
  case 7:
    // EE_FFT_R2BF_S16_ST_INCP
    printSelect_4_AsmOperand(MI, 5, O);
    return;
    break;
  case 8:
    // EE_VMULAS_S16_ACCX_LD_XP_QUP, EE_VMULAS_S16_QACC_LD_XP_QUP, EE_VMULAS_...
    printOperand(MI, 8, O);
    return;
    break;
  case 9:
    // EE_VSMULAS_S16_QACC_LD_INCP
    printSelect_8_AsmOperand(MI, 5, O);
    return;
    break;
  case 10:
    // EE_VSMULAS_S8_QACC_LD_INCP
    printSelect_16_AsmOperand(MI, 5, O);
    return;
    break;
  }


  // Fragment 9 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 47) & 1) {
    // EE_SRC_Q_LD_IP_P, EE_SRC_Q_LD_XP_P, EE_VADDS_S16_LD_INCP_P, EE_VADDS_S...
    return;
  } else {
    // EE_CMUL_S16_LD_INCP_P, EE_CMUL_S16_ST_INCP_P, EE_FFT_AMS_S16_LD_INCP_P...
    SStream_concat0(O, ", ");
  }


  // Fragment 10 encoded into 3 bits for 8 unique commands.
  switch ((Bits >> 48) & 7) {
  default: CS_ASSERT_RET(0 && "Invalid command number.");
  case 0:
    // EE_CMUL_S16_LD_INCP_P, EE_CMUL_S16_ST_INCP_P
    printSelect_4_AsmOperand(MI, 5, O);
    return;
    break;
  case 1:
    // EE_FFT_AMS_S16_LD_INCP_P, EE_FFT_AMS_S16_LD_INCP_UAUP_P, EE_FFT_AMS_S1...
    printImm8_AsmOperand(MI, 5, O);
    break;
  case 2:
    // EE_FFT_CMUL_S16_ST_XP_P
    printSelect_8_AsmOperand(MI, 5, O);
    SStream_concat0(O, ", ");
    printSelect_4_AsmOperand(MI, 6, O);
    SStream_concat0(O, ", ");
    printSelect_4_AsmOperand(MI, 7, O);
    return;
    break;
  case 3:
    // EE_LDF_128_IP_P, EE_STF_128_IP_P
    printOffset_16_16_AsmOperand(MI, 5, O);
    return;
    break;
  case 4:
    // EE_LDF_128_XP_P, EE_STF_128_XP_P, SELECT, SELECT_CC_FP_FP, SELECT_CC_F...
    printOperand(MI, 5, O);
    return;
    break;
  case 5:
    // EE_FFT_AMS_S16_LD_INCP, EE_FFT_AMS_S16_LD_INCP_UAUP, EE_FFT_AMS_S16_LD...
    printOperand(MI, 6, O);
    break;
  case 6:
    // EE_FFT_CMUL_S16_ST_XP
    printSelect_8_AsmOperand(MI, 6, O);
    SStream_concat0(O, ", ");
    printSelect_4_AsmOperand(MI, 7, O);
    SStream_concat0(O, ", ");
    printSelect_4_AsmOperand(MI, 8, O);
    return;
    break;
  case 7:
    // EE_LDF_128_IP, EE_STF_128_IP
    printOffset_16_16_AsmOperand(MI, 6, O);
    return;
    break;
  }


  // Fragment 11 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 51) & 1) {
    // EE_VMULAS_S16_QACC_LDBC_INCP_QUP_P, EE_VMULAS_S8_QACC_LDBC_INCP_QUP_P,...
    return;
  } else {
    // EE_FFT_AMS_S16_LD_INCP_P, EE_FFT_AMS_S16_LD_INCP_UAUP_P, EE_FFT_AMS_S1...
    SStream_concat0(O, ", ");
  }


  // Fragment 12 encoded into 2 bits for 3 unique commands.
  switch ((Bits >> 52) & 3) {
  default: CS_ASSERT_RET(0 && "Invalid command number.");
  case 0:
    // EE_FFT_AMS_S16_LD_INCP_P, EE_FFT_AMS_S16_LD_INCP_UAUP_P, EE_FFT_AMS_S1...
    printImm8_AsmOperand(MI, 6, O);
    break;
  case 1:
    // EE_FFT_CMUL_S16_LD_XP_P
    printSelect_8_AsmOperand(MI, 6, O);
    return;
    break;
  case 2:
    // EE_FFT_AMS_S16_LD_INCP, EE_FFT_AMS_S16_LD_INCP_UAUP, EE_FFT_AMS_S16_LD...
    printOperand(MI, 7, O);
    SStream_concat0(O, ", ");
    printSelect_2_AsmOperand(MI, 8, O);
    return;
    break;
  }


  // Fragment 13 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 54) & 1) {
    // EE_VMULAS_S16_ACCX_LD_XP_QUP_P, EE_VMULAS_S16_QACC_LD_XP_QUP_P, EE_VMU...
    return;
  } else {
    // EE_FFT_AMS_S16_LD_INCP_P, EE_FFT_AMS_S16_LD_INCP_UAUP_P, EE_FFT_AMS_S1...
    SStream_concat0(O, ", ");
    printSelect_2_AsmOperand(MI, 7, O);
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
static const char *getRegisterName(unsigned RegNo) {
#ifndef CAPSTONE_DIET
  CS_ASSERT_RET_VAL(RegNo && RegNo < 170 && "Invalid register number!", NULL);

  static const char AsmStrs[] = {
  /* 0 */ "a10\0"
  /* 4 */ "b10\0"
  /* 8 */ "aed10\0"
  /* 14 */ "f10\0"
  /* 18 */ "dbreaka0\0"
  /* 27 */ "ibreaka0\0"
  /* 36 */ "b0\0"
  /* 39 */ "dbreakc0\0"
  /* 48 */ "misc0\0"
  /* 54 */ "aed0\0"
  /* 59 */ "configid0\0"
  /* 69 */ "ccompare0\0"
  /* 79 */ "f0\0"
  /* 82 */ "m0\0"
  /* 85 */ "q0\0"
  /* 88 */ "u0\0"
  /* 91 */ "B8_B9_B10_B11\0"
  /* 105 */ "a11\0"
  /* 109 */ "b11\0"
  /* 113 */ "aed11\0"
  /* 119 */ "f11\0"
  /* 123 */ "B0_B1\0"
  /* 129 */ "dbreaka1\0"
  /* 138 */ "ibreaka1\0"
  /* 147 */ "b1\0"
  /* 150 */ "dbreakc1\0"
  /* 159 */ "epc1\0"
  /* 164 */ "misc1\0"
  /* 170 */ "aed1\0"
  /* 175 */ "configid1\0"
  /* 185 */ "ccompare1\0"
  /* 195 */ "scompare1\0"
  /* 205 */ "excsave1\0"
  /* 214 */ "f1\0"
  /* 217 */ "m1\0"
  /* 220 */ "q1\0"
  /* 223 */ "u1\0"
  /* 226 */ "a12\0"
  /* 230 */ "b12\0"
  /* 234 */ "aed12\0"
  /* 240 */ "f12\0"
  /* 244 */ "a2\0"
  /* 247 */ "b2\0"
  /* 250 */ "epc2\0"
  /* 255 */ "misc2\0"
  /* 261 */ "aed2\0"
  /* 266 */ "ccompare2\0"
  /* 276 */ "excsave2\0"
  /* 285 */ "f2\0"
  /* 288 */ "m2\0"
  /* 291 */ "q2\0"
  /* 294 */ "eps2\0"
  /* 299 */ "u2\0"
  /* 302 */ "B12_B13\0"
  /* 310 */ "a13\0"
  /* 314 */ "b13\0"
  /* 318 */ "aed13\0"
  /* 324 */ "f13\0"
  /* 328 */ "B0_B1_B2_B3\0"
  /* 340 */ "a3\0"
  /* 343 */ "b3\0"
  /* 346 */ "epc3\0"
  /* 351 */ "misc3\0"
  /* 357 */ "aed3\0"
  /* 362 */ "excsave3\0"
  /* 371 */ "f3\0"
  /* 374 */ "m3\0"
  /* 377 */ "q3\0"
  /* 380 */ "eps3\0"
  /* 385 */ "u3\0"
  /* 388 */ "a14\0"
  /* 392 */ "b14\0"
  /* 396 */ "aed14\0"
  /* 402 */ "f14\0"
  /* 406 */ "a4\0"
  /* 409 */ "b4\0"
  /* 412 */ "epc4\0"
  /* 417 */ "aed4\0"
  /* 422 */ "excsave4\0"
  /* 431 */ "f4\0"
  /* 434 */ "q4\0"
  /* 437 */ "eps4\0"
  /* 442 */ "B12_B13_B14_B15\0"
  /* 458 */ "a15\0"
  /* 462 */ "b15\0"
  /* 466 */ "aed15\0"
  /* 472 */ "f15\0"
  /* 476 */ "B4_B5\0"
  /* 482 */ "a5\0"
  /* 485 */ "b5\0"
  /* 488 */ "epc5\0"
  /* 493 */ "aed5\0"
  /* 498 */ "excsave5\0"
  /* 507 */ "f5\0"
  /* 510 */ "q5\0"
  /* 513 */ "eps5\0"
  /* 518 */ "a6\0"
  /* 521 */ "b6\0"
  /* 524 */ "epc6\0"
  /* 529 */ "aed6\0"
  /* 534 */ "excsave6\0"
  /* 543 */ "f6\0"
  /* 546 */ "q6\0"
  /* 549 */ "eps6\0"
  /* 554 */ "B4_B5_B6_B7\0"
  /* 566 */ "a7\0"
  /* 569 */ "b7\0"
  /* 572 */ "epc7\0"
  /* 577 */ "aed7\0"
  /* 582 */ "excsave7\0"
  /* 591 */ "f7\0"
  /* 594 */ "q7\0"
  /* 597 */ "eps7\0"
  /* 602 */ "a8\0"
  /* 605 */ "b8\0"
  /* 608 */ "aed8\0"
  /* 613 */ "f8\0"
  /* 616 */ "B8_B9\0"
  /* 622 */ "a9\0"
  /* 625 */ "b9\0"
  /* 628 */ "aed9\0"
  /* 633 */ "f9\0"
  /* 636 */ "qacc\0"
  /* 641 */ "depc\0"
  /* 646 */ "prid\0"
  /* 651 */ "lend\0"
  /* 656 */ "ibreakenable\0"
  /* 669 */ "cpenable\0"
  /* 678 */ "intenable\0"
  /* 688 */ "vecbase\0"
  /* 696 */ "litbase\0"
  /* 704 */ "windowbase\0"
  /* 715 */ "exccause\0"
  /* 724 */ "debugcause\0"
  /* 735 */ "ua_state\0"
  /* 744 */ "expstate\0"
  /* 753 */ "sar_byte\0"
  /* 762 */ "lbeg\0"
  /* 767 */ "fft_bit_width\0"
  /* 781 */ "f64r_hi\0"
  /* 789 */ "acchi\0"
  /* 795 */ "icountlevel\0"
  /* 807 */ "memctl\0"
  /* 814 */ "atomctl\0"
  /* 822 */ "f64r_lo\0"
  /* 830 */ "acclo\0"
  /* 836 */ "intclear\0"
  /* 845 */ "sar\0"
  /* 849 */ "br\0"
  /* 852 */ "fcr\0"
  /* 856 */ "excvaddr\0"
  /* 865 */ "fsr\0"
  /* 869 */ "threadptr\0"
  /* 879 */ "f64s\0"
  /* 884 */ "ps\0"
  /* 887 */ "ccount\0"
  /* 894 */ "icount\0"
  /* 901 */ "lcount\0"
  /* 908 */ "interrupt\0"
  /* 918 */ "windowstart\0"
  /* 930 */ "gpio_out\0"
  /* 939 */ "accx\0"
};
  static const uint16_t RegAsmOffset[] = {
    789, 830, 939, 814, 849, 887, 669, 861, 724, 641, 715, 856, 744, 852, 
    767, 865, 930, 656, 894, 795, 836, 678, 908, 762, 901, 651, 696, 807, 
    646, 884, 636, 845, 753, 135, 869, 735, 688, 704, 918, 24, 244, 340, 
    406, 482, 518, 566, 602, 622, 0, 105, 226, 310, 388, 458, 54, 170, 
    261, 357, 417, 493, 529, 577, 608, 628, 8, 113, 234, 318, 396, 466, 
    36, 147, 247, 343, 409, 485, 521, 569, 605, 625, 4, 109, 230, 314, 
    392, 462, 69, 185, 266, 59, 175, 18, 129, 39, 150, 159, 250, 346, 
    412, 488, 524, 572, 294, 380, 437, 513, 549, 597, 205, 276, 362, 422, 
    498, 534, 582, 79, 214, 285, 371, 431, 507, 543, 591, 613, 633, 14, 
    119, 240, 324, 402, 472, 27, 138, 82, 217, 288, 374, 48, 164, 255, 
    351, 85, 220, 291, 377, 434, 510, 546, 594, 195, 88, 223, 299, 385, 
    781, 822, 879, 123, 334, 476, 560, 616, 97, 302, 450, 328, 554, 91, 
    442, 
  };

  CS_ASSERT_RET_VAL(*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!", NULL);
  return AsmStrs+RegAsmOffset[RegNo-1];
#else
  return NULL;
#endif // CAPSTONE_DIET
}
#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

static bool printAliasInstr(MCInst *MI, uint64_t Address, SStream *OS) {
#ifndef CAPSTONE_DIET
  static const PatternsForOpcode OpToPatterns[] = {
    {Xtensa_ADD, 0, 1 },
    {Xtensa_ADDI, 1, 1 },
    {Xtensa_ADDI_N, 2, 1 },
    {Xtensa_ADD_N, 3, 1 },
    {Xtensa_BALL, 4, 1 },
    {Xtensa_BANY, 5, 1 },
    {Xtensa_BBC, 6, 1 },
    {Xtensa_BBS, 7, 1 },
    {Xtensa_BEQ, 8, 1 },
    {Xtensa_BEQI, 9, 1 },
    {Xtensa_BEQZ, 10, 1 },
    {Xtensa_BF, 11, 1 },
    {Xtensa_BGE, 12, 1 },
    {Xtensa_BGEI, 13, 1 },
    {Xtensa_BGEU, 14, 1 },
    {Xtensa_BGEUI, 15, 1 },
    {Xtensa_BGEZ, 16, 1 },
    {Xtensa_BLT, 17, 1 },
    {Xtensa_BLTI, 18, 1 },
    {Xtensa_BLTU, 19, 1 },
    {Xtensa_BLTUI, 20, 1 },
    {Xtensa_BLTZ, 21, 1 },
    {Xtensa_BNALL, 22, 1 },
    {Xtensa_BNE, 23, 1 },
    {Xtensa_BNEI, 24, 1 },
    {Xtensa_BNEZ, 25, 1 },
    {Xtensa_BNONE, 26, 1 },
    {Xtensa_BREAK_N, 27, 1 },
    {Xtensa_BT, 28, 1 },
    {Xtensa_LOOP, 29, 1 },
    {Xtensa_LOOPGTZ, 30, 1 },
    {Xtensa_LOOPNEZ, 31, 1 },
    {Xtensa_MOVI_N, 32, 1 },
    {Xtensa_NOP, 33, 1 },
    {Xtensa_OR, 34, 1 },
    {Xtensa_RET, 35, 1 },
    {Xtensa_RETW, 36, 1 },
    {Xtensa_RETW_N, 37, 1 },
    {Xtensa_RET_N, 38, 1 },
  {0},  };

  static const AliasPattern Patterns[] = {
    // Xtensa_ADD - 0
    {0, 0, 3, 3 },
    // Xtensa_ADDI - 1
    {16, 3, 3, 2 },
    // Xtensa_ADDI_N - 2
    {35, 5, 3, 2 },
    // Xtensa_ADD_N - 3
    {56, 7, 3, 3 },
    // Xtensa_BALL - 4
    {74, 10, 3, 2 },
    // Xtensa_BANY - 5
    {93, 12, 3, 2 },
    // Xtensa_BBC - 6
    {112, 14, 3, 2 },
    // Xtensa_BBS - 7
    {130, 16, 3, 2 },
    // Xtensa_BEQ - 8
    {148, 18, 3, 2 },
    // Xtensa_BEQI - 9
    {166, 20, 3, 2 },
    // Xtensa_BEQZ - 10
    {187, 22, 2, 1 },
    // Xtensa_BF - 11
    {202, 23, 2, 1 },
    // Xtensa_BGE - 12
    {215, 24, 3, 2 },
    // Xtensa_BGEI - 13
    {233, 26, 3, 2 },
    // Xtensa_BGEU - 14
    {254, 28, 3, 2 },
    // Xtensa_BGEUI - 15
    {273, 30, 3, 2 },
    // Xtensa_BGEZ - 16
    {295, 32, 2, 1 },
    // Xtensa_BLT - 17
    {310, 33, 3, 2 },
    // Xtensa_BLTI - 18
    {328, 35, 3, 2 },
    // Xtensa_BLTU - 19
    {349, 37, 3, 2 },
    // Xtensa_BLTUI - 20
    {368, 39, 3, 2 },
    // Xtensa_BLTZ - 21
    {390, 41, 2, 1 },
    // Xtensa_BNALL - 22
    {405, 42, 3, 2 },
    // Xtensa_BNE - 23
    {425, 44, 3, 2 },
    // Xtensa_BNEI - 24
    {443, 46, 3, 2 },
    // Xtensa_BNEZ - 25
    {464, 48, 2, 1 },
    // Xtensa_BNONE - 26
    {479, 49, 3, 2 },
    // Xtensa_BREAK_N - 27
    {499, 51, 1, 0 },
    // Xtensa_BT - 28
    {513, 51, 2, 1 },
    // Xtensa_LOOP - 29
    {526, 52, 2, 1 },
    // Xtensa_LOOPGTZ - 30
    {541, 53, 2, 1 },
    // Xtensa_LOOPNEZ - 31
    {559, 54, 2, 1 },
    // Xtensa_MOVI_N - 32
    {577, 55, 2, 1 },
    // Xtensa_NOP - 33
    {594, 56, 0, 0 },
    // Xtensa_OR - 34
    {599, 56, 3, 3 },
    // Xtensa_RET - 35
    {611, 59, 0, 0 },
    // Xtensa_RETW - 36
    {616, 59, 0, 0 },
    // Xtensa_RETW_N - 37
    {622, 59, 0, 0 },
    // Xtensa_RET_N - 38
    {630, 59, 0, 0 },
  {0},  };

  static const AliasPatternCond Conds[] = {
    // (ADD AR:$r, AR:$s, AR:$t) - 0
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (ADDI AR:$r, AR:$s, imm8:$imm8) - 3
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (ADDI_N AR:$r, AR:$s, imm1n_15:$imm) - 5
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (ADD_N AR:$r, AR:$s, AR:$t) - 7
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BALL AR:$s, AR:$t, brtarget:$target) - 10
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BANY AR:$s, AR:$t, brtarget:$target) - 12
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BBC AR:$s, AR:$t, brtarget:$target) - 14
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BBS AR:$s, AR:$t, brtarget:$target) - 16
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BEQ AR:$s, AR:$t, brtarget:$target) - 18
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BEQI AR:$s, b4const:$imm, brtarget:$target) - 20
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    // (BEQZ AR:$s, brtarget:$target) - 22
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BF BR:$b, brtarget:$target) - 23
    {AliasPatternCond_K_RegClass, Xtensa_BRRegClassID},
    // (BGE AR:$s, AR:$t, brtarget:$target) - 24
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BGEI AR:$s, b4const:$imm, brtarget:$target) - 26
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    // (BGEU AR:$s, AR:$t, brtarget:$target) - 28
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BGEUI AR:$s, b4constu:$imm, brtarget:$target) - 30
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    // (BGEZ AR:$s, brtarget:$target) - 32
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BLT AR:$s, AR:$t, brtarget:$target) - 33
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BLTI AR:$s, b4const:$imm, brtarget:$target) - 35
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    // (BLTU AR:$s, AR:$t, brtarget:$target) - 37
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BLTUI AR:$s, b4constu:$imm, brtarget:$target) - 39
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    // (BLTZ AR:$s, brtarget:$target) - 41
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BNALL AR:$s, AR:$t, brtarget:$target) - 42
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BNE AR:$s, AR:$t, brtarget:$target) - 44
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BNEI AR:$s, b4const:$imm, brtarget:$target) - 46
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    // (BNEZ AR:$s, brtarget:$target) - 48
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BNONE AR:$s, AR:$t, brtarget:$target) - 49
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (BREAK_N uimm4:$imm) - 51
    // (BT BR:$b, brtarget:$target) - 51
    {AliasPatternCond_K_RegClass, Xtensa_BRRegClassID},
    // (LOOP AR:$s, ltarget:$target) - 52
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (LOOPGTZ AR:$s, ltarget:$target) - 53
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (LOOPNEZ AR:$s, ltarget:$target) - 54
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (MOVI_N AR:$s, imm32n_95:$imm7) - 55
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    // (NOP) - 56
    // (OR AR:$t, AR:$s, AR:$s) - 56
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_RegClass, Xtensa_ARRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (RET) - 59
    // (RETW) - 59
    // (RETW_N) - 59
    // (RET_N) - 59
  {0},  };

  static const char AsmStrings[] =
    /* 0 */ "_add	$\x01, $\x02, $\x03\0"
    /* 16 */ "_addi	$\x01, $\x02, $\xFF\x03\x01\0"
    /* 35 */ "_addi.n	$\x01, $\x02, $\xFF\x03\x02\0"
    /* 56 */ "_add.n	$\x01, $\x02, $\x03\0"
    /* 74 */ "_ball	$\x01, $\x02, $\xFF\x03\x03\0"
    /* 93 */ "_bany	$\x01, $\x02, $\xFF\x03\x03\0"
    /* 112 */ "_bbc	$\x01, $\x02, $\xFF\x03\x03\0"
    /* 130 */ "_bbs	$\x01, $\x02, $\xFF\x03\x03\0"
    /* 148 */ "_beq	$\x01, $\x02, $\xFF\x03\x03\0"
    /* 166 */ "_beqi	$\x01, $\xFF\x02\x05, $\xFF\x03\x03\0"
    /* 187 */ "_beqz	$\x01, $\xFF\x02\x03\0"
    /* 202 */ "_BF	$\x01, $\xFF\x02\x03\0"
    /* 215 */ "_bge	$\x01, $\x02, $\xFF\x03\x03\0"
    /* 233 */ "_bgei	$\x01, $\xFF\x02\x05, $\xFF\x03\x03\0"
    /* 254 */ "_bgeu	$\x01, $\x02, $\xFF\x03\x03\0"
    /* 273 */ "_bgeui	$\x01, $\xFF\x02\x06, $\xFF\x03\x03\0"
    /* 295 */ "_bgez	$\x01, $\xFF\x02\x03\0"
    /* 310 */ "_blt	$\x01, $\x02, $\xFF\x03\x03\0"
    /* 328 */ "_blti	$\x01, $\xFF\x02\x05, $\xFF\x03\x03\0"
    /* 349 */ "_bltu	$\x01, $\x02, $\xFF\x03\x03\0"
    /* 368 */ "_bltui	$\x01, $\xFF\x02\x06, $\xFF\x03\x03\0"
    /* 390 */ "_bltz	$\x01, $\xFF\x02\x03\0"
    /* 405 */ "_bnall	$\x01, $\x02, $\xFF\x03\x03\0"
    /* 425 */ "_bne	$\x01, $\x02, $\xFF\x03\x03\0"
    /* 443 */ "_bnei	$\x01, $\xFF\x02\x05, $\xFF\x03\x03\0"
    /* 464 */ "_bnez	$\x01, $\xFF\x02\x03\0"
    /* 479 */ "_bnone	$\x01, $\x02, $\xFF\x03\x03\0"
    /* 499 */ "_break.n	$\xFF\x01\x07\0"
    /* 513 */ "_BT	$\x01, $\xFF\x02\x03\0"
    /* 526 */ "_loop	$\x01, $\xFF\x02\x08\0"
    /* 541 */ "_loopgtz	$\x01, $\xFF\x02\x08\0"
    /* 559 */ "_loopnez	$\x01, $\xFF\x02\x08\0"
    /* 577 */ "_movi.n	$\x01, $\xFF\x02\x09\0"
    /* 594 */ "_nop\0"
    /* 599 */ "mov	 $\x01, $\x02\0"
    /* 611 */ "_ret\0"
    /* 616 */ "_retw\0"
    /* 622 */ "_retw.n\0"
    /* 630 */ "_ret.n\0"
  ;

#ifndef NDEBUG
  //static struct SortCheck {
  //  SortCheck(ArrayRef<PatternsForOpcode> OpToPatterns) {
  //    assert(std::is_sorted(
  //               OpToPatterns.begin(), OpToPatterns.end(),
  //               [](const PatternsForOpcode &L, const //PatternsForOpcode &R) {
  //                 return L.Opcode < R.Opcode;
  //               }) &&
  //           "tablegen failed to sort opcode patterns");
  //  }
  //} sortCheckVar(OpToPatterns);
#endif

  AliasMatchingData M = {
    OpToPatterns,
    Patterns,
    Conds,
    AsmStrings,
    NULL,
  };
  const char *AsmString = matchAliasPatterns(MI, &M);
  if (!AsmString) return false;

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  SStream_concat1(OS, '\t');
  char *substr = malloc(I+1);
  memcpy(substr, AsmString, I);
  substr[I] = '\0';
  SStream_concat0(OS, substr);
  free(substr);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t') {
      SStream_concat1(OS, '\t');
      ++I;
    }
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, Address, OpIdx, PrintMethodIdx, OS);
        } else
          printOperand(MI, ((unsigned)AsmString[I++]) - 1, OS);
      } else {
        SStream_concat1(OS, AsmString[I++]);
      }
    } while (AsmString[I] != '\0');
  }

  return true;
#else
  return false;
#endif // CAPSTONE_DIET
}

static void printCustomAliasOperand(
         MCInst *MI, uint64_t Address, unsigned OpIdx,
         unsigned PrintMethodIdx,
         SStream *OS) {
#ifndef CAPSTONE_DIET
  switch (PrintMethodIdx) {
  default:
    CS_ASSERT_RET(0 && "Unknown PrintMethod kind");
    break;
  case 0:
    printImm8_AsmOperand(MI, OpIdx, OS);
    break;
  case 1:
    printImm1n_15_AsmOperand(MI, OpIdx, OS);
    break;
  case 2:
    printBranchTarget(MI, OpIdx, OS);
    break;
  case 3:
    printUimm5_AsmOperand(MI, OpIdx, OS);
    break;
  case 4:
    printB4const_AsmOperand(MI, OpIdx, OS);
    break;
  case 5:
    printB4constu_AsmOperand(MI, OpIdx, OS);
    break;
  case 6:
    printUimm4_AsmOperand(MI, OpIdx, OS);
    break;
  case 7:
    printLoopTarget(MI, OpIdx, OS);
    break;
  case 8:
    printImm32n_95_AsmOperand(MI, OpIdx, OS);
    break;
  }
#endif // CAPSTONE_DIET
}

#endif // PRINT_ALIAS_INSTR
